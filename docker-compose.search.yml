---
version: '3.9'
volumes:
  opensearch_data:
services:
  opensearch:
    image: opensearchproject/opensearch:2.1.0
    environment:
      discovery.type: single-node
    healthcheck:
      test: curl -s -f -k https://admin:admin@opensearch:9200/_cat/health >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - opensearch_data:/usr/share/opensearch/data

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.1.0
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch:9200"]' # must be a string with no spaces when specified as an environment variable
    depends_on:
      opensearch:
        condition: service_healthy
    ports:
      - "5601:5601"

  search-ingester:
    image: jeffail/benthos:3.65
    command: -w -c /config/config.yml
    depends_on:
      opensearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      KAFKA_ADDRESS: kafka:9092
      KAFKA_TOPIC: ledger,payments
      OPENSEARCH_URL: https://opensearch:9200
      HTTP_CLIENT_TLS_SKIP_CERT_VERIFY: "true"
      HTTP_CLIENT_TLS_ENABLED: "true"
      BASIC_AUTH_ENABLED: "true"
      BASIC_AUTH_USERNAME: "admin"
      BASIC_AUTH_PASSWORD: "admin"
      INDEX: "formance"
    volumes:
      - ./config/search/benthos:/config

  search:
    image: "ghcr.io/numary/search:8f38948dba5b618fa669959f33a2d35fdb51588c"
    depends_on:
      opensearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      OPEN_SEARCH_SCHEME: https
      OPEN_SEARCH_SERVICE: "admin:admin@opensearch:9200"
      ES_INDICES: "formance"
    labels:
      - traefik.enable=true
      - traefik.http.routers.search.rule=Host(`localhost`) && PathPrefix(`/search`)
      - traefik.http.routers.search.entrypoints=web
      - traefik.http.services.search.loadbalancer.server.port=8080
      - traefik.http.middlewares.search.stripprefix.prefixes=/search
      - traefik.http.routers.search.middlewares=search@docker