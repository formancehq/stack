name: Default - PR
on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]

jobs:
  PR:
    name: Check PR Title
    runs-on: ubuntu-latest
    steps:
      - uses: aslafy-z/conventional-pr-title-action@v3.0.0
        with:
          success-state: Title follows the specification.
          failure-state: Title does not follow the specification.
          context-name: conventional-pr-title
          preset: conventional-changelog-angular@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  Moon:
    runs-on: 'ubuntu-latest'
    strategy:
       matrix:
         index: [0, 1, 2, 3, 4, 5]
    steps:
      - uses: 'actions/checkout@v3'
        with:
          fetch-depth: 0
      - name: Cache Moon
        id: cache-moon
        uses: actions/cache@v3
        with:
          path: .moon/cache
          key: ${{ runner.os }}-moon-cache
      - uses: 'actions/setup-node@v3'
      - uses: 'actions/setup-go@v4'
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - run: 'yarn global add @moonrepo/cli'
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          install-only: true
      - name: direnv action
        uses: HatsuneMiku3939/direnv-action@v1
      - name: 'install go deps'
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2
          go install github.com/onsi/ginkgo/v2/ginkgo@v2.8.3
      - run: 'moon ci --job ${{ matrix.index }} --jobTotal 6'
      - uses: 'moonrepo/run-report-action@v1'
        if: success() || failure()
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}

#  TestsIntegration:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - uses: actions/setup-go@v3
#        with:
#          go-version-file: ./tests/integration/go.mod
#          cache-dependency-path: ./tests/integration/go.sum
#          cache: true
#      - name: Install Task
#        uses: arduino/setup-task@v1
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#      # TOneverDO: Try to use a fixed Ginkgo version, Ginkgo infer it from the go.mod project (see https://onsi.github.io/ginkgo/#installing-ginkgo)
#      - run: |
#          go install github.com/onsi/ginkgo/v2/ginkgo &&
#          sudo ln -s $(go env GOPATH)/bin/ginkgo /usr/bin/ginkgo
#        working-directory: tests/integration
#      - run: task integration:tests
#        env:
#          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY_FOR_TEST }}
#          # TODO: Discover dynamically
#          DOCKER_HOSTNAME: 172.17.0.1
#  GoReleaser:
#    name: GoReleaser
#    runs-on:
#      group: enterprise/runners
#      labels: formance-ubuntu-latest-8-cores
#    needs:
#      - Find
#    strategy:
#      matrix:
#        folder: ${{ fromJson(needs.Find.outputs.folders )}}
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - uses: actions/setup-go@v3
#        with:
#          go-version-file: ./components/${{ matrix.folder }}/go.mod
#          cache-dependency-path: ./components/${{ matrix.folder }}/go.sum
#          cache: true
#      - run: go mod vendor
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: "NumaryBot"
#          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
#      - name: Run GoReleaser
#        uses: goreleaser/goreleaser-action@v4
#        with:
#          distribution: goreleaser-pro
#          version: latest
#          args: release --clean --nightly -f components/${{ matrix.folder }}/.goreleaser.yml
#        env:
#          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
#          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
#          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
#          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY_OSS }}
