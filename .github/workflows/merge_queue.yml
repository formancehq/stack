name: Merge Queue
on:
  merge_group:

jobs:
  Find:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.find.outputs.folders }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: echo "folders=$(node .github/actions/find-directory/index.js)" >> $GITHUB_OUTPUT
        id: find

  Lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.Find.outputs.folders )}}
    needs:
      - Find
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./components/${{ matrix.folder }}/go.mod
          cache-dependency-path: ./components/${{ matrix.folder }}/go.sum
          cache: true
      - name: go mod vendor
        run: |
          cd ./components/${{ matrix.folder }}
          go mod vendor
      - run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.51.2
      - run: task ${{ matrix.folder }}:lint

  Tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.Find.outputs.folders )}}
    needs:
      - Find
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./components/${{ matrix.folder }}/go.mod
          cache-dependency-path: ./components/${{ matrix.folder }}/go.sum
          cache: true
      - name: go mod vendor
        run: |
          cd ./components/${{ matrix.folder }}
          go mod vendor
      - run: task ${{ matrix.folder }}:tests
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./components/${{ matrix.folder }}
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)
          flags: ${{ matrix.folder }}
#
#  Docker:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        folder: ${{ fromJson(needs.Find.outputs.folders )}}
#    needs:
#      - Find
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install Task
#        uses: arduino/setup-task@v1
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - uses: actions/setup-go@v3
#        with:
#          go-version-file: ./components/${{ matrix.folder }}/go.mod
#          cache-dependency-path: ./components/${{ matrix.folder }}/go.sum
#          cache: true
#      - name: go mod vendor
#        run: |
#          cd ./components/${{ matrix.folder }}
#          go mod vendor
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: "NumaryBot"
#          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          file: ./components/${{ matrix.folder }}/Dockerfile
#          context: .
#          platforms: linux/amd64,linux/arm64
#          push: true
#          tags: ghcr.io/formancehq/${{ matrix.folder }}:main
#          build-args: |
#            APP_SHA=${{ github.event.pull_request.head.sha }}
#            VERSION=main
