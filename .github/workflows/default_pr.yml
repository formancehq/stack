name: Default - PR
on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]

jobs:
  PR:
    if: github.event_name == 'pull_request'
    name: Check PR Style
    runs-on: ubuntu-latest
    steps:
      - uses: aslafy-z/conventional-pr-title-action@v2.2.5
        with:
          success-state: Title follows the specification.
          failure-state: Title does not follow the specification.
          context-name: conventional-pr-title
          preset: conventional-changelog-angular@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  OpenAPI:
    uses: ./.github/workflows/service_pr_openapi.yaml
    with:
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      GITHUB_EVENT_ACTION: ${{ github.event.action }}
    secrets:
      NUMARY_GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}

#  Changes:
#    runs-on: ubuntu-latest
#    outputs:
#      wallets: ${{ steps.filter.outputs.wallets }}
#      search: ${{ steps.filter.outputs.search }}
#      fctl: ${{ steps.filter.outputs.fctl }}
#      auth: ${{ steps.filter.outputs.auth }}
#      ledger: ${{ steps.filter.outputs.ledger }}
#      payments: ${{ steps.filter.outputs.payments }}
#      webhooks: ${{ steps.filter.outputs.webhooks }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Check which services were modified
#        uses: dorny/paths-filter@v2
#        id: filter
#        with:
#          list-files: shell
#          filters: |
#            wallets: 'services/wallets/**'
#            search: 'services/search/**'
#            fctl: 'services/fctl/**'
#            auth: 'services/auth/**'
#            ledger: 'services/ledger/**'
#            payments: 'services/payments/**'
#            webhooks: 'services/webhooks/**'

  Find:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.jobs.outputs.folders }}
    steps:
      - uses: actions/checkout@v3
      - id: jobs
        uses: philips-labs/list-folders-action@v1
        with:
          path: ./services/

  Matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.Find.outputs.folders )}}
    needs:
      - Find
    uses: ./.github/workflows/service_${{ matrix.folder }}.yaml
    with:
      GITHUB_EVENT_NAME: ${{ github.event_name }}
      GITHUB_EVENT_ACTION: ${{ github.event.action }}


#  Wallets:
#    if: needs.Changes.outputs.wallets == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_wallets.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Search:
#    if: needs.Changes.outputs.search == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_search.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Fctl:
#    if: needs.Changes.outputs.fctl == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_fctl.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Auth:
#    if: needs.Changes.outputs.auth == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_auth.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Ledger:
#    if: needs.Changes.outputs.ledger == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_ledger.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Payments:
#    if: needs.Changes.outputs.payments == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_payments.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
#
#  Webhooks:
#    if: needs.Changes.outputs.webhooks == 'true'
#    needs: Changes
#    uses: ./.github/workflows/service_webhooks.yaml
#    with:
#      GITHUB_EVENT_NAME: ${{ github.event_name }}
#      GITHUB_EVENT_ACTION: ${{ github.event.action }}
