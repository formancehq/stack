name: Default
on:
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: "formance-runner"
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - name: Setup Env
        uses: ./.github/actions/env
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - run: 'earthly --no-output --allow-privileged --use-inline-cache --save-inline-cache --push --secret SPEAKEASY_API_KEY=$SPEAKEASY_API_KEY +lint-all'
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}

  Tests:
    runs-on: "formance-runner"
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - name: Setup Env
        uses: ./.github/actions/env
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - run: 'earthly --no-output --allow-privileged --use-inline-cache --save-inline-cache --push --secret SPEAKEASY_API_KEY=$SPEAKEASY_API_KEY +tests-all'
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}

  TestsIntegration:
    runs-on: "formance-runner"
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - name: Setup Env
        uses: ./.github/actions/env
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - run: 'earthly --no-output --allow-privileged --use-inline-cache --save-inline-cache --push --secret SPEAKEASY_API_KEY=$SPEAKEASY_API_KEY +integration-tests'
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}

  Extract:
    name: Extract
    runs-on: "ubuntu-latest"
    outputs:
      components: ${{ steps.extract.outputs.components }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Extract service name
        id: extract
        run: echo "components=$(node .github/actions/find-directory/index.js)" >> $GITHUB_OUTPUT

  Docker:
    runs-on: "ubuntu-latest"
    needs:
      - Extract
    strategy:
      matrix:
        components: ${{ fromJson(needs.Extract.outputs.components) }}
    steps:
      - uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
      - name: Setup Env
        uses: ./.github/actions/env
        with:
          token: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: "latest" # or pin to an specific version, e.g. "0.7.1"
      - run: "earthly --no-output --allow-privileged --use-inline-cache --save-inline-cache --push --secret GITHUB_TOKEN=$GITHUB_TOKEN --secret SPEAKEASY_API_KEY=$SPEAKEASY_API_KEY --secret FURY_TOKEN=$FURY_TOKEN --secret GORELEASER_KEY=$GORELEASER_KEY --secret SEGMENT_WRITE_KEY=$SEGMENT_WRITE_KEY +goreleaser --mode=ci --component=${{ matrix.components }}"
        env:
          GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
          SPEAKEASY_API_KEY: ${{ secrets.SPEAKEASY_API_KEY }}
          FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY_OSS }}