on:
  push:
    branches:
      - main
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  release:
    types: [ prereleased, released ]

name: Main
jobs:
  pr-style:
    if: github.event_name == 'pull_request'
    uses: numary/gh-workflows/.github/workflows/pr-style.yml@main

  lint:
    uses: numary/gh-workflows/.github/workflows/golang-lint.yml@main

  test:
    uses: numary/gh-workflows/.github/workflows/golang-test.yml@main

  goreleaser-build:
    if: github.event_name != 'release'
    uses: numary/gh-workflows/.github/workflows/goreleaser-build.yml@main
    needs:
      - lint
      - test

  goreleaser-release:
    if: github.event_name == 'release'
    uses: numary/gh-workflows/.github/workflows/goreleaser-release.yml@main
    secrets:
      FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
      NUMARY_GITHUB_TOKEN: ${{ secrets.NUMARY_GITHUB_TOKEN }}
    needs:
      - lint
      - test

  docker-build-push:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: "NumaryBot"
          password: ${{ secrets.NUMARY_GITHUB_TOKEN }}
      - if: github.event.action == 'released'
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/formancehq/webhooks:latest,ghcr.io/formancehq/webhooks:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - if: github.event.action == 'prereleased'
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/formancehq/webhooks:${{ github.event.release.tag_name }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=${{ github.event.release.tag_name }}
      - if: github.event.action != 'released' || github.event.action != 'prereleased'
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/formancehq/webhooks:${{ github.sha }}
          build-args: |
            APP_SHA=${{ github.sha }}
            VERSION=develop
