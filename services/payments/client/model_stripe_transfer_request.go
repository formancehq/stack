/*
Payments API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// StripeTransferRequest struct for StripeTransferRequest
type StripeTransferRequest struct {
	Amount      interface{} `json:"amount,omitempty"`
	Asset       interface{} `json:"asset,omitempty"`
	Destination interface{} `json:"destination,omitempty"`
	// A set of key/value pairs that you can attach to a transfer object. It can be useful for storing additional information about the transfer in a structured format.
	Metadata interface{} `json:"metadata,omitempty"`
}

// NewStripeTransferRequest instantiates a new StripeTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeTransferRequest() *StripeTransferRequest {
	this := StripeTransferRequest{}
	return &this
}

// NewStripeTransferRequestWithDefaults instantiates a new StripeTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeTransferRequestWithDefaults() *StripeTransferRequest {
	this := StripeTransferRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTransferRequest) GetAmount() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTransferRequest) GetAmountOk() (*interface{}, bool) {
	if o == nil || isNil(o.Amount) {
		return nil, false
	}
	return &o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *StripeTransferRequest) HasAmount() bool {
	if o != nil && isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given interface{} and assigns it to the Amount field.
func (o *StripeTransferRequest) SetAmount(v interface{}) {
	o.Amount = v
}

// GetAsset returns the Asset field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTransferRequest) GetAsset() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTransferRequest) GetAssetOk() (*interface{}, bool) {
	if o == nil || isNil(o.Asset) {
		return nil, false
	}
	return &o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *StripeTransferRequest) HasAsset() bool {
	if o != nil && isNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given interface{} and assigns it to the Asset field.
func (o *StripeTransferRequest) SetAsset(v interface{}) {
	o.Asset = v
}

// GetDestination returns the Destination field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTransferRequest) GetDestination() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTransferRequest) GetDestinationOk() (*interface{}, bool) {
	if o == nil || isNil(o.Destination) {
		return nil, false
	}
	return &o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *StripeTransferRequest) HasDestination() bool {
	if o != nil && isNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given interface{} and assigns it to the Destination field.
func (o *StripeTransferRequest) SetDestination(v interface{}) {
	o.Destination = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTransferRequest) GetMetadata() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTransferRequest) GetMetadataOk() (*interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *StripeTransferRequest) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given interface{} and assigns it to the Metadata field.
func (o *StripeTransferRequest) SetMetadata(v interface{}) {
	o.Metadata = v
}

func (o StripeTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	if o.Destination != nil {
		toSerialize["destination"] = o.Destination
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableStripeTransferRequest struct {
	value *StripeTransferRequest
	isSet bool
}

func (v NullableStripeTransferRequest) Get() *StripeTransferRequest {
	return v.value
}

func (v *NullableStripeTransferRequest) Set(val *StripeTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeTransferRequest(val *StripeTransferRequest) *NullableStripeTransferRequest {
	return &NullableStripeTransferRequest{value: val, isSet: true}
}

func (v NullableStripeTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
