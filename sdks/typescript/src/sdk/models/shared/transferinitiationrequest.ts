/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Connector } from "./connector";
import { Expose, Transform } from "class-transformer";

export enum TransferInitiationRequestType {
  Transfer = "TRANSFER",
  Payout = "PAYOUT",
}

export class TransferInitiationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "asset" })
  asset: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationAccountID" })
  destinationAccountID: string;

  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider: Connector;

  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountID" })
  sourceAccountID: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TransferInitiationRequestType;

  @SpeakeasyMetadata()
  @Expose({ name: "validated" })
  validated: boolean;
}
