<?php
/**
 * OrchestrationApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Formance
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Formance Stack API
 *
 * Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions />
 *
 * The version of the OpenAPI document: develop
 * Contact: support@formance.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Formance\Test\Api;

use \Formance\Configuration;
use \Formance\ApiException;
use \Formance\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrchestrationApiTest Class Doc Comment
 *
 * @category Class
 * @package  Formance
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrchestrationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createWorkflow
     *
     * Create workflow.
     *
     */
    public function testCreateWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFlow
     *
     * Get a flow by id.
     *
     */
    public function testGetFlow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWorkflowOccurrence
     *
     * Get a workflow occurrence by id.
     *
     */
    public function testGetWorkflowOccurrence()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listFlows
     *
     * List registered flows.
     *
     */
    public function testListFlows()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRuns
     *
     * List occurrences of a workflow.
     *
     */
    public function testListRuns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for orchestrationgetServerInfo
     *
     * Get server info.
     *
     */
    public function testOrchestrationgetServerInfo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for runWorkflow
     *
     * Run workflow.
     *
     */
    public function testRunWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
