/*
 * Formance Stack API
 * Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions />
 *
 * The version of the OpenAPI document: develop
 * Contact: support@formance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formance.formance.model;

import com.formance.formance.model.BankingCircleConfig;
import com.formance.formance.model.CurrencyCloudConfig;
import com.formance.formance.model.DummyPayConfig;
import com.formance.formance.model.ModulrConfig;
import com.formance.formance.model.StripeConfig;
import com.formance.formance.model.WiseConfig;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ConnectorConfig
 */
public class ConnectorConfigTest {
    private final ConnectorConfig model = new ConnectorConfig();

    /**
     * Model tests for ConnectorConfig
     */
    @Test
    public void testConnectorConfig() {
        // TODO: test ConnectorConfig
    }

    /**
     * Test the property 'pollingPeriod'
     */
    @Test
    public void pollingPeriodTest() {
        // TODO: test pollingPeriod
    }

    /**
     * Test the property 'apiKey'
     */
    @Test
    public void apiKeyTest() {
        // TODO: test apiKey
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'filePollingPeriod'
     */
    @Test
    public void filePollingPeriodTest() {
        // TODO: test filePollingPeriod
    }

    /**
     * Test the property 'fileGenerationPeriod'
     */
    @Test
    public void fileGenerationPeriodTest() {
        // TODO: test fileGenerationPeriod
    }

    /**
     * Test the property 'directory'
     */
    @Test
    public void directoryTest() {
        // TODO: test directory
    }

    /**
     * Test the property 'apiSecret'
     */
    @Test
    public void apiSecretTest() {
        // TODO: test apiSecret
    }

    /**
     * Test the property 'endpoint'
     */
    @Test
    public void endpointTest() {
        // TODO: test endpoint
    }

    /**
     * Test the property 'loginID'
     */
    @Test
    public void loginIDTest() {
        // TODO: test loginID
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'password'
     */
    @Test
    public void passwordTest() {
        // TODO: test password
    }

    /**
     * Test the property 'authorizationEndpoint'
     */
    @Test
    public void authorizationEndpointTest() {
        // TODO: test authorizationEndpoint
    }

}
