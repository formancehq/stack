/*
 * Formance Stack API
 * Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 
 *
 * The version of the OpenAPI document: v1.0.20230301
 * Contact: support@formance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.formance.formance.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Query
 */
public class QueryTest {
    private final Query model = new Query();

    /**
     * Model tests for Query
     */
    @Test
    public void testQuery() {
        // TODO: test Query
    }

    /**
     * Test the property 'ledgers'
     */
    @Test
    public void ledgersTest() {
        // TODO: test ledgers
    }

    /**
     * Test the property 'after'
     */
    @Test
    public void afterTest() {
        // TODO: test after
    }

    /**
     * Test the property 'pageSize'
     */
    @Test
    public void pageSizeTest() {
        // TODO: test pageSize
    }

    /**
     * Test the property 'terms'
     */
    @Test
    public void termsTest() {
        // TODO: test terms
    }

    /**
     * Test the property 'sort'
     */
    @Test
    public void sortTest() {
        // TODO: test sort
    }

    /**
     * Test the property 'policy'
     */
    @Test
    public void policyTest() {
        // TODO: test policy
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'cursor'
     */
    @Test
    public void cursorTest() {
        // TODO: test cursor
    }

    /**
     * Test the property 'raw'
     */
    @Test
    public void rawTest() {
        // TODO: test raw
    }

}
