/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.formance.formance_sdk.utils.SpeakeasyMetadata;
import java.time.OffsetDateTime;

public class GetAccountBalancesRequest {
    /**
     * The account ID.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountId")
    public String accountId;

    public GetAccountBalancesRequest withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Filter balances by currency.
     * If not specified, all account's balances will be returned.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=asset")
    public String asset;

    public GetAccountBalancesRequest withAsset(String asset) {
        this.asset = asset;
        return this;
    }
    
    /**
     * Parameter used in pagination requests. Maximum page size is set to 15.
     * Set to the value of next for the next page of results.
     * Set to the value of previous for the previous page of results.
     * No other parameters can be set when this parameter is set.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;

    public GetAccountBalancesRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * Filter balances by date.
     * If not specified, all account's balances will be returned.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public OffsetDateTime from;

    public GetAccountBalancesRequest withFrom(OffsetDateTime from) {
        this.from = from;
        return this;
    }
    
    /**
     * The maximum number of results to return per page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public GetAccountBalancesRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The maximum number of results to return per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;

    public GetAccountBalancesRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Fields used to sort payments (default is date:desc).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String[] sort;

    public GetAccountBalancesRequest withSort(String[] sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Filter balances by date.
     * If not specified, default will be set to now.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=to")
    public OffsetDateTime to;

    public GetAccountBalancesRequest withTo(OffsetDateTime to) {
        this.to = to;
        return this;
    }
    
    public GetAccountBalancesRequest(@JsonProperty("accountId") String accountId) {
        this.accountId = accountId;
  }
}
