/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.formance.formance_sdk.utils.DateTimeDeserializer;
import com.formance.formance_sdk.utils.DateTimeSerializer;
import java.time.OffsetDateTime;

public class TransferInitiationRequest {
    @JsonProperty("amount")
    public Long amount;

    public TransferInitiationRequest withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonProperty("asset")
    public String asset;

    public TransferInitiationRequest withAsset(String asset) {
        this.asset = asset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorID")
    public String connectorID;

    public TransferInitiationRequest withConnectorID(String connectorID) {
        this.connectorID = connectorID;
        return this;
    }
    
    @JsonProperty("description")
    public String description;

    public TransferInitiationRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("destinationAccountID")
    public String destinationAccountID;

    public TransferInitiationRequest withDestinationAccountID(String destinationAccountID) {
        this.destinationAccountID = destinationAccountID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provider")
    public Connector provider;

    public TransferInitiationRequest withProvider(Connector provider) {
        this.provider = provider;
        return this;
    }
    
    @JsonProperty("reference")
    public String reference;

    public TransferInitiationRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledAt")
    public OffsetDateTime scheduledAt;

    public TransferInitiationRequest withScheduledAt(OffsetDateTime scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    @JsonProperty("sourceAccountID")
    public String sourceAccountID;

    public TransferInitiationRequest withSourceAccountID(String sourceAccountID) {
        this.sourceAccountID = sourceAccountID;
        return this;
    }
    
    @JsonProperty("type")
    public TransferInitiationRequestType type;

    public TransferInitiationRequest withType(TransferInitiationRequestType type) {
        this.type = type;
        return this;
    }
    
    @JsonProperty("validated")
    public Boolean validated;

    public TransferInitiationRequest withValidated(Boolean validated) {
        this.validated = validated;
        return this;
    }
    
    public TransferInitiationRequest(@JsonProperty("amount") Long amount, @JsonProperty("asset") String asset, @JsonProperty("description") String description, @JsonProperty("destinationAccountID") String destinationAccountID, @JsonProperty("reference") String reference, @JsonProperty("scheduledAt") OffsetDateTime scheduledAt, @JsonProperty("sourceAccountID") String sourceAccountID, @JsonProperty("type") TransferInitiationRequestType type, @JsonProperty("validated") Boolean validated) {
        this.amount = amount;
        this.asset = asset;
        this.description = description;
        this.destinationAccountID = destinationAccountID;
        this.reference = reference;
        this.scheduledAt = scheduledAt;
        this.sourceAccountID = sourceAccountID;
        this.type = type;
        this.validated = validated;
  }
}
