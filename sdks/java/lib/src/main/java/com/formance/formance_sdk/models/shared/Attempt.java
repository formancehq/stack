/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.formance.formance_sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.formance.formance_sdk.utils.DateTimeDeserializer;
import com.formance.formance_sdk.utils.DateTimeSerializer;
import java.time.OffsetDateTime;


public class Attempt {
    @JsonProperty("config")
    public WebhooksConfig config;

    public Attempt withConfig(WebhooksConfig config) {
        this.config = config;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public Attempt withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public Attempt withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("nextRetryAfter")
    public OffsetDateTime nextRetryAfter;

    public Attempt withNextRetryAfter(OffsetDateTime nextRetryAfter) {
        this.nextRetryAfter = nextRetryAfter;
        return this;
    }
    
    @JsonProperty("payload")
    public String payload;

    public Attempt withPayload(String payload) {
        this.payload = payload;
        return this;
    }
    
    @JsonProperty("retryAttempt")
    public Long retryAttempt;

    public Attempt withRetryAttempt(Long retryAttempt) {
        this.retryAttempt = retryAttempt;
        return this;
    }
    
    @JsonProperty("status")
    public String status;

    public Attempt withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("statusCode")
    public Long statusCode;

    public Attempt withStatusCode(Long statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public Attempt withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("webhookID")
    public String webhookID;

    public Attempt withWebhookID(String webhookID) {
        this.webhookID = webhookID;
        return this;
    }
    
    public Attempt(@JsonProperty("config") WebhooksConfig config, @JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("id") String id, @JsonProperty("payload") String payload, @JsonProperty("retryAttempt") Long retryAttempt, @JsonProperty("status") String status, @JsonProperty("statusCode") Long statusCode, @JsonProperty("updatedAt") OffsetDateTime updatedAt, @JsonProperty("webhookID") String webhookID) {
        this.config = config;
        this.createdAt = createdAt;
        this.id = id;
        this.payload = payload;
        this.retryAttempt = retryAttempt;
        this.status = status;
        this.statusCode = statusCode;
        this.updatedAt = updatedAt;
        this.webhookID = webhookID;
  }
}
