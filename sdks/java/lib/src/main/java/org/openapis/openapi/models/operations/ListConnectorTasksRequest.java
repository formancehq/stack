/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListConnectorTasksRequest {
    /**
     * The name of the connector.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=connector")
    public org.openapis.openapi.models.shared.Connector connector;

    public ListConnectorTasksRequest withConnector(org.openapis.openapi.models.shared.Connector connector) {
        this.connector = connector;
        return this;
    }
    
    /**
     * Parameter used in pagination requests. Maximum page size is set to 15.
     * Set to the value of next for the next page of results.
     * Set to the value of previous for the previous page of results.
     * No other parameters can be set when this parameter is set.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;

    public ListConnectorTasksRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * The maximum number of results to return per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;

    public ListConnectorTasksRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    public ListConnectorTasksRequest(@JsonProperty("connector") org.openapis.openapi.models.shared.Connector connector) {
        this.connector = connector;
  }
}
