/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: v1.0.20230301
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// checks if the TaskModulrAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaskModulrAllOf{}

// TaskModulrAllOf struct for TaskModulrAllOf
type TaskModulrAllOf struct {
	Descriptor TaskModulrAllOfDescriptor `json:"descriptor"`
}

// NewTaskModulrAllOf instantiates a new TaskModulrAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskModulrAllOf(descriptor TaskModulrAllOfDescriptor) *TaskModulrAllOf {
	this := TaskModulrAllOf{}
	this.Descriptor = descriptor
	return &this
}

// NewTaskModulrAllOfWithDefaults instantiates a new TaskModulrAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskModulrAllOfWithDefaults() *TaskModulrAllOf {
	this := TaskModulrAllOf{}
	return &this
}

// GetDescriptor returns the Descriptor field value
func (o *TaskModulrAllOf) GetDescriptor() TaskModulrAllOfDescriptor {
	if o == nil {
		var ret TaskModulrAllOfDescriptor
		return ret
	}

	return o.Descriptor
}

// GetDescriptorOk returns a tuple with the Descriptor field value
// and a boolean to check if the value has been set.
func (o *TaskModulrAllOf) GetDescriptorOk() (*TaskModulrAllOfDescriptor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Descriptor, true
}

// SetDescriptor sets field value
func (o *TaskModulrAllOf) SetDescriptor(v TaskModulrAllOfDescriptor) {
	o.Descriptor = v
}

func (o TaskModulrAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaskModulrAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["descriptor"] = o.Descriptor
	return toSerialize, nil
}

type NullableTaskModulrAllOf struct {
	value *TaskModulrAllOf
	isSet bool
}

func (v NullableTaskModulrAllOf) Get() *TaskModulrAllOf {
	return v.value
}

func (v *NullableTaskModulrAllOf) Set(val *TaskModulrAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskModulrAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskModulrAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskModulrAllOf(val *TaskModulrAllOf) *NullableTaskModulrAllOf {
	return &NullableTaskModulrAllOf{value: val, isSet: true}
}

func (v NullableTaskModulrAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskModulrAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


