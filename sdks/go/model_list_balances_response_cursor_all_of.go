/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: v1.0.20230301
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// checks if the ListBalancesResponseCursorAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListBalancesResponseCursorAllOf{}

// ListBalancesResponseCursorAllOf struct for ListBalancesResponseCursorAllOf
type ListBalancesResponseCursorAllOf struct {
	Data []Balance `json:"data"`
}

// NewListBalancesResponseCursorAllOf instantiates a new ListBalancesResponseCursorAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListBalancesResponseCursorAllOf(data []Balance) *ListBalancesResponseCursorAllOf {
	this := ListBalancesResponseCursorAllOf{}
	this.Data = data
	return &this
}

// NewListBalancesResponseCursorAllOfWithDefaults instantiates a new ListBalancesResponseCursorAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListBalancesResponseCursorAllOfWithDefaults() *ListBalancesResponseCursorAllOf {
	this := ListBalancesResponseCursorAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *ListBalancesResponseCursorAllOf) GetData() []Balance {
	if o == nil {
		var ret []Balance
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListBalancesResponseCursorAllOf) GetDataOk() ([]Balance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListBalancesResponseCursorAllOf) SetData(v []Balance) {
	o.Data = v
}

func (o ListBalancesResponseCursorAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListBalancesResponseCursorAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableListBalancesResponseCursorAllOf struct {
	value *ListBalancesResponseCursorAllOf
	isSet bool
}

func (v NullableListBalancesResponseCursorAllOf) Get() *ListBalancesResponseCursorAllOf {
	return v.value
}

func (v *NullableListBalancesResponseCursorAllOf) Set(val *ListBalancesResponseCursorAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableListBalancesResponseCursorAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableListBalancesResponseCursorAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListBalancesResponseCursorAllOf(val *ListBalancesResponseCursorAllOf) *NullableListBalancesResponseCursorAllOf {
	return &NullableListBalancesResponseCursorAllOf{value: val, isSet: true}
}

func (v NullableListBalancesResponseCursorAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListBalancesResponseCursorAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


