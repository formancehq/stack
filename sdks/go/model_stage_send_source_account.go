/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: v1.0.20230301
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// checks if the StageSendSourceAccount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StageSendSourceAccount{}

// StageSendSourceAccount struct for StageSendSourceAccount
type StageSendSourceAccount struct {
	Id string `json:"id"`
	Ledger *string `json:"ledger,omitempty"`
}

// NewStageSendSourceAccount instantiates a new StageSendSourceAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStageSendSourceAccount(id string) *StageSendSourceAccount {
	this := StageSendSourceAccount{}
	this.Id = id
	return &this
}

// NewStageSendSourceAccountWithDefaults instantiates a new StageSendSourceAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStageSendSourceAccountWithDefaults() *StageSendSourceAccount {
	this := StageSendSourceAccount{}
	return &this
}

// GetId returns the Id field value
func (o *StageSendSourceAccount) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StageSendSourceAccount) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StageSendSourceAccount) SetId(v string) {
	o.Id = v
}

// GetLedger returns the Ledger field value if set, zero value otherwise.
func (o *StageSendSourceAccount) GetLedger() string {
	if o == nil || IsNil(o.Ledger) {
		var ret string
		return ret
	}
	return *o.Ledger
}

// GetLedgerOk returns a tuple with the Ledger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StageSendSourceAccount) GetLedgerOk() (*string, bool) {
	if o == nil || IsNil(o.Ledger) {
		return nil, false
	}
	return o.Ledger, true
}

// HasLedger returns a boolean if a field has been set.
func (o *StageSendSourceAccount) HasLedger() bool {
	if o != nil && !IsNil(o.Ledger) {
		return true
	}

	return false
}

// SetLedger gets a reference to the given string and assigns it to the Ledger field.
func (o *StageSendSourceAccount) SetLedger(v string) {
	o.Ledger = &v
}

func (o StageSendSourceAccount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StageSendSourceAccount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Ledger) {
		toSerialize["ledger"] = o.Ledger
	}
	return toSerialize, nil
}

type NullableStageSendSourceAccount struct {
	value *StageSendSourceAccount
	isSet bool
}

func (v NullableStageSendSourceAccount) Get() *StageSendSourceAccount {
	return v.value
}

func (v *NullableStageSendSourceAccount) Set(val *StageSendSourceAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableStageSendSourceAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableStageSendSourceAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStageSendSourceAccount(val *StageSendSourceAccount) *NullableStageSendSourceAccount {
	return &NullableStageSendSourceAccount{value: val, isSet: true}
}

func (v NullableStageSendSourceAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStageSendSourceAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


