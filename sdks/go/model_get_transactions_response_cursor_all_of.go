/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: v1.0.20230301
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// checks if the GetTransactionsResponseCursorAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTransactionsResponseCursorAllOf{}

// GetTransactionsResponseCursorAllOf struct for GetTransactionsResponseCursorAllOf
type GetTransactionsResponseCursorAllOf struct {
	Data []WalletsTransaction `json:"data"`
}

// NewGetTransactionsResponseCursorAllOf instantiates a new GetTransactionsResponseCursorAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTransactionsResponseCursorAllOf(data []WalletsTransaction) *GetTransactionsResponseCursorAllOf {
	this := GetTransactionsResponseCursorAllOf{}
	this.Data = data
	return &this
}

// NewGetTransactionsResponseCursorAllOfWithDefaults instantiates a new GetTransactionsResponseCursorAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTransactionsResponseCursorAllOfWithDefaults() *GetTransactionsResponseCursorAllOf {
	this := GetTransactionsResponseCursorAllOf{}
	return &this
}

// GetData returns the Data field value
func (o *GetTransactionsResponseCursorAllOf) GetData() []WalletsTransaction {
	if o == nil {
		var ret []WalletsTransaction
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetTransactionsResponseCursorAllOf) GetDataOk() ([]WalletsTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *GetTransactionsResponseCursorAllOf) SetData(v []WalletsTransaction) {
	o.Data = v
}

func (o GetTransactionsResponseCursorAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTransactionsResponseCursorAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableGetTransactionsResponseCursorAllOf struct {
	value *GetTransactionsResponseCursorAllOf
	isSet bool
}

func (v NullableGetTransactionsResponseCursorAllOf) Get() *GetTransactionsResponseCursorAllOf {
	return v.value
}

func (v *NullableGetTransactionsResponseCursorAllOf) Set(val *GetTransactionsResponseCursorAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTransactionsResponseCursorAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTransactionsResponseCursorAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTransactionsResponseCursorAllOf(val *GetTransactionsResponseCursorAllOf) *NullableGetTransactionsResponseCursorAllOf {
	return &NullableGetTransactionsResponseCursorAllOf{value: val, isSet: true}
}

func (v NullableGetTransactionsResponseCursorAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTransactionsResponseCursorAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


