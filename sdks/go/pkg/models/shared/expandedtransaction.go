// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type ExpandedTransaction struct {
	ID                int64                        `json:"id"`
	Metadata          map[string]string            `json:"metadata"`
	PostCommitVolumes map[string]map[string]Volume `json:"postCommitVolumes,omitempty"`
	Postings          []Posting                    `json:"postings"`
	PreCommitVolumes  map[string]map[string]Volume `json:"preCommitVolumes,omitempty"`
	Reference         *string                      `json:"reference,omitempty"`
	Reverted          bool                         `json:"reverted"`
	Timestamp         time.Time                    `json:"timestamp"`
}

func (o *ExpandedTransaction) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *ExpandedTransaction) GetMetadata() map[string]string {
	if o == nil {
		return map[string]string{}
	}
	return o.Metadata
}

func (o *ExpandedTransaction) GetPostCommitVolumes() map[string]map[string]Volume {
	if o == nil {
		return nil
	}
	return o.PostCommitVolumes
}

func (o *ExpandedTransaction) GetPostings() []Posting {
	if o == nil {
		return []Posting{}
	}
	return o.Postings
}

func (o *ExpandedTransaction) GetPreCommitVolumes() map[string]map[string]Volume {
	if o == nil {
		return nil
	}
	return o.PreCommitVolumes
}

func (o *ExpandedTransaction) GetReference() *string {
	if o == nil {
		return nil
	}
	return o.Reference
}

func (o *ExpandedTransaction) GetReverted() bool {
	if o == nil {
		return false
	}
	return o.Reverted
}

func (o *ExpandedTransaction) GetTimestamp() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Timestamp
}
