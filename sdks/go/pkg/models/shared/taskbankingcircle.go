// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type TaskBankingCircleDescriptor struct {
	Key  *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
}

func (o *TaskBankingCircleDescriptor) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *TaskBankingCircleDescriptor) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type TaskBankingCircleState struct {
}

type TaskBankingCircle struct {
	ConnectorID string                      `json:"connectorId"`
	CreatedAt   time.Time                   `json:"createdAt"`
	Descriptor  TaskBankingCircleDescriptor `json:"descriptor"`
	Error       *string                     `json:"error,omitempty"`
	ID          string                      `json:"id"`
	State       TaskBankingCircleState      `json:"state"`
	Status      PaymentStatus               `json:"status"`
	UpdatedAt   time.Time                   `json:"updatedAt"`
}

func (o *TaskBankingCircle) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *TaskBankingCircle) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *TaskBankingCircle) GetDescriptor() TaskBankingCircleDescriptor {
	if o == nil {
		return TaskBankingCircleDescriptor{}
	}
	return o.Descriptor
}

func (o *TaskBankingCircle) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *TaskBankingCircle) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TaskBankingCircle) GetState() TaskBankingCircleState {
	if o == nil {
		return TaskBankingCircleState{}
	}
	return o.State
}

func (o *TaskBankingCircle) GetStatus() PaymentStatus {
	if o == nil {
		return PaymentStatus("")
	}
	return o.Status
}

func (o *TaskBankingCircle) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
