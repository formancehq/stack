// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"math/big"
	"time"
)

type TransferInitiationType string

const (
	TransferInitiationTypeTransfer TransferInitiationType = "TRANSFER"
	TransferInitiationTypePayout   TransferInitiationType = "PAYOUT"
)

func (e TransferInitiationType) ToPointer() *TransferInitiationType {
	return &e
}

func (e *TransferInitiationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRANSFER":
		fallthrough
	case "PAYOUT":
		*e = TransferInitiationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferInitiationType: %v", v)
	}
}

type TransferInitiation struct {
	Amount               *big.Int                     `json:"amount"`
	Asset                string                       `json:"asset"`
	CreatedAt            time.Time                    `json:"createdAt"`
	Description          string                       `json:"description"`
	DestinationAccountID string                       `json:"destinationAccountID"`
	Error                string                       `json:"error"`
	ID                   string                       `json:"id"`
	Provider             Connector                    `json:"provider"`
	RelatedPayments      []TransferInitiationPayments `json:"relatedPayments,omitempty"`
	SourceAccountID      string                       `json:"sourceAccountID"`
	Status               TransferInitiationStatus     `json:"status"`
	Type                 TransferInitiationType       `json:"type"`
	UpdatedAt            time.Time                    `json:"updatedAt"`
}
