/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: develop
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
	"time"
)

// checks if the WorkflowInstanceHistoryStage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowInstanceHistoryStage{}

// WorkflowInstanceHistoryStage struct for WorkflowInstanceHistoryStage
type WorkflowInstanceHistoryStage struct {
	Name string `json:"name"`
	Input WorkflowInstanceHistoryStageInput `json:"input"`
	Output *WorkflowInstanceHistoryStageOutput `json:"output,omitempty"`
	Error *string `json:"error,omitempty"`
	Terminated bool `json:"terminated"`
	StartedAt time.Time `json:"startedAt"`
	TerminatedAt *time.Time `json:"terminatedAt,omitempty"`
}

// NewWorkflowInstanceHistoryStage instantiates a new WorkflowInstanceHistoryStage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowInstanceHistoryStage(name string, input WorkflowInstanceHistoryStageInput, terminated bool, startedAt time.Time) *WorkflowInstanceHistoryStage {
	this := WorkflowInstanceHistoryStage{}
	this.Name = name
	this.Input = input
	this.Terminated = terminated
	this.StartedAt = startedAt
	return &this
}

// NewWorkflowInstanceHistoryStageWithDefaults instantiates a new WorkflowInstanceHistoryStage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowInstanceHistoryStageWithDefaults() *WorkflowInstanceHistoryStage {
	this := WorkflowInstanceHistoryStage{}
	return &this
}

// GetName returns the Name field value
func (o *WorkflowInstanceHistoryStage) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkflowInstanceHistoryStage) SetName(v string) {
	o.Name = v
}

// GetInput returns the Input field value
func (o *WorkflowInstanceHistoryStage) GetInput() WorkflowInstanceHistoryStageInput {
	if o == nil {
		var ret WorkflowInstanceHistoryStageInput
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetInputOk() (*WorkflowInstanceHistoryStageInput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *WorkflowInstanceHistoryStage) SetInput(v WorkflowInstanceHistoryStageInput) {
	o.Input = v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *WorkflowInstanceHistoryStage) GetOutput() WorkflowInstanceHistoryStageOutput {
	if o == nil || isNil(o.Output) {
		var ret WorkflowInstanceHistoryStageOutput
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetOutputOk() (*WorkflowInstanceHistoryStageOutput, bool) {
	if o == nil || isNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *WorkflowInstanceHistoryStage) HasOutput() bool {
	if o != nil && !isNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given WorkflowInstanceHistoryStageOutput and assigns it to the Output field.
func (o *WorkflowInstanceHistoryStage) SetOutput(v WorkflowInstanceHistoryStageOutput) {
	o.Output = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *WorkflowInstanceHistoryStage) GetError() string {
	if o == nil || isNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetErrorOk() (*string, bool) {
	if o == nil || isNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *WorkflowInstanceHistoryStage) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *WorkflowInstanceHistoryStage) SetError(v string) {
	o.Error = &v
}

// GetTerminated returns the Terminated field value
func (o *WorkflowInstanceHistoryStage) GetTerminated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Terminated
}

// GetTerminatedOk returns a tuple with the Terminated field value
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetTerminatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Terminated, true
}

// SetTerminated sets field value
func (o *WorkflowInstanceHistoryStage) SetTerminated(v bool) {
	o.Terminated = v
}

// GetStartedAt returns the StartedAt field value
func (o *WorkflowInstanceHistoryStage) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *WorkflowInstanceHistoryStage) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetTerminatedAt returns the TerminatedAt field value if set, zero value otherwise.
func (o *WorkflowInstanceHistoryStage) GetTerminatedAt() time.Time {
	if o == nil || isNil(o.TerminatedAt) {
		var ret time.Time
		return ret
	}
	return *o.TerminatedAt
}

// GetTerminatedAtOk returns a tuple with the TerminatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowInstanceHistoryStage) GetTerminatedAtOk() (*time.Time, bool) {
	if o == nil || isNil(o.TerminatedAt) {
		return nil, false
	}
	return o.TerminatedAt, true
}

// HasTerminatedAt returns a boolean if a field has been set.
func (o *WorkflowInstanceHistoryStage) HasTerminatedAt() bool {
	if o != nil && !isNil(o.TerminatedAt) {
		return true
	}

	return false
}

// SetTerminatedAt gets a reference to the given time.Time and assigns it to the TerminatedAt field.
func (o *WorkflowInstanceHistoryStage) SetTerminatedAt(v time.Time) {
	o.TerminatedAt = &v
}

func (o WorkflowInstanceHistoryStage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowInstanceHistoryStage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["input"] = o.Input
	if !isNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	toSerialize["terminated"] = o.Terminated
	toSerialize["startedAt"] = o.StartedAt
	if !isNil(o.TerminatedAt) {
		toSerialize["terminatedAt"] = o.TerminatedAt
	}
	return toSerialize, nil
}

type NullableWorkflowInstanceHistoryStage struct {
	value *WorkflowInstanceHistoryStage
	isSet bool
}

func (v NullableWorkflowInstanceHistoryStage) Get() *WorkflowInstanceHistoryStage {
	return v.value
}

func (v *NullableWorkflowInstanceHistoryStage) Set(val *WorkflowInstanceHistoryStage) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowInstanceHistoryStage) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowInstanceHistoryStage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowInstanceHistoryStage(val *WorkflowInstanceHistoryStage) *NullableWorkflowInstanceHistoryStage {
	return &NullableWorkflowInstanceHistoryStage{value: val, isSet: true}
}

func (v NullableWorkflowInstanceHistoryStage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowInstanceHistoryStage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


