/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions />

API version: develop
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// WalletsMetadata Metadata associated with the wallet.
type WalletsMetadata struct {
}

// NewWalletsMetadata instantiates a new WalletsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletsMetadata() *WalletsMetadata {
	this := WalletsMetadata{}
	return &this
}

// NewWalletsMetadataWithDefaults instantiates a new WalletsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletsMetadataWithDefaults() *WalletsMetadata {
	this := WalletsMetadata{}
	return &this
}

func (o WalletsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	return json.Marshal(toSerialize)
}

type NullableWalletsMetadata struct {
	value *WalletsMetadata
	isSet bool
}

func (v NullableWalletsMetadata) Get() *WalletsMetadata {
	return v.value
}

func (v *NullableWalletsMetadata) Set(val *WalletsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletsMetadata(val *WalletsMetadata) *NullableWalletsMetadata {
	return &NullableWalletsMetadata{value: val, isSet: true}
}

func (v NullableWalletsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
