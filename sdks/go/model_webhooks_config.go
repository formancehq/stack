/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: develop
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
	"time"
)

// checks if the WebhooksConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhooksConfig{}

// WebhooksConfig struct for WebhooksConfig
type WebhooksConfig struct {
	Id string `json:"id"`
	Endpoint string `json:"endpoint"`
	Secret string `json:"secret"`
	EventTypes []string `json:"eventTypes"`
	Active bool `json:"active"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// NewWebhooksConfig instantiates a new WebhooksConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksConfig(id string, endpoint string, secret string, eventTypes []string, active bool, createdAt time.Time, updatedAt time.Time) *WebhooksConfig {
	this := WebhooksConfig{}
	this.Id = id
	this.Endpoint = endpoint
	this.Secret = secret
	this.EventTypes = eventTypes
	this.Active = active
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewWebhooksConfigWithDefaults instantiates a new WebhooksConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksConfigWithDefaults() *WebhooksConfig {
	this := WebhooksConfig{}
	return &this
}

// GetId returns the Id field value
func (o *WebhooksConfig) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhooksConfig) SetId(v string) {
	o.Id = v
}

// GetEndpoint returns the Endpoint field value
func (o *WebhooksConfig) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *WebhooksConfig) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetSecret returns the Secret field value
func (o *WebhooksConfig) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *WebhooksConfig) SetSecret(v string) {
	o.Secret = v
}

// GetEventTypes returns the EventTypes field value
func (o *WebhooksConfig) GetEventTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EventTypes
}

// GetEventTypesOk returns a tuple with the EventTypes field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetEventTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventTypes, true
}

// SetEventTypes sets field value
func (o *WebhooksConfig) SetEventTypes(v []string) {
	o.EventTypes = v
}

// GetActive returns the Active field value
func (o *WebhooksConfig) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *WebhooksConfig) SetActive(v bool) {
	o.Active = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *WebhooksConfig) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *WebhooksConfig) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *WebhooksConfig) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *WebhooksConfig) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *WebhooksConfig) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o WebhooksConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhooksConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["secret"] = o.Secret
	toSerialize["eventTypes"] = o.EventTypes
	toSerialize["active"] = o.Active
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableWebhooksConfig struct {
	value *WebhooksConfig
	isSet bool
}

func (v NullableWebhooksConfig) Get() *WebhooksConfig {
	return v.value
}

func (v *NullableWebhooksConfig) Set(val *WebhooksConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksConfig(val *WebhooksConfig) *NullableWebhooksConfig {
	return &NullableWebhooksConfig{value: val, isSet: true}
}

func (v NullableWebhooksConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


