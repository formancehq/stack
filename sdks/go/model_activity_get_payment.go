/*
Formance Stack API

Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 

API version: v1.0.20230301
Contact: support@formance.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package formance

import (
	"encoding/json"
)

// checks if the ActivityGetPayment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityGetPayment{}

// ActivityGetPayment struct for ActivityGetPayment
type ActivityGetPayment struct {
	Id string `json:"id"`
}

// NewActivityGetPayment instantiates a new ActivityGetPayment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityGetPayment(id string) *ActivityGetPayment {
	this := ActivityGetPayment{}
	this.Id = id
	return &this
}

// NewActivityGetPaymentWithDefaults instantiates a new ActivityGetPayment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityGetPaymentWithDefaults() *ActivityGetPayment {
	this := ActivityGetPayment{}
	return &this
}

// GetId returns the Id field value
func (o *ActivityGetPayment) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivityGetPayment) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivityGetPayment) SetId(v string) {
	o.Id = v
}

func (o ActivityGetPayment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityGetPayment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableActivityGetPayment struct {
	value *ActivityGetPayment
	isSet bool
}

func (v NullableActivityGetPayment) Get() *ActivityGetPayment {
	return v.value
}

func (v *NullableActivityGetPayment) Set(val *ActivityGetPayment) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityGetPayment) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityGetPayment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityGetPayment(val *ActivityGetPayment) *NullableActivityGetPayment {
	return &NullableActivityGetPayment{value: val, isSet: true}
}

func (v NullableActivityGetPayment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityGetPayment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


