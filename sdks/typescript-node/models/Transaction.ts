/**
 * Formance Stack API
 * Open, modular foundation for unique payments flows  # Introduction This API is documented in **OpenAPI format**.  # Authentication Formance Stack offers one forms of authentication:   - OAuth2 OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications. <SecurityDefinitions /> 
 *
 * OpenAPI spec version: develop
 * Contact: support@formance.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Posting } from '../models/Posting';
import { Volume } from '../models/Volume';
import { HttpFile } from '../http/http';

export class Transaction {
    'timestamp': Date;
    'postings': Array<Posting>;
    'reference'?: string;
    'metadata': { [key: string]: string; };
    'txid': number;
    'preCommitVolumes'?: { [key: string]: { [key: string]: Volume; }; };
    'postCommitVolumes'?: { [key: string]: { [key: string]: Volume; }; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "postings",
            "baseName": "postings",
            "type": "Array<Posting>",
            "format": ""
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "txid",
            "baseName": "txid",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "preCommitVolumes",
            "baseName": "preCommitVolumes",
            "type": "{ [key: string]: { [key: string]: Volume; }; }",
            "format": ""
        },
        {
            "name": "postCommitVolumes",
            "baseName": "postCommitVolumes",
            "type": "{ [key: string]: { [key: string]: Volume; }; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Transaction.attributeTypeMap;
    }

    public constructor() {
    }
}

