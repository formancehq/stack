openapi: 3.0.3
info:
  title: Membership API
  contact: {}
  version: "0.1.0"

servers:
- url: http://localhost:8080
  description: Local server

paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      responses:
        200:
          description: Server information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
  /organizations:
    get:
      summary: List organizations of the connected user
      operationId: listOrganizations
      responses:
        200:
          description: List of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationResponse'
    post:
      summary: Create organization
      operationId: createOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      responses:
        201:
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
  /organizations/expanded:
    get:
      summary: List organizations of the connected user with expanded data
      operationId: listOrganizationsExpanded
      responses:
        200:
          description: List of organizations with expanded data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationExpandedResponse'
  /organizations/{organizationId}:
    get:
      summary: Read organization
      operationId: readOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOrganizationResponse'
    delete:
      summary: Delete organization
      operationId: deleteOrganization
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Organization deleted
  /organizations/{organizationId}/users:
    get:
      summary: List users
      operationId: listUsers
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
  /organizations/{organizationId}/users/{userId}:
    get:
      summary: Read user
      operationId: readUser
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: userId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Read a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadUserResponse'
  /organizations/{organizationId}/billing/portal:
    get:
      summary: Access to the billing portal
      operationId: billingPortal
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Access to the billing portal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingPortalResponse'
  /organizations/{organizationId}/billing/setup:
    get:
      summary: Create a billing setup
      operationId: billingSetup
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: Create a billing setup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingSetupResponse'
  /organizations/{organizationId}/stacks:
    get:
      summary: List stacks
      operationId: listStacks
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: List of stacks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStacksResponse'
    post:
      summary: Create stack
      operationId: createStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStackRequest'
      responses:
        200:
          description: Created stack
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStackResponse'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/{organizationId}/stacks/{stackId}:
    get:
      summary: Read stack
      operationId: readStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadStackResponse'
    delete:
      summary: Delete stack
      operationId: deleteStack
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: stackId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Stack deleted
  /me/invitations:
    get:
      summary: List invitations of the user
      operationId: listInvitations
      parameters:
      - in: query
        name: status
        required: false
        description: Status of organizations
        schema:
          type: string
      - in: query
        name: organization
        required: false
        description: Status of organizations
        schema:
          type: string
      responses:
        200:
          description: List of the invitations for the connected user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
  /me/invitations/{invitationId}/accept:
    post:
      summary: Accept invitation
      operationId: acceptInvitation
      parameters:
      - name: invitationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Invitation accepted
  /me/invitations/{invitationId}/reject:
    post:
      summary: Decline invitation
      operationId: declineInvitation
      parameters:
      - name: invitationId
        in: path
        schema:
          type: string
        required: true
      responses:
        204:
          description: Invitation declined
  /organizations/{organizationId}/invitations:
    get:
      summary: List invitations of the organization
      operationId: listOrganizationInvitations
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - in: query
        name: status
        required: false
        description: Status of organizations
        schema:
          type: string
      responses:
        200:
          description: List of the invitations for the organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvitationsResponse'
    post:
      summary: Create invitation
      operationId: createInvitation
      parameters:
      - name: organizationId
        in: path
        schema:
          type: string
        required: true
      - name: email
        in: query
        schema:
          type: string
        required: true
      responses:
        201:
          description: Invitation created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvitationResponse'
  /regions:
    get:
      summary: List regions
      operationId: listRegions
      responses:
        200:
          description: List of the regions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'

security:
- oauth2: []

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /authorize
          tokenUrl: /oauth/token
          scopes:
            openid: Enable OIDC
            email: Ask email access
  schemas:
    OrganizationData:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          description: Organization name
    Organization:
      allOf:
      - $ref: '#/components/schemas/OrganizationData'
      - type: object
        required:
        - id
        - ownerId
        properties:
          id:
            type: string
            description: Organization ID
          ownerId:
            type: string
            description: Owner ID
    StackData:
      type: object
      required:
      - name
      - tags
      - production
      - metadata
      properties:
        name:
          type: string
          description: Stack name
        tags:
          type: object
          additionalProperties:
            type: string
        production:
          type: bool
        metadata:
          type: object
          additionalProperties:
            type: string
    BillingPortal:
      type: object
      required:
      - url
      properties:
        url:
          type: string
          description: Billing portal URL
    BillingSetup:
      type: object
      required:
      - url
      properties:
        url:
          type: string
          description: Billing portal URL
    Stack:
      allOf:
      - $ref: '#/components/schemas/StackData'
      - type: object
        required:
        - id
        - organizationId
        - uri
        properties:
          id:
            type: string
            description: Stack ID
          organizationId:
            type: string
            description: Organization ID
          uri:
            type: string
            description: Base stack uri
          boundRegion:
            $ref: '#/components/schemas/Region'
    UserData:
      type: object
      properties:
        email:
          type: string
      required:
      - email
    User:
      allOf:
      - $ref: '#/components/schemas/UserData'
      - type: object
        required:
        - id
        properties:
          id:
            type: string
            description: User ID
    OrganizationArray:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    StackArray:
      type: array
      items:
        $ref: '#/components/schemas/Stack'
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/User'
    ListOrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/OrganizationArray'
    CreateOrganizationRequest:
      $ref: '#/components/schemas/OrganizationData'
    CreateOrganizationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Organization'
    ReadOrganizationResponse:
      $ref: '#/components/schemas/CreateOrganizationResponse'
    ListStacksResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StackArray'
    BillingPortalResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BillingPortal'
    BillingSetupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/BillingSetup'
    ListUsersResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserArray'
    CreateStackRequest:
      $ref: '#/components/schemas/StackData'
    CreateStackResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Stack'
    ReadStackResponse:
      $ref: '#/components/schemas/CreateStackResponse'
    ReadUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
    ListInvitationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
    CreateInvitationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Invitation'
    Error:
      type: object
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
      required:
      - errorCode
    Invitation:
      type: object
      properties:
        id:
          type: string
        organizationId:
          type: string
        userEmail:
          type: string
        status:
          type: string
          enum:
          - pending
          - accepted
          - rejected
        creationDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
      - creationDate
      - status
      - userEmail
      - organizationId
      - id
    Region:
      type: object
      required:
      - id
      - baseUrl
      - tags
      properties:
        id:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        baseUrl:
          type: string
    ListOrganizationExpandedResponse:
      type: object
      properties:
        data:
          type: array
          items:
            allOf:
            - $ref: '#/components/schemas/Organization'
            - type: object
              properties:
                totalStacks:
                  type: integer
                totalUsers:
                  type: integer
                owner:
                  $ref: '#/components/schemas/User'
    ListRegionsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
