/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the BillingSetupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingSetupResponse{}

// BillingSetupResponse struct for BillingSetupResponse
type BillingSetupResponse struct {
	Data *BillingSetup `json:"data,omitempty"`
}

// NewBillingSetupResponse instantiates a new BillingSetupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingSetupResponse() *BillingSetupResponse {
	this := BillingSetupResponse{}
	return &this
}

// NewBillingSetupResponseWithDefaults instantiates a new BillingSetupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingSetupResponseWithDefaults() *BillingSetupResponse {
	this := BillingSetupResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *BillingSetupResponse) GetData() BillingSetup {
	if o == nil || isNil(o.Data) {
		var ret BillingSetup
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingSetupResponse) GetDataOk() (*BillingSetup, bool) {
	if o == nil || isNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *BillingSetupResponse) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given BillingSetup and assigns it to the Data field.
func (o *BillingSetupResponse) SetData(v BillingSetup) {
	o.Data = &v
}

func (o BillingSetupResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingSetupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableBillingSetupResponse struct {
	value *BillingSetupResponse
	isSet bool
}

func (v NullableBillingSetupResponse) Get() *BillingSetupResponse {
	return v.value
}

func (v *NullableBillingSetupResponse) Set(val *BillingSetupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingSetupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingSetupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingSetupResponse(val *BillingSetupResponse) *NullableBillingSetupResponse {
	return &NullableBillingSetupResponse{value: val, isSet: true}
}

func (v NullableBillingSetupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingSetupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
