/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the InvitationClaim type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InvitationClaim{}

// InvitationClaim struct for InvitationClaim
type InvitationClaim struct {
	// User roles
	// Deprecated
	Roles []string `json:"roles"`
	StackClaims []StackClaimsInner `json:"stackClaims"`
}

// NewInvitationClaim instantiates a new InvitationClaim object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvitationClaim(roles []string, stackClaims []StackClaimsInner) *InvitationClaim {
	this := InvitationClaim{}
	this.Roles = roles
	this.StackClaims = stackClaims
	return &this
}

// NewInvitationClaimWithDefaults instantiates a new InvitationClaim object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvitationClaimWithDefaults() *InvitationClaim {
	this := InvitationClaim{}
	return &this
}

// GetRoles returns the Roles field value
// Deprecated
func (o *InvitationClaim) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *InvitationClaim) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
// Deprecated
func (o *InvitationClaim) SetRoles(v []string) {
	o.Roles = v
}

// GetStackClaims returns the StackClaims field value
func (o *InvitationClaim) GetStackClaims() []StackClaimsInner {
	if o == nil {
		var ret []StackClaimsInner
		return ret
	}

	return o.StackClaims
}

// GetStackClaimsOk returns a tuple with the StackClaims field value
// and a boolean to check if the value has been set.
func (o *InvitationClaim) GetStackClaimsOk() ([]StackClaimsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.StackClaims, true
}

// SetStackClaims sets field value
func (o *InvitationClaim) SetStackClaims(v []StackClaimsInner) {
	o.StackClaims = v
}

func (o InvitationClaim) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InvitationClaim) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["roles"] = o.Roles
	toSerialize["stackClaims"] = o.StackClaims
	return toSerialize, nil
}

type NullableInvitationClaim struct {
	value *InvitationClaim
	isSet bool
}

func (v NullableInvitationClaim) Get() *InvitationClaim {
	return v.value
}

func (v *NullableInvitationClaim) Set(val *InvitationClaim) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitationClaim) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitationClaim) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitationClaim(val *InvitationClaim) *NullableInvitationClaim {
	return &NullableInvitationClaim{value: val, isSet: true}
}

func (v NullableInvitationClaim) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitationClaim) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


