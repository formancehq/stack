/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the CreatedPrivateRegionResponseAllOfClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatedPrivateRegionResponseAllOfClient{}

// CreatedPrivateRegionResponseAllOfClient struct for CreatedPrivateRegionResponseAllOfClient
type CreatedPrivateRegionResponseAllOfClient struct {
	ClientSecret *string `json:"clientSecret,omitempty"`
}

// NewCreatedPrivateRegionResponseAllOfClient instantiates a new CreatedPrivateRegionResponseAllOfClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatedPrivateRegionResponseAllOfClient() *CreatedPrivateRegionResponseAllOfClient {
	this := CreatedPrivateRegionResponseAllOfClient{}
	return &this
}

// NewCreatedPrivateRegionResponseAllOfClientWithDefaults instantiates a new CreatedPrivateRegionResponseAllOfClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatedPrivateRegionResponseAllOfClientWithDefaults() *CreatedPrivateRegionResponseAllOfClient {
	this := CreatedPrivateRegionResponseAllOfClient{}
	return &this
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *CreatedPrivateRegionResponseAllOfClient) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedPrivateRegionResponseAllOfClient) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *CreatedPrivateRegionResponseAllOfClient) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *CreatedPrivateRegionResponseAllOfClient) SetClientSecret(v string) {
	o.ClientSecret = &v
}

func (o CreatedPrivateRegionResponseAllOfClient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatedPrivateRegionResponseAllOfClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	return toSerialize, nil
}

type NullableCreatedPrivateRegionResponseAllOfClient struct {
	value *CreatedPrivateRegionResponseAllOfClient
	isSet bool
}

func (v NullableCreatedPrivateRegionResponseAllOfClient) Get() *CreatedPrivateRegionResponseAllOfClient {
	return v.value
}

func (v *NullableCreatedPrivateRegionResponseAllOfClient) Set(val *CreatedPrivateRegionResponseAllOfClient) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatedPrivateRegionResponseAllOfClient) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatedPrivateRegionResponseAllOfClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatedPrivateRegionResponseAllOfClient(val *CreatedPrivateRegionResponseAllOfClient) *NullableCreatedPrivateRegionResponseAllOfClient {
	return &NullableCreatedPrivateRegionResponseAllOfClient{value: val, isSet: true}
}

func (v NullableCreatedPrivateRegionResponseAllOfClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatedPrivateRegionResponseAllOfClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
