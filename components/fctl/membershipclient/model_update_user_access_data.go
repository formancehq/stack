/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the UpdateUserAccessData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserAccessData{}

// UpdateUserAccessData struct for UpdateUserAccessData
type UpdateUserAccessData struct {
	// Is the user an admin of the organization
	IsAdmin *bool `json:"isAdmin,omitempty"`
}

// NewUpdateUserAccessData instantiates a new UpdateUserAccessData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserAccessData() *UpdateUserAccessData {
	this := UpdateUserAccessData{}
	return &this
}

// NewUpdateUserAccessDataWithDefaults instantiates a new UpdateUserAccessData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserAccessDataWithDefaults() *UpdateUserAccessData {
	this := UpdateUserAccessData{}
	return &this
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *UpdateUserAccessData) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccessData) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *UpdateUserAccessData) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *UpdateUserAccessData) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

func (o UpdateUserAccessData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserAccessData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsAdmin) {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	return toSerialize, nil
}

type NullableUpdateUserAccessData struct {
	value *UpdateUserAccessData
	isSet bool
}

func (v NullableUpdateUserAccessData) Get() *UpdateUserAccessData {
	return v.value
}

func (v *NullableUpdateUserAccessData) Set(val *UpdateUserAccessData) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserAccessData) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserAccessData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserAccessData(val *UpdateUserAccessData) *NullableUpdateUserAccessData {
	return &NullableUpdateUserAccessData{value: val, isSet: true}
}

func (v NullableUpdateUserAccessData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserAccessData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


