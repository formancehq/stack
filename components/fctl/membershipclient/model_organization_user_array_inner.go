/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the OrganizationUserArrayInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationUserArrayInner{}

// OrganizationUserArrayInner struct for OrganizationUserArrayInner
type OrganizationUserArrayInner struct {
	Role Role `json:"role"`
	Email string `json:"email"`
	// User ID
	Id string `json:"id"`
}

// NewOrganizationUserArrayInner instantiates a new OrganizationUserArrayInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationUserArrayInner(role Role, email string, id string) *OrganizationUserArrayInner {
	this := OrganizationUserArrayInner{}
	this.Role = role
	this.Email = email
	this.Id = id
	return &this
}

// NewOrganizationUserArrayInnerWithDefaults instantiates a new OrganizationUserArrayInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationUserArrayInnerWithDefaults() *OrganizationUserArrayInner {
	this := OrganizationUserArrayInner{}
	var role Role = EMPTY
	this.Role = role
	return &this
}

// GetRole returns the Role field value
func (o *OrganizationUserArrayInner) GetRole() Role {
	if o == nil {
		var ret Role
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserArrayInner) GetRoleOk() (*Role, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *OrganizationUserArrayInner) SetRole(v Role) {
	o.Role = v
}

// GetEmail returns the Email field value
func (o *OrganizationUserArrayInner) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserArrayInner) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *OrganizationUserArrayInner) SetEmail(v string) {
	o.Email = v
}

// GetId returns the Id field value
func (o *OrganizationUserArrayInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationUserArrayInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationUserArrayInner) SetId(v string) {
	o.Id = v
}

func (o OrganizationUserArrayInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationUserArrayInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["role"] = o.Role
	toSerialize["email"] = o.Email
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableOrganizationUserArrayInner struct {
	value *OrganizationUserArrayInner
	isSet bool
}

func (v NullableOrganizationUserArrayInner) Get() *OrganizationUserArrayInner {
	return v.value
}

func (v *NullableOrganizationUserArrayInner) Set(val *OrganizationUserArrayInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationUserArrayInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationUserArrayInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationUserArrayInner(val *OrganizationUserArrayInner) *NullableOrganizationUserArrayInner {
	return &NullableOrganizationUserArrayInner{value: val, isSet: true}
}

func (v NullableOrganizationUserArrayInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationUserArrayInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


