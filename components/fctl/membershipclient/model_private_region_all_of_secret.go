/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the PrivateRegionAllOfSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrivateRegionAllOfSecret{}

// PrivateRegionAllOfSecret struct for PrivateRegionAllOfSecret
type PrivateRegionAllOfSecret struct {
	LastDigits string `json:"lastDigits"`
	Clear *string `json:"clear,omitempty"`
}

// NewPrivateRegionAllOfSecret instantiates a new PrivateRegionAllOfSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrivateRegionAllOfSecret(lastDigits string) *PrivateRegionAllOfSecret {
	this := PrivateRegionAllOfSecret{}
	this.LastDigits = lastDigits
	return &this
}

// NewPrivateRegionAllOfSecretWithDefaults instantiates a new PrivateRegionAllOfSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrivateRegionAllOfSecretWithDefaults() *PrivateRegionAllOfSecret {
	this := PrivateRegionAllOfSecret{}
	return &this
}

// GetLastDigits returns the LastDigits field value
func (o *PrivateRegionAllOfSecret) GetLastDigits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastDigits
}

// GetLastDigitsOk returns a tuple with the LastDigits field value
// and a boolean to check if the value has been set.
func (o *PrivateRegionAllOfSecret) GetLastDigitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastDigits, true
}

// SetLastDigits sets field value
func (o *PrivateRegionAllOfSecret) SetLastDigits(v string) {
	o.LastDigits = v
}

// GetClear returns the Clear field value if set, zero value otherwise.
func (o *PrivateRegionAllOfSecret) GetClear() string {
	if o == nil || IsNil(o.Clear) {
		var ret string
		return ret
	}
	return *o.Clear
}

// GetClearOk returns a tuple with the Clear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrivateRegionAllOfSecret) GetClearOk() (*string, bool) {
	if o == nil || IsNil(o.Clear) {
		return nil, false
	}
	return o.Clear, true
}

// HasClear returns a boolean if a field has been set.
func (o *PrivateRegionAllOfSecret) HasClear() bool {
	if o != nil && !IsNil(o.Clear) {
		return true
	}

	return false
}

// SetClear gets a reference to the given string and assigns it to the Clear field.
func (o *PrivateRegionAllOfSecret) SetClear(v string) {
	o.Clear = &v
}

func (o PrivateRegionAllOfSecret) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrivateRegionAllOfSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lastDigits"] = o.LastDigits
	if !IsNil(o.Clear) {
		toSerialize["clear"] = o.Clear
	}
	return toSerialize, nil
}

type NullablePrivateRegionAllOfSecret struct {
	value *PrivateRegionAllOfSecret
	isSet bool
}

func (v NullablePrivateRegionAllOfSecret) Get() *PrivateRegionAllOfSecret {
	return v.value
}

func (v *NullablePrivateRegionAllOfSecret) Set(val *PrivateRegionAllOfSecret) {
	v.value = val
	v.isSet = true
}

func (v NullablePrivateRegionAllOfSecret) IsSet() bool {
	return v.isSet
}

func (v *NullablePrivateRegionAllOfSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrivateRegionAllOfSecret(val *PrivateRegionAllOfSecret) *NullablePrivateRegionAllOfSecret {
	return &NullablePrivateRegionAllOfSecret{value: val, isSet: true}
}

func (v NullablePrivateRegionAllOfSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrivateRegionAllOfSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


