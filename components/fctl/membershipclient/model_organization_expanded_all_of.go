/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the OrganizationExpandedAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationExpandedAllOf{}

// OrganizationExpandedAllOf struct for OrganizationExpandedAllOf
type OrganizationExpandedAllOf struct {
	TotalStacks int32 `json:"totalStacks"`
	TotalUsers int32 `json:"totalUsers"`
	Owner User `json:"owner"`
}

// NewOrganizationExpandedAllOf instantiates a new OrganizationExpandedAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationExpandedAllOf(totalStacks int32, totalUsers int32, owner User) *OrganizationExpandedAllOf {
	this := OrganizationExpandedAllOf{}
	this.TotalStacks = totalStacks
	this.TotalUsers = totalUsers
	this.Owner = owner
	return &this
}

// NewOrganizationExpandedAllOfWithDefaults instantiates a new OrganizationExpandedAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationExpandedAllOfWithDefaults() *OrganizationExpandedAllOf {
	this := OrganizationExpandedAllOf{}
	return &this
}

// GetTotalStacks returns the TotalStacks field value
func (o *OrganizationExpandedAllOf) GetTotalStacks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalStacks
}

// GetTotalStacksOk returns a tuple with the TotalStacks field value
// and a boolean to check if the value has been set.
func (o *OrganizationExpandedAllOf) GetTotalStacksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalStacks, true
}

// SetTotalStacks sets field value
func (o *OrganizationExpandedAllOf) SetTotalStacks(v int32) {
	o.TotalStacks = v
}

// GetTotalUsers returns the TotalUsers field value
func (o *OrganizationExpandedAllOf) GetTotalUsers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalUsers
}

// GetTotalUsersOk returns a tuple with the TotalUsers field value
// and a boolean to check if the value has been set.
func (o *OrganizationExpandedAllOf) GetTotalUsersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalUsers, true
}

// SetTotalUsers sets field value
func (o *OrganizationExpandedAllOf) SetTotalUsers(v int32) {
	o.TotalUsers = v
}

// GetOwner returns the Owner field value
func (o *OrganizationExpandedAllOf) GetOwner() User {
	if o == nil {
		var ret User
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *OrganizationExpandedAllOf) GetOwnerOk() (*User, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *OrganizationExpandedAllOf) SetOwner(v User) {
	o.Owner = v
}

func (o OrganizationExpandedAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationExpandedAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["totalStacks"] = o.TotalStacks
	toSerialize["totalUsers"] = o.TotalUsers
	toSerialize["owner"] = o.Owner
	return toSerialize, nil
}

type NullableOrganizationExpandedAllOf struct {
	value *OrganizationExpandedAllOf
	isSet bool
}

func (v NullableOrganizationExpandedAllOf) Get() *OrganizationExpandedAllOf {
	return v.value
}

func (v *NullableOrganizationExpandedAllOf) Set(val *OrganizationExpandedAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationExpandedAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationExpandedAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationExpandedAllOf(val *OrganizationExpandedAllOf) *NullableOrganizationExpandedAllOf {
	return &NullableOrganizationExpandedAllOf{value: val, isSet: true}
}

func (v NullableOrganizationExpandedAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationExpandedAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


