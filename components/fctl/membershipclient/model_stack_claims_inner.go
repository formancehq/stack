/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the StackClaimsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StackClaimsInner{}

// StackClaimsInner struct for StackClaimsInner
type StackClaimsInner struct {
	Id string `json:"id"`
	// User roles
	// Deprecated
	Roles []string `json:"roles"`
}

// NewStackClaimsInner instantiates a new StackClaimsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackClaimsInner(id string, roles []string) *StackClaimsInner {
	this := StackClaimsInner{}
	this.Id = id
	this.Roles = roles
	return &this
}

// NewStackClaimsInnerWithDefaults instantiates a new StackClaimsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackClaimsInnerWithDefaults() *StackClaimsInner {
	this := StackClaimsInner{}
	return &this
}

// GetId returns the Id field value
func (o *StackClaimsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StackClaimsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StackClaimsInner) SetId(v string) {
	o.Id = v
}

// GetRoles returns the Roles field value
// Deprecated
func (o *StackClaimsInner) GetRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *StackClaimsInner) GetRolesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Roles, true
}

// SetRoles sets field value
// Deprecated
func (o *StackClaimsInner) SetRoles(v []string) {
	o.Roles = v
}

func (o StackClaimsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StackClaimsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["roles"] = o.Roles
	return toSerialize, nil
}

type NullableStackClaimsInner struct {
	value *StackClaimsInner
	isSet bool
}

func (v NullableStackClaimsInner) Get() *StackClaimsInner {
	return v.value
}

func (v *NullableStackClaimsInner) Set(val *StackClaimsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableStackClaimsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableStackClaimsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackClaimsInner(val *StackClaimsInner) *NullableStackClaimsInner {
	return &NullableStackClaimsInner{value: val, isSet: true}
}

func (v NullableStackClaimsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackClaimsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


