/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
	"time"
)

// checks if the Log type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Log{}

// Log struct for Log
type Log struct {
	Seq string `json:"seq"`
	OrganizationId string `json:"organizationId"`
	UserId string `json:"userId"`
	Action string `json:"action"`
	Date time.Time `json:"date"`
	Data map[string]interface{} `json:"data"`
}

// NewLog instantiates a new Log object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLog(seq string, organizationId string, userId string, action string, date time.Time, data map[string]interface{}) *Log {
	this := Log{}
	this.Seq = seq
	this.OrganizationId = organizationId
	this.UserId = userId
	this.Action = action
	this.Date = date
	this.Data = data
	return &this
}

// NewLogWithDefaults instantiates a new Log object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogWithDefaults() *Log {
	this := Log{}
	return &this
}

// GetSeq returns the Seq field value
func (o *Log) GetSeq() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Seq
}

// GetSeqOk returns a tuple with the Seq field value
// and a boolean to check if the value has been set.
func (o *Log) GetSeqOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seq, true
}

// SetSeq sets field value
func (o *Log) SetSeq(v string) {
	o.Seq = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *Log) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *Log) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *Log) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetUserId returns the UserId field value
func (o *Log) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *Log) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *Log) SetUserId(v string) {
	o.UserId = v
}

// GetAction returns the Action field value
func (o *Log) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *Log) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *Log) SetAction(v string) {
	o.Action = v
}

// GetDate returns the Date field value
func (o *Log) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *Log) GetDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *Log) SetDate(v time.Time) {
	o.Date = v
}

// GetData returns the Data field value
func (o *Log) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *Log) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *Log) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o Log) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Log) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["seq"] = o.Seq
	toSerialize["organizationId"] = o.OrganizationId
	toSerialize["userId"] = o.UserId
	toSerialize["action"] = o.Action
	toSerialize["date"] = o.Date
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableLog struct {
	value *Log
	isSet bool
}

func (v NullableLog) Get() *Log {
	return v.value
}

func (v *NullableLog) Set(val *Log) {
	v.value = val
	v.isSet = true
}

func (v NullableLog) IsSet() bool {
	return v.isSet
}

func (v *NullableLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLog(val *Log) *NullableLog {
	return &NullableLog{value: val, isSet: true}
}

func (v NullableLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


