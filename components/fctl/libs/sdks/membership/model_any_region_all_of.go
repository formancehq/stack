/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the AnyRegionAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnyRegionAllOf{}

// AnyRegionAllOf struct for AnyRegionAllOf
type AnyRegionAllOf struct {
	ClientID *string `json:"clientID,omitempty"`
	OrganizationID *string `json:"organizationID,omitempty"`
	Creator *User `json:"creator,omitempty"`
	Production *bool `json:"production,omitempty"`
	Public bool `json:"public"`
	Version *string `json:"version,omitempty"`
}

// NewAnyRegionAllOf instantiates a new AnyRegionAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnyRegionAllOf(public bool) *AnyRegionAllOf {
	this := AnyRegionAllOf{}
	this.Public = public
	return &this
}

// NewAnyRegionAllOfWithDefaults instantiates a new AnyRegionAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnyRegionAllOfWithDefaults() *AnyRegionAllOf {
	this := AnyRegionAllOf{}
	return &this
}

// GetClientID returns the ClientID field value if set, zero value otherwise.
func (o *AnyRegionAllOf) GetClientID() string {
	if o == nil || IsNil(o.ClientID) {
		var ret string
		return ret
	}
	return *o.ClientID
}

// GetClientIDOk returns a tuple with the ClientID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetClientIDOk() (*string, bool) {
	if o == nil || IsNil(o.ClientID) {
		return nil, false
	}
	return o.ClientID, true
}

// HasClientID returns a boolean if a field has been set.
func (o *AnyRegionAllOf) HasClientID() bool {
	if o != nil && !IsNil(o.ClientID) {
		return true
	}

	return false
}

// SetClientID gets a reference to the given string and assigns it to the ClientID field.
func (o *AnyRegionAllOf) SetClientID(v string) {
	o.ClientID = &v
}

// GetOrganizationID returns the OrganizationID field value if set, zero value otherwise.
func (o *AnyRegionAllOf) GetOrganizationID() string {
	if o == nil || IsNil(o.OrganizationID) {
		var ret string
		return ret
	}
	return *o.OrganizationID
}

// GetOrganizationIDOk returns a tuple with the OrganizationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetOrganizationIDOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationID) {
		return nil, false
	}
	return o.OrganizationID, true
}

// HasOrganizationID returns a boolean if a field has been set.
func (o *AnyRegionAllOf) HasOrganizationID() bool {
	if o != nil && !IsNil(o.OrganizationID) {
		return true
	}

	return false
}

// SetOrganizationID gets a reference to the given string and assigns it to the OrganizationID field.
func (o *AnyRegionAllOf) SetOrganizationID(v string) {
	o.OrganizationID = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *AnyRegionAllOf) GetCreator() User {
	if o == nil || IsNil(o.Creator) {
		var ret User
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetCreatorOk() (*User, bool) {
	if o == nil || IsNil(o.Creator) {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *AnyRegionAllOf) HasCreator() bool {
	if o != nil && !IsNil(o.Creator) {
		return true
	}

	return false
}

// SetCreator gets a reference to the given User and assigns it to the Creator field.
func (o *AnyRegionAllOf) SetCreator(v User) {
	o.Creator = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *AnyRegionAllOf) GetProduction() bool {
	if o == nil || IsNil(o.Production) {
		var ret bool
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetProductionOk() (*bool, bool) {
	if o == nil || IsNil(o.Production) {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *AnyRegionAllOf) HasProduction() bool {
	if o != nil && !IsNil(o.Production) {
		return true
	}

	return false
}

// SetProduction gets a reference to the given bool and assigns it to the Production field.
func (o *AnyRegionAllOf) SetProduction(v bool) {
	o.Production = &v
}

// GetPublic returns the Public field value
func (o *AnyRegionAllOf) GetPublic() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Public
}

// GetPublicOk returns a tuple with the Public field value
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetPublicOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Public, true
}

// SetPublic sets field value
func (o *AnyRegionAllOf) SetPublic(v bool) {
	o.Public = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AnyRegionAllOf) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnyRegionAllOf) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AnyRegionAllOf) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AnyRegionAllOf) SetVersion(v string) {
	o.Version = &v
}

func (o AnyRegionAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnyRegionAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientID) {
		toSerialize["clientID"] = o.ClientID
	}
	if !IsNil(o.OrganizationID) {
		toSerialize["organizationID"] = o.OrganizationID
	}
	if !IsNil(o.Creator) {
		toSerialize["creator"] = o.Creator
	}
	if !IsNil(o.Production) {
		toSerialize["production"] = o.Production
	}
	toSerialize["public"] = o.Public
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAnyRegionAllOf struct {
	value *AnyRegionAllOf
	isSet bool
}

func (v NullableAnyRegionAllOf) Get() *AnyRegionAllOf {
	return v.value
}

func (v *NullableAnyRegionAllOf) Set(val *AnyRegionAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAnyRegionAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAnyRegionAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnyRegionAllOf(val *AnyRegionAllOf) *NullableAnyRegionAllOf {
	return &NullableAnyRegionAllOf{value: val, isSet: true}
}

func (v NullableAnyRegionAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnyRegionAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


