/*
Membership API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package membershipclient

import (
	"encoding/json"
)

// checks if the ListModulesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListModulesResponse{}

// ListModulesResponse struct for ListModulesResponse
type ListModulesResponse struct {
	Data []Module `json:"data"`
}

// NewListModulesResponse instantiates a new ListModulesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListModulesResponse(data []Module) *ListModulesResponse {
	this := ListModulesResponse{}
	this.Data = data
	return &this
}

// NewListModulesResponseWithDefaults instantiates a new ListModulesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListModulesResponseWithDefaults() *ListModulesResponse {
	this := ListModulesResponse{}
	return &this
}

// GetData returns the Data field value
func (o *ListModulesResponse) GetData() []Module {
	if o == nil {
		var ret []Module
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListModulesResponse) GetDataOk() ([]Module, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *ListModulesResponse) SetData(v []Module) {
	o.Data = v
}

func (o ListModulesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListModulesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	return toSerialize, nil
}

type NullableListModulesResponse struct {
	value *ListModulesResponse
	isSet bool
}

func (v NullableListModulesResponse) Get() *ListModulesResponse {
	return v.value
}

func (v *NullableListModulesResponse) Set(val *ListModulesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListModulesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListModulesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListModulesResponse(val *ListModulesResponse) *NullableListModulesResponse {
	return &NullableListModulesResponse{value: val, isSet: true}
}

func (v NullableListModulesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListModulesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


