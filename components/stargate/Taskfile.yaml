version: '3'

vars:
  COMPONENT:
    sh: cat go.mod |head -1|cut -d \  -f2|cut -d / -f 3

tasks:
  tests:
    cmds:
      - go test -p 1 -coverpkg ./... -coverprofile coverage.out -covermode atomic ./...
  lint:
    cmds:
    - golangci-lint run --fix --allow-parallel-runners --config ./../../.golangci.yml
  build:
    cmds:
    - go build
  build-image:
    cmds:
    - docker build -t github.com/formancehq/{{.COMPONENT}} .
  run-image:
    deps:
    - build-image
    cmds:
    - docker run --rm github.com/formancehq/{{.COMPONENT}}

  proto:
    preconditions:
      - sh: test -f $GOPATH/bin/protoc-gen-go
        msg: "Please try this command: go install google.golang.org/protobuf/cmd/protoc-gen-go"
      - sh: test -f $GOPATH/bin/protoc-gen-go-grpc
        msg: "Please try this command: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc"
    vars:
      PROTOFILES:
        sh: find . -type f -name '*.proto'
    cmds:
    - protoc --proto_path=. --go_out=. --go-grpc_out=. --go-grpc_opt=paths=source_relative --go_opt=paths=source_relative {{.PROTOFILES}}

  proto-fmt:
    preconditions:
      - sh: command -v clang-format > /dev/null
        msg: "clang-format not found. Please install clang-format."
    vars:
      PROTOFILES:
        sh: find . -type f -name '*.proto'
    cmds:
    - clang-format -style=file -i {{.PROTOFILES}}
