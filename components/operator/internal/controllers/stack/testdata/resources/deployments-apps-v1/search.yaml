apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        reloader.stakater.com/auto: "true"
    generation: 1
    labels:
        stack: "true"
    name: search
    namespace: stack1
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app.kubernetes.io/name: search
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            creationTimestamp: null
            labels:
                app.kubernetes.io/name: search
        spec:
            containers:
                - env:
                    - name: DEBUG
                      value: "false"
                    - name: DEV
                      value: "false"
                    - name: STACK_URL
                      value: http://example.net
                    - name: OTEL_SERVICE_NAME
                      value: search
                    - name: OPENSEARCH_URL
                      value: http://elasticsearch:9200
                    - name: OPENSEARCH_INDEX
                      value: stack1
                    - name: OPENSEARCH_BATCHING_COUNT
                      value: "0"
                    - name: OPENSEARCH_BATCHING_PERIOD
                    - name: TOPIC_PREFIX
                      value: stack1-
                    - name: KAFKA_ADDRESS
                      value: kafka:1234
                    - name: OPEN_SEARCH_SERVICE
                      value: elasticsearch:9200
                    - name: OPEN_SEARCH_SCHEME
                      value: http
                    - name: ES_INDICES
                      value: stack1
                    - name: MAPPING_INIT_DISABLED
                      value: "true"
                  image: ghcr.io/formancehq/search:latest
                  imagePullPolicy: Always
                  livenessProbe:
                    failureThreshold: 10
                    httpGet:
                        path: /_healthcheck
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 2
                    successThreshold: 1
                    timeoutSeconds: 30
                  name: search
                  ports:
                    - containerPort: 8080
                      name: http
                      protocol: TCP
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
status: {}
