apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        reloader.stakater.com/auto: "true"
    generation: 1
    labels:
        stack: "true"
    name: webhooks-worker
    namespace: stack1
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app.kubernetes.io/name: webhooks-worker
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            creationTimestamp: null
            labels:
                app.kubernetes.io/name: webhooks-worker
        spec:
            containers:
                - command:
                    - /usr/bin/webhooks
                    - worker
                  env:
                    - name: POSTGRES_HOST
                      value: localhost
                    - name: POSTGRES_PORT
                      value: "32824"
                    - name: POSTGRES_DATABASE
                      value: stack1-webhooks
                    - name: POSTGRES_USERNAME
                      value: root
                    - name: POSTGRES_PASSWORD
                      value: root
                    - name: POSTGRES_NO_DATABASE_URI
                      value: postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)
                    - name: POSTGRES_URI
                      value: $(POSTGRES_NO_DATABASE_URI)/$(POSTGRES_DATABASE)?sslmode=disable
                    - name: DEBUG
                      value: "false"
                    - name: DEV
                      value: "false"
                    - name: STACK_URL
                      value: http://example.net
                    - name: OTEL_SERVICE_NAME
                      value: webhooks-worker
                    - name: BROKER
                      value: kafka
                    - name: PUBLISHER_KAFKA_ENABLED
                      value: "true"
                    - name: PUBLISHER_KAFKA_BROKER
                      value: kafka:1234
                    - name: STORAGE_POSTGRES_CONN_STRING
                      value: $(POSTGRES_URI)
                    - name: KAFKA_TOPICS
                      value: stack1-ledger stack1-payments
                  image: ghcr.io/formancehq/webhooks:latest
                  imagePullPolicy: Always
                  name: webhooks-worker
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
status: {}
