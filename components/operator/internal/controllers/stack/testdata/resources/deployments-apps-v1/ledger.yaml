apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        reloader.stakater.com/auto: "true"
    generation: 1
    labels:
        stack: "true"
    name: ledger
    namespace: stack1
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app.kubernetes.io/name: ledger
    strategy:
        rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
        type: RollingUpdate
    template:
        metadata:
            creationTimestamp: null
            labels:
                app.kubernetes.io/name: ledger
        spec:
            containers:
                - env:
                    - name: POSTGRES_HOST
                      value: localhost
                    - name: POSTGRES_PORT
                      value: "32824"
                    - name: POSTGRES_DATABASE
                      value: stack1-ledger
                    - name: POSTGRES_USERNAME
                      value: root
                    - name: POSTGRES_PASSWORD
                      value: root
                    - name: POSTGRES_NO_DATABASE_URI
                      value: postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)
                    - name: POSTGRES_URI
                      value: $(POSTGRES_NO_DATABASE_URI)/$(POSTGRES_DATABASE)?sslmode=disable
                    - name: DEBUG
                      value: "false"
                    - name: DEV
                      value: "false"
                    - name: STACK_URL
                      value: http://example.net
                    - name: OTEL_SERVICE_NAME
                      value: ledger
                    - name: NUMARY_SERVER_HTTP_BIND_ADDRESS
                      value: 0.0.0.0:8080
                    - name: NUMARY_STORAGE_DRIVER
                      value: postgres
                    - name: NUMARY_PUBLISHER_TOPIC_MAPPING
                      value: '*:stack1-ledger'
                    - name: NUMARY_BROKER
                      value: kafka
                    - name: NUMARY_PUBLISHER_KAFKA_ENABLED
                      value: "true"
                    - name: NUMARY_PUBLISHER_KAFKA_BROKER
                      value: kafka:1234
                    - name: NUMARY_STORAGE_POSTGRES_CONN_STRING
                      value: $(NUMARY_POSTGRES_URI)
                  image: ghcr.io/formancehq/ledger:latest
                  imagePullPolicy: Always
                  livenessProbe:
                    failureThreshold: 10
                    httpGet:
                        path: /_healthcheck
                        port: 8080
                        scheme: HTTP
                    initialDelaySeconds: 1
                    periodSeconds: 2
                    successThreshold: 1
                    timeoutSeconds: 30
                  name: ledger
                  ports:
                    - containerPort: 8080
                      name: http
                      protocol: TCP
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
status: {}
