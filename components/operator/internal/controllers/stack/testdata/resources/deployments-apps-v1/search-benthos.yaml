apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        reloader.stakater.com/auto: "true"
    generation: 1
    labels:
        stack: "true"
    name: search-benthos
    namespace: stack1
spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app.kubernetes.io/name: search-benthos
    strategy:
        type: Recreate
    template:
        metadata:
            creationTimestamp: null
            labels:
                app.kubernetes.io/name: search-benthos
        spec:
            containers:
                - command:
                    - /benthos
                    - -r
                    - /config/resources/*.yaml
                    - -t
                    - /config/templates/*.yaml
                    - -c
                    - /config/global/config.yaml
                    - --log.level
                    - trace
                    - streams
                    - /config/streams/*.yaml
                  env:
                    - name: DEBUG
                      value: "false"
                    - name: DEV
                      value: "false"
                    - name: STACK_URL
                      value: http://example.net
                    - name: OTEL_SERVICE_NAME
                      value: search-benthos
                    - name: OPENSEARCH_URL
                      value: http://elasticsearch:9200
                    - name: OPENSEARCH_INDEX
                      value: stack1
                    - name: OPENSEARCH_BATCHING_COUNT
                      value: "0"
                    - name: OPENSEARCH_BATCHING_PERIOD
                    - name: TOPIC_PREFIX
                      value: stack1-
                    - name: KAFKA_ADDRESS
                      value: kafka:1234
                    - name: LEDGER_POSTGRES_HOST
                      value: localhost
                    - name: LEDGER_POSTGRES_PORT
                      value: "32947"
                    - name: LEDGER_POSTGRES_DATABASE
                      value: stack1-ledger
                    - name: LEDGER_POSTGRES_USERNAME
                      value: root
                    - name: LEDGER_POSTGRES_PASSWORD
                      value: root
                    - name: LEDGER_POSTGRES_NO_DATABASE_URI
                      value: postgresql://$(LEDGER_POSTGRES_USERNAME):$(LEDGER_POSTGRES_PASSWORD)@$(LEDGER_POSTGRES_HOST):$(LEDGER_POSTGRES_PORT)
                    - name: LEDGER_POSTGRES_URI
                      value: $(LEDGER_POSTGRES_NO_DATABASE_URI)/$(LEDGER_POSTGRES_DATABASE)?sslmode=disable
                    - name: BROKER
                      value: kafka
                  image: jeffail/benthos:4.10.0
                  imagePullPolicy: IfNotPresent
                  name: search-benthos
                  ports:
                    - containerPort: 4195
                      name: http
                      protocol: TCP
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                    - mountPath: /config/global
                      name: global
                      readOnly: true
                    - mountPath: /config/resources
                      name: resources
                      readOnly: true
                    - mountPath: /config/streams
                      name: streams
                      readOnly: true
                    - mountPath: /config/templates
                      name: templates
                      readOnly: true
            dnsPolicy: ClusterFirst
            initContainers:
                - args:
                    - -c
                    - 'curl -H ''Content-Type: application/json'' -X PUT -v -d ''{"mappings":{"properties":{"data":{"type":"object","enabled":false},"indexed":{"properties":{"account":{"type":"keyword"},"address":{"type":"keyword"},"amount":{"type":"float"},"asset":{"type":"keyword"},"createdAt":{"type":"date"},"destination":{"type":"keyword"},"id":{"type":"keyword"},"initialAmount":{"type":"long"},"ledger":{"type":"keyword"},"name":{"type":"keyword"},"provider":{"type":"keyword"},"reference":{"type":"keyword"},"scheme":{"type":"keyword"},"source":{"type":"keyword"},"status":{"type":"keyword"},"timestamp":{"type":"date"},"txid":{"type":"long"},"type":{"type":"keyword"}},"type":"object"},"kind":{"type":"keyword"},"ledger":{"type":"keyword"},"when":{"type":"date"}}}}'' ${OPEN_SEARCH_SCHEME}://${OPEN_SEARCH_SERVICE}/stack1'
                  command:
                    - sh
                  env:
                    - name: OPEN_SEARCH_HOST
                      value: elasticsearch
                    - name: OPEN_SEARCH_PORT
                      value: "9200"
                    - name: OPEN_SEARCH_PATH_PREFIX
                    - name: OPEN_SEARCH_SCHEME
                      value: http
                    - name: OPEN_SEARCH_SERVICE
                      value: $(OPEN_SEARCH_HOST):$(OPEN_SEARCH_PORT)$(OPEN_SEARCH_PATH_PREFIX)
                  image: curlimages/curl:7.86.0
                  imagePullPolicy: IfNotPresent
                  name: init-mapping
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
            volumes:
                - configMap:
                    defaultMode: 420
                    name: search-benthos-global
                  name: global
                - configMap:
                    defaultMode: 420
                    name: search-benthos-resources
                  name: resources
                - configMap:
                    defaultMode: 420
                    name: search-benthos-streams
                  name: streams
                - configMap:
                    defaultMode: 420
                    name: search-benthos-templates
                  name: templates
status: {}
