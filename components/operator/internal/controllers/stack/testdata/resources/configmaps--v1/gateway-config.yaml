apiVersion: v1
data:
    Caddyfile: |-
        (cors) {
        	header {
        		Access-Control-Allow-Methods "GET,OPTIONS,PUT,POST,DELETE,HEAD,PATCH"
        		Access-Control-Allow-Headers content-type
        		Access-Control-Max-Age 100
        		Access-Control-Allow-Origin *
        	}
        }

        (handle_route_without_jwt) {
        	# handle does not strips the prefix from the request path
        	handle {args.0}/* {
        		reverse_proxy {args.1}

        		import cors
        	}
        }

        (handle_path_route_with_jwt) {
        	# handle_path automatically strips the prefix from the request path
        	handle_path {args.0}* {
        		reverse_proxy {args.1}

        		import cors

        		import jwt
        	}
        }

        (handle_path_route_without_jwt) {
        	# handle_path automatically strips the prefix from the request path
        	handle_path {args.0}* {
        		reverse_proxy {args.1}

        		import cors
        	}
        }

        (jwt) {
        	jwtauth {
        		sign_alg RS256
        		jwk_url http://auth:8080/keys
        		from_header Authorization
        		refresh_window 10s
        		min_refresh_interval 10s
        	}
        }

        {
        	

        	# Many directives manipulate the HTTP handler chain and the order in which
        	# those directives are evaluated matters. So the jwtauth directive must be
        	# ordered.
        	# c.f. https://caddyserver.com/docs/caddyfile/directives#directive-order
        	order jwtauth before basicauth
        	order versions after metrics
        }

        :8080 {
        	tracing {
        		span gateway
        	}
        	log {
        		output stdout
        	}
        	import handle_path_route_without_jwt /api/auth auth:8080
        	import handle_path_route_with_jwt /api/ledger ledger:8080
        	import handle_path_route_with_jwt /api/orchestration orchestration:8080
        	import handle_path_route_with_jwt /api/payments payments:8080
        	import handle_path_route_with_jwt /api/search search:8080
        	import handle_path_route_with_jwt /api/search-benthos search-benthos:4195
        	import handle_path_route_with_jwt /api/wallets wallets:8080
        	import handle_path_route_with_jwt /api/webhooks webhooks:8080

        	handle /versions {
        		versions {
        			auth http://auth:8080/_info
        			ledger http://ledger:8080/_info
        			orchestration http://orchestration:8080/_info
        			payments http://payments:8080/_info
        			search http://search:8080/_info
        			wallets http://wallets:8080/_info
        			webhooks http://webhooks:8080/_info
        		}
        	}

        	# handle all other requests
        	handle {
        		reverse_proxy control:3000
        		import cors
        	}
        }
kind: ConfigMap
metadata:
    labels:
        stack: "true"
    name: gateway-config
    namespace: stack1
