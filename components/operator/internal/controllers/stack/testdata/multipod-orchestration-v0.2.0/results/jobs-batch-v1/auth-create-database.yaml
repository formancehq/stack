apiVersion: batch/v1
kind: Job
metadata:
    generation: 1
    labels:
        stack: "true"
    name: auth-create-database
    namespace: multipod-orchestration-v0-2-0
spec:
    backoffLimit: 6
    completionMode: NonIndexed
    completions: 1
    parallelism: 1
    selector:
        matchLabels: {}
    suspend: false
    template:
        metadata:
            creationTimestamp: null
            labels:
                job-name: auth-create-database
        spec:
            containers:
                - args:
                    - sh
                    - -c
                    - echo SELECT \'CREATE DATABASE \"${POSTGRES_DATABASE}\"\' WHERE NOT EXISTS \(SELECT FROM pg_database WHERE datname = \'${POSTGRES_DATABASE}\'\)\\gexec | psql -h ${POSTGRES_HOST} -p ${POSTGRES_PORT} -U ${POSTGRES_USERNAME} "sslmode=disable"
                  env:
                    - name: POSTGRES_HOST
                      value: localhost
                    - name: POSTGRES_PORT
                      value: "5432"
                    - name: POSTGRES_DATABASE
                      value: multipod-orchestration-v0-2-0-auth
                    - name: POSTGRES_USERNAME
                      value: root
                    - name: POSTGRES_PASSWORD
                      value: root
                    - name: POSTGRES_NO_DATABASE_URI
                      value: postgresql://$(POSTGRES_USERNAME):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)
                    - name: POSTGRES_URI
                      value: $(POSTGRES_NO_DATABASE_URI)/$(POSTGRES_DATABASE)?sslmode=disable
                    - name: PGPASSWORD
                      value: $(POSTGRES_PASSWORD)
                  image: postgres:15-alpine
                  imagePullPolicy: IfNotPresent
                  name: create-database
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: OnFailure
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
status:
    succeeded: 1
