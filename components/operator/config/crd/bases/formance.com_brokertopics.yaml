---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: brokertopics.formance.com
spec:
  group: formance.com
  names:
    kind: BrokerTopic
    listKind: BrokerTopicList
    plural: brokertopics
    singular: brokertopic
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Error
      jsonPath: .status.error
      name: Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: BrokerTopic is the Schema for the topics API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BrokerTopicSpec defines the desired state of BrokerTopic
            properties:
              service:
                type: string
              stack:
                type: string
            required:
            - service
            type: object
          status:
            description: BrokerTopicStatus defines the observed state of BrokerTopic
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type CommonStatus []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - status
                  - type
                  type: object
                type: array
              configuration:
                description: BrokerConfigurationSpec defines the desired state of
                  BrokerConfig
                properties:
                  kafka:
                    properties:
                      brokers:
                        items:
                          type: string
                        type: array
                      sasl:
                        properties:
                          mechanism:
                            type: string
                          password:
                            type: string
                          scramSHASize:
                            type: string
                          username:
                            type: string
                        required:
                        - mechanism
                        - scramSHASize
                        type: object
                      tls:
                        type: boolean
                    required:
                    - brokers
                    type: object
                  nats:
                    properties:
                      replicas:
                        default: 1
                        type: integer
                      url:
                        type: string
                    required:
                    - url
                    type: object
                type: object
              error:
                type: string
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
