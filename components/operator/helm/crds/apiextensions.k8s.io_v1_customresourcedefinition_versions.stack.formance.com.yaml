apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: versions.stack.formance.com
spec:
  group: stack.formance.com
  names:
    kind: Versions
    listKind: VersionsList
    plural: versions
    singular: versions
  scope: Cluster
  versions:
  - name: v1beta2
    schema:
      openAPIV3Schema:
        description: Versions is the Schema for the versions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VersionsSpec defines the desired state of Versions
            properties:
              auth:
                type: string
              control:
                type: string
              counterparties:
                type: string
              ledger:
                type: string
              orchestration:
                type: string
              payments:
                type: string
              search:
                type: string
              wallets:
                type: string
              webhooks:
                type: string
            type: object
          status:
            description: VersionsStatus defines the observed state of Versions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - name: v1beta3
    schema:
      openAPIV3Schema:
        description: Versions is the Schema for the versions API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VersionsSpec defines the desired state of Versions
            properties:
              auth:
                type: string
              control:
                type: string
              gateway:
                type: string
              ledger:
                type: string
              orchestration:
                type: string
              payments:
                type: string
              reconciliation:
                type: string
              search:
                type: string
              stargate:
                type: string
              wallets:
                type: string
              webhooks:
                type: string
            type: object
          status:
            description: VersionsStatus defines the observed state of Versions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
