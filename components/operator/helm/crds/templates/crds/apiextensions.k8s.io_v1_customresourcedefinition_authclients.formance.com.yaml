apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
    helm.sh/resource-policy: keep
  name: authclients.formance.com
spec:
  group: formance.com
  names:
    kind: AuthClient
    listKind: AuthClientList
    plural: authclients
    singular: authclient
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Stack
      jsonPath: .spec.stack
      name: Stack
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: AuthClient allow to create OAuth2/OIDC clients on the auth server
          (see [Auth](#auth))
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              description:
                description: Description represents an optional description of the
                  client
                type: string
              id:
                description: |-
                  ID indicates the client id
                  It must be used with oauth2 `client_id` parameter
                type: string
              postLogoutRedirectUris:
                description: RedirectUris allow to list allowed post logout redirect
                  uris for the client
                items:
                  type: string
                type: array
              public:
                default: false
                description: |-
                  Public indicate whether a client is confidential or not.
                  Confidential clients are clients which the secret can be kept secret...
                  As opposed to public clients which cannot have a secret (application single page for example)
                type: boolean
              redirectUris:
                description: RedirectUris allow to list allowed redirect uris for
                  the client
                items:
                  type: string
                type: array
              scopes:
                description: Scopes allow to five some scope to the client
                items:
                  type: string
                type: array
              secret:
                description: |-
                  Secret allow to configure a secret for the client.
                  It is not required as some client could use some oauth2 flows which does not requires a client secret
                type: string
              stack:
                description: Stack indicates the stack on which the module is installed
                type: string
            required:
            - id
            type: object
          status:
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Status []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      pattern: ^([A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?)?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - status
                  - type
                  type: object
                type: array
              info:
                description: Info can contain any additional like reconciliation errors
                type: string
              ready:
                description: Ready indicates if the resource is seen as completely
                  reconciled
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
