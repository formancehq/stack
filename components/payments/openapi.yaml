openapi: 3.0.3
info:
  title: Payments API
  version: "PAYMENTS_VERSION"

# ---------------------- PATHS ----------------------
paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      tags:
        - Payments
      responses:
        200:
          $ref: '#/components/responses/ServerInfo'
  /payments:
    get:
      summary: List payments
      operationId: listPayments
      tags:
        - Payments
      parameters:
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Cursor'
        - $ref: '#/components/parameters/Sort'
      responses:
        '200':
          $ref: '#/components/responses/Payments'
  /payments/{paymentId}:
    get:
      summary: Get a payment
      tags:
        - Payments
      operationId: getPayment
      parameters:
        - $ref: '#/components/parameters/PaymentId'
      responses:
        '200':
          $ref: '#/components/responses/Payment'
  /payments/{paymentId}/metadata:
    patch:
      summary: Update metadata
      tags:
        - Payments
      operationId: updateMetadata
      parameters:
        - $ref: '#/components/parameters/PaymentId'
      requestBody:
        $ref: '#/components/requestBodies/UpdateMetadata'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
  /accounts:
      get:
        summary: List accounts
        operationId: listAccounts
        tags:
          - Payments
        parameters:
          - $ref: '#/components/parameters/PageSize'
          - $ref: '#/components/parameters/Cursor'
          - $ref: '#/components/parameters/Sort'
        responses:
          '200':
            $ref: '#/components/responses/Accounts'
  /connectors:
    get:
      summary: List all installed connectors
      operationId: listAllConnectors
      tags:
        - Payments
      description: List all installed connectors.
      responses:
        '200':
          $ref: '#/components/responses/Connectors'
  /connectors/configs:
    get:
      summary: List the configs of each available connector
      operationId: listConfigsAvailableConnectors
      tags:
        - Payments
      description: List the configs of each available connector.
      responses:
        '200':
          $ref: '#/components/responses/ConnectorsConfigs'
  /connectors/{connector}:
    post:
      summary: Install a connector
      tags:
        - Payments
      operationId: installConnector
      description: Install a connector by its name and config.
      parameters:
        - $ref: '#/components/parameters/Connector'
      requestBody:
        $ref: '#/components/requestBodies/ConnectorConfig'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
    delete:
      summary: Uninstall a connector
      operationId: uninstallConnector
      tags:
        - Payments
      description: Uninstall a connector by its name.
      parameters:
        - $ref: '#/components/parameters/Connector'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
  /connectors/{connector}/config:
    get:
      summary: Read the config of a connector
      operationId: readConnectorConfig
      tags:
        - Payments
      description: Read connector config
      parameters:
        - $ref: '#/components/parameters/Connector'
      responses:
        '200':
          $ref: '#/components/responses/ConnectorConfig'
  /connectors/{connector}/reset:
    post:
      summary: Reset a connector
      operationId: resetConnector
      tags:
        - Payments
      description: |
        Reset a connector by its name.
        It will remove the connector and ALL PAYMENTS generated with it.
      parameters:
        - $ref: '#/components/parameters/Connector'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
  /connectors/{connector}/tasks:
    get:
      summary: List tasks from a connector
      tags:
        - Payments
      operationId: listConnectorTasks
      description: List all tasks associated with this connector.
      parameters:
        - $ref: '#/components/parameters/Connector'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/Cursor'
      responses:
        '200':
          $ref: '#/components/responses/Tasks'
  /connectors/{connector}/tasks/{taskId}:
    get:
      summary: Read a specific task of the connector
      tags:
        - Payments
      operationId: getConnectorTask
      description: Get a specific task associated to the connector.
      parameters:
        - $ref: '#/components/parameters/Connector'
        - $ref: '#/components/parameters/TaskId'
      responses:
        '200':
          $ref: '#/components/responses/Task'
  /connectors/{connector}/transfers:
    post:
      summary: Transfer funds between Connector accounts
      tags:
        - Payments
      operationId: connectorsTransfer
      description: Execute a transfer between two accounts.
      parameters:
        - $ref: '#/components/parameters/Connector'
      requestBody:
        $ref: '#/components/requestBodies/Transfer'
      responses:
        '200':
          $ref: '#/components/responses/Transfer'
    get:
      summary: List transfers and their statuses
      tags:
        - Payments
      operationId: listConnectorsTransfers
      description: List transfers
      parameters:
        - $ref: '#/components/parameters/Connector'
      responses:
        '200':
          $ref: '#/components/responses/Transfers'
  /connectors/stripe/transfers:
    post:
      summary: Transfer funds between Stripe accounts
      tags:
        - Payments
      operationId: connectorsStripeTransfer
      description: Execute a transfer between two Stripe accounts.
      requestBody:
        $ref: '#/components/requestBodies/StripeTransfer'
      responses:
        '200':
            $ref: '#/components/responses/StripeTransfer'

# ---------------------- COMPONENTS ----------------------
components:
  # ---------------------- PARAMETERS ----------------------
  parameters:
    PageSize:
      name: pageSize
      in: query
      description: |
        The maximum number of results to return per page.
      example: 100
      schema:
        type: integer
        format: int64
        minimum: 1
        maximum: 1000
        default: 15
    Cursor:
      name: cursor
      in: query
      description: |
        Parameter used in pagination requests. Maximum page size is set to 15.
        Set to the value of next for the next page of results.
        Set to the value of previous for the previous page of results.
        No other parameters can be set when this parameter is set.
      schema:
        type: string
        example: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
    Sort:
      name: sort
      in: query
      schema:
        type: array
        items:
          type: string
      description: Fields used to sort payments (default is date:desc).
      example:
      - date:asc
      - status:desc
    PaymentId:
      name: paymentId
      in: path
      schema:
        type: string
      description: The payment ID.
      example: XXX
      required: true
    Connector:
      name: connector
      description: The name of the connector.
      in: path
      schema:
        $ref: '#/components/schemas/Connector'
      required: true
    TaskId:
      name: taskId
      description: The task ID.
      example: task1
      in: path
      schema:
        type: string
      required: true

  # ---------------------- RESPONSES ----------------------
  responses:
    NoContent:
      description: No content
    ServerInfo:
      description: Server information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerInfo'
    Payments:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentsCursor'
    Payment:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentResponse'
    Accounts:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccountsCursor'
    Connectors:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorsResponse'
    ConnectorsConfigs:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorsConfigsResponse'
    ConnectorConfig:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorConfigResponse'
    Tasks:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TasksCursor'
    Task:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskResponse'
    StripeTransfer:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StripeTransferResponse'
    Transfer:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransferResponse'
    Transfers:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransfersResponse'
  # ---------------------- REQUESTS ----------------------
  requestBodies:
    ConnectorConfig:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConnectorConfig'
    StripeTransfer:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StripeTransferRequest'
    UpdateMetadata:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentMetadata'
    Transfer:
      required: true
      content:
        application/json:
          schema:
              $ref: '#/components/schemas/TransferRequest'

  # ---------------------- SCHEMAS ----------------------
  schemas:
    # ---------------------- CURSORS ----------------------
    CursorBase:
      type: object
      required:
        - pageSize
        - hasMore
        - data
      properties:
        pageSize:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
          example: 15
        hasMore:
          type: boolean
          example: false
        previous:
          type: string
          example: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
        next:
          type: string
          example: ""
    PaymentsCursor:
      type: object
      required:
        - cursor
      properties:
        cursor:
          allOf:
            - $ref: '#/components/schemas/CursorBase'
            - type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Payment'
    AccountsCursor:
      type: object
      required:
        - cursor
      properties:
        cursor:
          allOf:
            - $ref: '#/components/schemas/CursorBase'
            - type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'
    TasksCursor:
      type: object
      required:
        - cursor
      properties:
        cursor:
          allOf:
            - $ref: '#/components/schemas/CursorBase'
            - type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    oneOf:
                      - $ref: '#/components/schemas/TaskStripe'
                      - $ref: '#/components/schemas/TaskWise'
                      - $ref: '#/components/schemas/TaskCurrencyCloud'
                      - $ref: '#/components/schemas/TaskDummyPay'
                      - $ref: '#/components/schemas/TaskModulr'
                      - $ref: '#/components/schemas/TaskBankingCircle'
                      - $ref: '#/components/schemas/TaskMangoPay'
                      - $ref: '#/components/schemas/TaskMoneycorp'

    # ---------------------- RESPONSES ----------------------
    ConnectorConfigResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ConnectorConfig'
    PaymentResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Payment'
    ConnectorsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              provider:
                $ref: '#/components/schemas/Connector'
              enabled:
                type: boolean
                example: true
    ConnectorsConfigsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - connector
          properties:
            connector:
              type: object
              required:
                - key
              properties:
                key:
                  type: object
                  required:
                    - dataType
                    - required
                  properties:
                    dataType:
                      type: string
                    required:
                      type: boolean
    TaskResponse:
      type: object
      required:
          - data
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/TaskStripe'
            - $ref: '#/components/schemas/TaskWise'
            - $ref: '#/components/schemas/TaskCurrencyCloud'
            - $ref: '#/components/schemas/TaskDummyPay'
            - $ref: '#/components/schemas/TaskModulr'
            - $ref: '#/components/schemas/TaskBankingCircle'
            - $ref: '#/components/schemas/TaskMangoPay'
            - $ref: '#/components/schemas/TaskMoneycorp'
    TransferResponse:
      type: object
      properties:
        id:
          type: string
    TransfersResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              amount:
                type: integer
                format: int64
                minimum: 0
              asset:
                type: string
              destination:
                type: string
              source:
                type: string
              currency:
                type: string
              status:
                type: string
              error:
                type: string
    # ---------------------- DATA MODELS ----------------------
    Connector:
      type: string
      enum:
        - STRIPE
        - DUMMY-PAY
        - WISE
        - MODULR
        - CURRENCY-CLOUD
        - BANKING-CIRCLE
        - MANGOPAY
        - MONEYCORP
    ConnectorConfig:
      anyOf:
        - $ref: '#/components/schemas/StripeConfig'
        - $ref: '#/components/schemas/DummyPayConfig'
        - $ref: '#/components/schemas/WiseConfig'
        - $ref: '#/components/schemas/ModulrConfig'
        - $ref: '#/components/schemas/CurrencyCloudConfig'
        - $ref: '#/components/schemas/BankingCircleConfig'
        - $ref: '#/components/schemas/MangoPayConfig'
        - $ref: '#/components/schemas/MoneycorpConfig'
    StripeConfig:
      type: object
      required:
        - apiKey
      properties:
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
        apiKey:
          type: string
          example: XXX
        pageSize:
          type: integer
          format: int64
          minimum: 0
          description: |
            Number of BalanceTransaction to fetch at each polling interval.
          default: 10
          example: 50
    DummyPayConfig:
      type: object
      required:
        - directory
      properties:
        filePollingPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will try to fetch new payment objects from the directory
          default: '10s'
        fileGenerationPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will create new payment objects in the directory
          default: '10s'
        directory:
          type: string
          example: '/tmp/dummypay'
    WiseConfig:
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          type: string
          example: 'XXX'
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
    ModulrConfig:
      type: object
      required:
      - apiKey
      - apiSecret
      properties:
        apiKey:
          type: string
          example: 'XXX'
        apiSecret:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
    BankingCircleConfig:
      type: object
      required:
        - username
        - password
        - endpoint
        - authorizationEndpoint
        - userCertificate
        - userCertificateKey
      properties:
        username:
          type: string
          example: 'XXX'
        password:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'
        authorizationEndpoint:
          type: string
          example: 'XXX'
        userCertificate:
          type: string
          example: 'XXX'
        userCertificateKey:
          type: string
          example: 'XXX'
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
    MangoPayConfig:
      type: object
      required:
        - clientID
        - apiKey
        - endpoint
      properties:
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
        clientID:
          type: string
          example: 'XXX'
        apiKey:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'
    MoneycorpConfig:
      type: object
      required:
        - clientID
        - apiKey
        - endpoint
      properties:
        clientID:
          type: string
          example: 'XXX'
        apiKey:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
    CurrencyCloudConfig:
      type: object
      required:
        - apiKey
        - loginID
      properties:
        apiKey:
          type: string
          example: 'XXX'
        loginID:
          type: string
          example: 'XXX'
          description: 'Username of the API Key holder'
        pollingPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will fetch transactions
          default: '120s'
        endpoint:
          type: string
          example: 'XXX'
          description: 'The endpoint to use for the API. Defaults to https://devapi.currencycloud.com'
    Payment:
      type: object
      required:
        - id
        - reference
        - accountID
        - type
        - provider
        - status
        - initialAmount
        - scheme
        - asset
        - createdAt
        - raw
        - adjustments
        - metadata
      properties:
        id:
          type: string
          example: XXX
        reference:
          type: string
        accountID:
          type: string
        type:
          type: string
          enum:
            - PAY-IN
            - PAYOUT
            - TRANSFER
            - OTHER
        provider:
          $ref: '#/components/schemas/Connector'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        initialAmount:
          type: integer
          format: int64
          minimum: 0
          example: 100
        scheme:
          type: string
          enum:
            - visa
            - mastercard
            - amex
            - diners
            - discover
            - jcb
            - unionpay
            - sepa debit
            - sepa credit
            - sepa
            - apple pay
            - google pay
            - a2a
            - ach debit
            - ach
            - rtp
            - unknown
            - other
        asset:
          type: string
          example: USD
        createdAt:
          type: string
          format: date-time
        raw:
          type: object
          nullable: true
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAdjustment'
        metadata:
          $ref: '#/components/schemas/PaymentMetadata'
    PaymentAdjustment:
        type: object
        required:
          - status
          - amount
          - date
          - raw
          - absolute
        properties:
          status:
            $ref: '#/components/schemas/PaymentStatus'
          amount:
            type: integer
            format: int64
            minimum: 0
            example: 100
          date:
            type: string
            format: date-time
          raw:
            type: object
          absolute:
            type: boolean
    PaymentMetadata:
      type: object
      properties:
        key:
          type: string
      nullable: true
    Account:
      type: object
      required:
        - id
        - createdAt
        - provider
        - reference
        - type
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        provider:
          $ref: '#/components/schemas/Connector'
        reference:
          type: string
        type:
          type: string
          enum:
            - TARGET
            - SOURCE
    TaskBase:
      type: object
      required:
        - id
        - connectorId
        - createdAt
        - updatedAt
        - descriptor
        - status
        - state
      properties:
        id:
          type: string
          format: uuid
        connectorId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string
    TaskStripe:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              required:
                - name
                - account
              properties:
                name:
                  type: string
                main:
                  type: boolean
                account:
                  type: string
    TaskWise:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                profileID:
                  type: integer
                  format: int64
                  minimum: 0
    TaskModulr:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                accountID:
                  type: string
    TaskDummyPay:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                fileName:
                  type: string
    TaskCurrencyCloud:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
    TaskBankingCircle:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
    TaskMangoPay:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                userID:
                  type: string
    TaskMoneycorp:
      allOf:
        - $ref: '#/components/schemas/TaskBase'
        - type: object
          required:
            - descriptor
          properties:
            descriptor:
              type: object
              properties:
                name:
                  type: string
                key:
                  type: string
                accountID:
                  type: string
    TransferRequest:
      type: object
      required:
        - asset
        - amount
        - destination
      properties:
        amount:
          type: integer
          format: int64
          minimum: 0
          example: 100
        asset:
          type: string
          example: USD
        destination:
          type: string
          example: acct_1Gqj58KZcSIg2N2q
        source:
          type: string
          example: acct_1Gqj58KZcSIg2N2q
    StripeTransferRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          minimum: 0
          example: 100
        asset:
          type: string
          example: USD
        destination:
          type: string
          example: acct_1Gqj58KZcSIg2N2q
        metadata:
          type: object
          description: |
            A set of key/value pairs that you can attach to a transfer object.
            It can be useful for storing additional information about the transfer in a structured format.
          example:
            order_id: '6735'
    StripeTransferResponse:
      type: object
    PaymentStatus:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - TERMINATED
        - FAILED
        - SUCCEEDED
        - CANCELLED
    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
