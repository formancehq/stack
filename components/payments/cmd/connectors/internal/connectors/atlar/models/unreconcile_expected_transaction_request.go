// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UnreconcileExpectedTransactionRequest unreconcile expected transaction request
//
// swagger:model UnreconcileExpectedTransactionRequest
type UnreconcileExpectedTransactionRequest struct {

	// The id of the transaction which the expected transaction is to be unreconciled against.
	// Example: e37235aa-adab-11ec-8029-96ac651c9332
	// Required: true
	TransactionID *string `json:"transactionId"`
}

// Validate validates this unreconcile expected transaction request
func (m *UnreconcileExpectedTransactionRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTransactionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UnreconcileExpectedTransactionRequest) validateTransactionID(formats strfmt.Registry) error {

	if err := validate.Required("transactionId", "body", m.TransactionID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this unreconcile expected transaction request based on context it is used
func (m *UnreconcileExpectedTransactionRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UnreconcileExpectedTransactionRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UnreconcileExpectedTransactionRequest) UnmarshalBinary(b []byte) error {
	var res UnreconcileExpectedTransactionRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
