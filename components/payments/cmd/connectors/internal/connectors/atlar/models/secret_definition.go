// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SecretDefinition secret definition
//
// swagger:model SecretDefinition
type SecretDefinition struct {

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// generatable
	Generatable bool `json:"generatable,omitempty"`

	// help text
	HelpText string `json:"helpText,omitempty"`

	// a managed secret is only creatable with non-public scope connection_managed_secrets:create,
	// these secrets are not indicated by the public /v1/banks list, but once a managed
	// secret is set on a connection, queriers will get the secret
	Managed bool `json:"managed,omitempty"`

	// max length
	MaxLength int64 `json:"maxLength,omitempty"`

	// min length
	MinLength int64 `json:"minLength,omitempty"`

	// pattern
	Pattern string `json:"pattern,omitempty"`

	// type
	Type string `json:"type,omitempty"`
}

// Validate validates this secret definition
func (m *SecretDefinition) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this secret definition based on context it is used
func (m *SecretDefinition) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SecretDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SecretDefinition) UnmarshalBinary(b []byte) error {
	var res SecretDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
