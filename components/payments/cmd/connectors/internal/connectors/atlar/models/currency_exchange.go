// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CurrencyExchange currency exchange
//
// swagger:model CurrencyExchange
type CurrencyExchange struct {

	// The exchange rate that was reported by the bank. Atlar will not try to calculate this in cases where the information isn't present.
	// Example: 11.21320
	ExchangeRate string `json:"exchangeRate,omitempty"`

	// The currency from which the amount was converted.
	// Example: EUR
	SourceCurrency string `json:"sourceCurrency,omitempty"`

	// The currency to which the amount was converted.
	// Example: SEK
	TargetCurrency string `json:"targetCurrency,omitempty"`

	// One unit of this currency multiplied by the exchange rate will equal the target currency.
	// Example: EUR
	UnitCurrency string `json:"unitCurrency,omitempty"`
}

// Validate validates this currency exchange
func (m *CurrencyExchange) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this currency exchange based on context it is used
func (m *CurrencyExchange) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CurrencyExchange) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CurrencyExchange) UnmarshalBinary(b []byte) error {
	var res CurrencyExchange
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
