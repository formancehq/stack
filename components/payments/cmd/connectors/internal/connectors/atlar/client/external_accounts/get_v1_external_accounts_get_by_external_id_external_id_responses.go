// Code generated by go-swagger; DO NOT EDIT.

package external_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// GetV1ExternalAccountsGetByExternalIDExternalIDReader is a Reader for the GetV1ExternalAccountsGetByExternalIDExternalID structure.
type GetV1ExternalAccountsGetByExternalIDExternalIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1ExternalAccountsGetByExternalIDExternalIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetV1ExternalAccountsGetByExternalIDExternalIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/external-accounts:getByExternalId/{externalId}] GetV1ExternalAccountsGetByExternalIDExternalID", response, response.Code())
	}
}

// NewGetV1ExternalAccountsGetByExternalIDExternalIDOK creates a GetV1ExternalAccountsGetByExternalIDExternalIDOK with default headers values
func NewGetV1ExternalAccountsGetByExternalIDExternalIDOK() *GetV1ExternalAccountsGetByExternalIDExternalIDOK {
	return &GetV1ExternalAccountsGetByExternalIDExternalIDOK{}
}

/*
GetV1ExternalAccountsGetByExternalIDExternalIDOK describes a response with status code 200, with default header values.

The identified external account.
*/
type GetV1ExternalAccountsGetByExternalIDExternalIDOK struct {
	Payload *models.ExternalAccount
}

// IsSuccess returns true when this get v1 external accounts get by external Id external Id o k response has a 2xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 external accounts get by external Id external Id o k response has a 3xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 external accounts get by external Id external Id o k response has a 4xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 external accounts get by external Id external Id o k response has a 5xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 external accounts get by external Id external Id o k response a status code equal to that given
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 external accounts get by external Id external Id o k response
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) Code() int {
	return 200
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/external-accounts:getByExternalId/{externalId}][%d] getV1ExternalAccountsGetByExternalIdExternalIdOK  %+v", 200, o.Payload)
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) String() string {
	return fmt.Sprintf("[GET /v1/external-accounts:getByExternalId/{externalId}][%d] getV1ExternalAccountsGetByExternalIdExternalIdOK  %+v", 200, o.Payload)
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) GetPayload() *models.ExternalAccount {
	return o.Payload
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExternalAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ExternalAccountsGetByExternalIDExternalIDNotFound creates a GetV1ExternalAccountsGetByExternalIDExternalIDNotFound with default headers values
func NewGetV1ExternalAccountsGetByExternalIDExternalIDNotFound() *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound {
	return &GetV1ExternalAccountsGetByExternalIDExternalIDNotFound{}
}

/*
GetV1ExternalAccountsGetByExternalIDExternalIDNotFound describes a response with status code 404, with default header values.

The identified external account doesn't exist
*/
type GetV1ExternalAccountsGetByExternalIDExternalIDNotFound struct {
	Payload string
}

// IsSuccess returns true when this get v1 external accounts get by external Id external Id not found response has a 2xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 external accounts get by external Id external Id not found response has a 3xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 external accounts get by external Id external Id not found response has a 4xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 external accounts get by external Id external Id not found response has a 5xx status code
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 external accounts get by external Id external Id not found response a status code equal to that given
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 external accounts get by external Id external Id not found response
func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) Code() int {
	return 404
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/external-accounts:getByExternalId/{externalId}][%d] getV1ExternalAccountsGetByExternalIdExternalIdNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/external-accounts:getByExternalId/{externalId}][%d] getV1ExternalAccountsGetByExternalIdExternalIdNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetV1ExternalAccountsGetByExternalIDExternalIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
