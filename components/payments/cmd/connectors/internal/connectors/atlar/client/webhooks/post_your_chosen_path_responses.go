// Code generated by go-swagger; DO NOT EDIT.

package webhooks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// PostYourChosenPathReader is a Reader for the PostYourChosenPath structure.
type PostYourChosenPathReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostYourChosenPathReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostYourChosenPathOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /your/chosen/path] PostYourChosenPath", response, response.Code())
	}
}

// NewPostYourChosenPathOK creates a PostYourChosenPathOK with default headers values
func NewPostYourChosenPathOK() *PostYourChosenPathOK {
	return &PostYourChosenPathOK{}
}

/*
PostYourChosenPathOK describes a response with status code 200, with default header values.

OK
*/
type PostYourChosenPathOK struct {
}

// IsSuccess returns true when this post your chosen path o k response has a 2xx status code
func (o *PostYourChosenPathOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post your chosen path o k response has a 3xx status code
func (o *PostYourChosenPathOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post your chosen path o k response has a 4xx status code
func (o *PostYourChosenPathOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post your chosen path o k response has a 5xx status code
func (o *PostYourChosenPathOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post your chosen path o k response a status code equal to that given
func (o *PostYourChosenPathOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post your chosen path o k response
func (o *PostYourChosenPathOK) Code() int {
	return 200
}

func (o *PostYourChosenPathOK) Error() string {
	return fmt.Sprintf("[POST /your/chosen/path][%d] postYourChosenPathOK ", 200)
}

func (o *PostYourChosenPathOK) String() string {
	return fmt.Sprintf("[POST /your/chosen/path][%d] postYourChosenPathOK ", 200)
}

func (o *PostYourChosenPathOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*
PostYourChosenPathBody post your chosen path body
swagger:model PostYourChosenPathBody
*/
type PostYourChosenPathBody struct {
	models.WebhookPayload

	// entity
	Entity interface{} `json:"entity,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (o *PostYourChosenPathBody) UnmarshalJSON(raw []byte) error {
	// PostYourChosenPathParamsBodyAO0
	var postYourChosenPathParamsBodyAO0 models.WebhookPayload
	if err := swag.ReadJSON(raw, &postYourChosenPathParamsBodyAO0); err != nil {
		return err
	}
	o.WebhookPayload = postYourChosenPathParamsBodyAO0

	// PostYourChosenPathParamsBodyAO1
	var dataPostYourChosenPathParamsBodyAO1 struct {
		Entity interface{} `json:"entity,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataPostYourChosenPathParamsBodyAO1); err != nil {
		return err
	}

	o.Entity = dataPostYourChosenPathParamsBodyAO1.Entity

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (o PostYourChosenPathBody) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 2)

	postYourChosenPathParamsBodyAO0, err := swag.WriteJSON(o.WebhookPayload)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, postYourChosenPathParamsBodyAO0)
	var dataPostYourChosenPathParamsBodyAO1 struct {
		Entity interface{} `json:"entity,omitempty"`
	}

	dataPostYourChosenPathParamsBodyAO1.Entity = o.Entity

	jsonDataPostYourChosenPathParamsBodyAO1, errPostYourChosenPathParamsBodyAO1 := swag.WriteJSON(dataPostYourChosenPathParamsBodyAO1)
	if errPostYourChosenPathParamsBodyAO1 != nil {
		return nil, errPostYourChosenPathParamsBodyAO1
	}
	_parts = append(_parts, jsonDataPostYourChosenPathParamsBodyAO1)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this post your chosen path body
func (o *PostYourChosenPathBody) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.WebhookPayload
	if err := o.WebhookPayload.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validate this post your chosen path body based on the context it is used
func (o *PostYourChosenPathBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with models.WebhookPayload
	if err := o.WebhookPayload.ContextValidate(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (o *PostYourChosenPathBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostYourChosenPathBody) UnmarshalBinary(b []byte) error {
	var res PostYourChosenPathBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
