// Code generated by go-swagger; DO NOT EDIT.

package credit_transfers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// NewDeleteV1CreditTransfersIDApprovalsParams creates a new DeleteV1CreditTransfersIDApprovalsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteV1CreditTransfersIDApprovalsParams() *DeleteV1CreditTransfersIDApprovalsParams {
	return &DeleteV1CreditTransfersIDApprovalsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteV1CreditTransfersIDApprovalsParamsWithTimeout creates a new DeleteV1CreditTransfersIDApprovalsParams object
// with the ability to set a timeout on a request.
func NewDeleteV1CreditTransfersIDApprovalsParamsWithTimeout(timeout time.Duration) *DeleteV1CreditTransfersIDApprovalsParams {
	return &DeleteV1CreditTransfersIDApprovalsParams{
		timeout: timeout,
	}
}

// NewDeleteV1CreditTransfersIDApprovalsParamsWithContext creates a new DeleteV1CreditTransfersIDApprovalsParams object
// with the ability to set a context for a request.
func NewDeleteV1CreditTransfersIDApprovalsParamsWithContext(ctx context.Context) *DeleteV1CreditTransfersIDApprovalsParams {
	return &DeleteV1CreditTransfersIDApprovalsParams{
		Context: ctx,
	}
}

// NewDeleteV1CreditTransfersIDApprovalsParamsWithHTTPClient creates a new DeleteV1CreditTransfersIDApprovalsParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteV1CreditTransfersIDApprovalsParamsWithHTTPClient(client *http.Client) *DeleteV1CreditTransfersIDApprovalsParams {
	return &DeleteV1CreditTransfersIDApprovalsParams{
		HTTPClient: client,
	}
}

/*
DeleteV1CreditTransfersIDApprovalsParams contains all the parameters to send to the API endpoint

	for the delete v1 credit transfers ID approvals operation.

	Typically these are written to a http.Request.
*/
type DeleteV1CreditTransfersIDApprovalsParams struct {

	/* IfMatch.

	   The ETag of the CreditTransfer
	*/
	IfMatch *string

	/* CreateReject.

	   CreateRejectRequest
	*/
	CreateReject *models.CreateRejectRequest

	/* ID.

	   CreditTransfer ID
	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete v1 credit transfers ID approvals params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithDefaults() *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete v1 credit transfers ID approvals params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithTimeout(timeout time.Duration) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithContext(ctx context.Context) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithHTTPClient(client *http.Client) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIfMatch adds the ifMatch to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithIfMatch(ifMatch *string) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetIfMatch(ifMatch)
	return o
}

// SetIfMatch adds the ifMatch to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetIfMatch(ifMatch *string) {
	o.IfMatch = ifMatch
}

// WithCreateReject adds the createReject to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithCreateReject(createReject *models.CreateRejectRequest) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetCreateReject(createReject)
	return o
}

// SetCreateReject adds the createReject to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetCreateReject(createReject *models.CreateRejectRequest) {
	o.CreateReject = createReject
}

// WithID adds the id to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) WithID(id string) *DeleteV1CreditTransfersIDApprovalsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete v1 credit transfers ID approvals params
func (o *DeleteV1CreditTransfersIDApprovalsParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteV1CreditTransfersIDApprovalsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IfMatch != nil {

		// header param If-Match
		if err := r.SetHeaderParam("If-Match", *o.IfMatch); err != nil {
			return err
		}
	}
	if o.CreateReject != nil {
		if err := r.SetBodyParam(o.CreateReject); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
