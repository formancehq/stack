// Code generated by go-swagger; DO NOT EDIT.

package expected_transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// PostV1ExpectedTransactionsReader is a Reader for the PostV1ExpectedTransactions structure.
type PostV1ExpectedTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1ExpectedTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostV1ExpectedTransactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		return nil, runtime.NewAPIError("[POST /v1/expected-transactions] PostV1ExpectedTransactions", response, response.Code())
	}
}

// NewPostV1ExpectedTransactionsOK creates a PostV1ExpectedTransactionsOK with default headers values
func NewPostV1ExpectedTransactionsOK() *PostV1ExpectedTransactionsOK {
	return &PostV1ExpectedTransactionsOK{}
}

/*
PostV1ExpectedTransactionsOK describes a response with status code 200, with default header values.

The created Expected Transaction
*/
type PostV1ExpectedTransactionsOK struct {
	Payload *models.ExpectedTransaction
}

// IsSuccess returns true when this post v1 expected transactions o k response has a 2xx status code
func (o *PostV1ExpectedTransactionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 expected transactions o k response has a 3xx status code
func (o *PostV1ExpectedTransactionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 expected transactions o k response has a 4xx status code
func (o *PostV1ExpectedTransactionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 expected transactions o k response has a 5xx status code
func (o *PostV1ExpectedTransactionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 expected transactions o k response a status code equal to that given
func (o *PostV1ExpectedTransactionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post v1 expected transactions o k response
func (o *PostV1ExpectedTransactionsOK) Code() int {
	return 200
}

func (o *PostV1ExpectedTransactionsOK) Error() string {
	return fmt.Sprintf("[POST /v1/expected-transactions][%d] postV1ExpectedTransactionsOK  %+v", 200, o.Payload)
}

func (o *PostV1ExpectedTransactionsOK) String() string {
	return fmt.Sprintf("[POST /v1/expected-transactions][%d] postV1ExpectedTransactionsOK  %+v", 200, o.Payload)
}

func (o *PostV1ExpectedTransactionsOK) GetPayload() *models.ExpectedTransaction {
	return o.Payload
}

func (o *PostV1ExpectedTransactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpectedTransaction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
