// Code generated by go-swagger; DO NOT EDIT.

package expected_transactions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// GetV1ExpectedTransactionsIDReader is a Reader for the GetV1ExpectedTransactionsID structure.
type GetV1ExpectedTransactionsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetV1ExpectedTransactionsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetV1ExpectedTransactionsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetV1ExpectedTransactionsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /v1/expected-transactions/{id}] GetV1ExpectedTransactionsID", response, response.Code())
	}
}

// NewGetV1ExpectedTransactionsIDOK creates a GetV1ExpectedTransactionsIDOK with default headers values
func NewGetV1ExpectedTransactionsIDOK() *GetV1ExpectedTransactionsIDOK {
	return &GetV1ExpectedTransactionsIDOK{}
}

/*
GetV1ExpectedTransactionsIDOK describes a response with status code 200, with default header values.

the identified Expected Transaction
*/
type GetV1ExpectedTransactionsIDOK struct {
	Payload *models.ExpectedTransaction
}

// IsSuccess returns true when this get v1 expected transactions Id o k response has a 2xx status code
func (o *GetV1ExpectedTransactionsIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v1 expected transactions Id o k response has a 3xx status code
func (o *GetV1ExpectedTransactionsIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 expected transactions Id o k response has a 4xx status code
func (o *GetV1ExpectedTransactionsIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v1 expected transactions Id o k response has a 5xx status code
func (o *GetV1ExpectedTransactionsIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 expected transactions Id o k response a status code equal to that given
func (o *GetV1ExpectedTransactionsIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v1 expected transactions Id o k response
func (o *GetV1ExpectedTransactionsIDOK) Code() int {
	return 200
}

func (o *GetV1ExpectedTransactionsIDOK) Error() string {
	return fmt.Sprintf("[GET /v1/expected-transactions/{id}][%d] getV1ExpectedTransactionsIdOK  %+v", 200, o.Payload)
}

func (o *GetV1ExpectedTransactionsIDOK) String() string {
	return fmt.Sprintf("[GET /v1/expected-transactions/{id}][%d] getV1ExpectedTransactionsIdOK  %+v", 200, o.Payload)
}

func (o *GetV1ExpectedTransactionsIDOK) GetPayload() *models.ExpectedTransaction {
	return o.Payload
}

func (o *GetV1ExpectedTransactionsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpectedTransaction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetV1ExpectedTransactionsIDNotFound creates a GetV1ExpectedTransactionsIDNotFound with default headers values
func NewGetV1ExpectedTransactionsIDNotFound() *GetV1ExpectedTransactionsIDNotFound {
	return &GetV1ExpectedTransactionsIDNotFound{}
}

/*
GetV1ExpectedTransactionsIDNotFound describes a response with status code 404, with default header values.

identified transaction doesn't exist
*/
type GetV1ExpectedTransactionsIDNotFound struct {
	Payload string
}

// IsSuccess returns true when this get v1 expected transactions Id not found response has a 2xx status code
func (o *GetV1ExpectedTransactionsIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v1 expected transactions Id not found response has a 3xx status code
func (o *GetV1ExpectedTransactionsIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v1 expected transactions Id not found response has a 4xx status code
func (o *GetV1ExpectedTransactionsIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v1 expected transactions Id not found response has a 5xx status code
func (o *GetV1ExpectedTransactionsIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v1 expected transactions Id not found response a status code equal to that given
func (o *GetV1ExpectedTransactionsIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v1 expected transactions Id not found response
func (o *GetV1ExpectedTransactionsIDNotFound) Code() int {
	return 404
}

func (o *GetV1ExpectedTransactionsIDNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/expected-transactions/{id}][%d] getV1ExpectedTransactionsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ExpectedTransactionsIDNotFound) String() string {
	return fmt.Sprintf("[GET /v1/expected-transactions/{id}][%d] getV1ExpectedTransactionsIdNotFound  %+v", 404, o.Payload)
}

func (o *GetV1ExpectedTransactionsIDNotFound) GetPayload() string {
	return o.Payload
}

func (o *GetV1ExpectedTransactionsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
