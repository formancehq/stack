// Code generated by go-swagger; DO NOT EDIT.

package direct_debits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new direct debits API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for direct debits API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	GetV1DirectDebits(params *GetV1DirectDebitsParams, opts ...ClientOption) (*GetV1DirectDebitsOK, error)

	GetV1DirectDebitsGetByExternalIDExternalID(params *GetV1DirectDebitsGetByExternalIDExternalIDParams, opts ...ClientOption) (*GetV1DirectDebitsGetByExternalIDExternalIDOK, error)

	GetV1DirectDebitsID(params *GetV1DirectDebitsIDParams, opts ...ClientOption) (*GetV1DirectDebitsIDOK, error)

	GetV1DirectDebitsIDEvents(params *GetV1DirectDebitsIDEventsParams, opts ...ClientOption) (*GetV1DirectDebitsIDEventsOK, error)

	PostV1DirectDebits(params *PostV1DirectDebitsParams, opts ...ClientOption) (*PostV1DirectDebitsCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
	GetV1DirectDebits queries direct debits

	Returns a list of Direct Debits. For further details on Pagination, see the section above.

Sort order is always descending on date.
*/
func (a *Client) GetV1DirectDebits(params *GetV1DirectDebitsParams, opts ...ClientOption) (*GetV1DirectDebitsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1DirectDebitsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetV1DirectDebits",
		Method:             "GET",
		PathPattern:        "/v1/direct-debits",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1DirectDebitsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1DirectDebitsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetV1DirectDebits: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1DirectDebitsGetByExternalIDExternalID reads direct debit by its external Id

Returns the identified Direct Debit.
*/
func (a *Client) GetV1DirectDebitsGetByExternalIDExternalID(params *GetV1DirectDebitsGetByExternalIDExternalIDParams, opts ...ClientOption) (*GetV1DirectDebitsGetByExternalIDExternalIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1DirectDebitsGetByExternalIDExternalIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetV1DirectDebitsGetByExternalIDExternalID",
		Method:             "GET",
		PathPattern:        "/v1/direct-debits:getByExternalId/{externalId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1DirectDebitsGetByExternalIDExternalIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1DirectDebitsGetByExternalIDExternalIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetV1DirectDebitsGetByExternalIDExternalID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1DirectDebitsID reads direct debit

Returns the identified Direct Debit.
*/
func (a *Client) GetV1DirectDebitsID(params *GetV1DirectDebitsIDParams, opts ...ClientOption) (*GetV1DirectDebitsIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1DirectDebitsIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetV1DirectDebitsID",
		Method:             "GET",
		PathPattern:        "/v1/direct-debits/{id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1DirectDebitsIDReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1DirectDebitsIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetV1DirectDebitsID: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetV1DirectDebitsIDEvents queries direct debit events

Returns a list of Direct Debit events. For further details on Pagination, see the section above.
*/
func (a *Client) GetV1DirectDebitsIDEvents(params *GetV1DirectDebitsIDEventsParams, opts ...ClientOption) (*GetV1DirectDebitsIDEventsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetV1DirectDebitsIDEventsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetV1DirectDebitsIDEvents",
		Method:             "GET",
		PathPattern:        "/v1/direct-debits/{id}/events",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetV1DirectDebitsIDEventsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetV1DirectDebitsIDEventsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetV1DirectDebitsIDEvents: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
PostV1DirectDebits creates direct debit

Create Direct Debit.
*/
func (a *Client) PostV1DirectDebits(params *PostV1DirectDebitsParams, opts ...ClientOption) (*PostV1DirectDebitsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostV1DirectDebitsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "PostV1DirectDebits",
		Method:             "POST",
		PathPattern:        "/v1/direct-debits",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostV1DirectDebitsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostV1DirectDebitsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostV1DirectDebits: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
