// Code generated by go-swagger; DO NOT EDIT.

package mandates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/formancehq/payments/cmd/connectors/internal/connectors/atlar/models"
)

// PostV1MandatesIDCancelReader is a Reader for the PostV1MandatesIDCancel structure.
type PostV1MandatesIDCancelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostV1MandatesIDCancelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostV1MandatesIDCancelAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPostV1MandatesIDCancelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/mandates/{id}:cancel] PostV1MandatesIDCancel", response, response.Code())
	}
}

// NewPostV1MandatesIDCancelAccepted creates a PostV1MandatesIDCancelAccepted with default headers values
func NewPostV1MandatesIDCancelAccepted() *PostV1MandatesIDCancelAccepted {
	return &PostV1MandatesIDCancelAccepted{}
}

/*
PostV1MandatesIDCancelAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostV1MandatesIDCancelAccepted struct {
	Payload *models.Mandate
}

// IsSuccess returns true when this post v1 mandates Id cancel accepted response has a 2xx status code
func (o *PostV1MandatesIDCancelAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post v1 mandates Id cancel accepted response has a 3xx status code
func (o *PostV1MandatesIDCancelAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 mandates Id cancel accepted response has a 4xx status code
func (o *PostV1MandatesIDCancelAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post v1 mandates Id cancel accepted response has a 5xx status code
func (o *PostV1MandatesIDCancelAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 mandates Id cancel accepted response a status code equal to that given
func (o *PostV1MandatesIDCancelAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the post v1 mandates Id cancel accepted response
func (o *PostV1MandatesIDCancelAccepted) Code() int {
	return 202
}

func (o *PostV1MandatesIDCancelAccepted) Error() string {
	return fmt.Sprintf("[POST /v1/mandates/{id}:cancel][%d] postV1MandatesIdCancelAccepted  %+v", 202, o.Payload)
}

func (o *PostV1MandatesIDCancelAccepted) String() string {
	return fmt.Sprintf("[POST /v1/mandates/{id}:cancel][%d] postV1MandatesIdCancelAccepted  %+v", 202, o.Payload)
}

func (o *PostV1MandatesIDCancelAccepted) GetPayload() *models.Mandate {
	return o.Payload
}

func (o *PostV1MandatesIDCancelAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Mandate)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostV1MandatesIDCancelNotFound creates a PostV1MandatesIDCancelNotFound with default headers values
func NewPostV1MandatesIDCancelNotFound() *PostV1MandatesIDCancelNotFound {
	return &PostV1MandatesIDCancelNotFound{}
}

/*
PostV1MandatesIDCancelNotFound describes a response with status code 404, with default header values.

The identified Mandate doesn't exist
*/
type PostV1MandatesIDCancelNotFound struct {
	Payload string
}

// IsSuccess returns true when this post v1 mandates Id cancel not found response has a 2xx status code
func (o *PostV1MandatesIDCancelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post v1 mandates Id cancel not found response has a 3xx status code
func (o *PostV1MandatesIDCancelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post v1 mandates Id cancel not found response has a 4xx status code
func (o *PostV1MandatesIDCancelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this post v1 mandates Id cancel not found response has a 5xx status code
func (o *PostV1MandatesIDCancelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this post v1 mandates Id cancel not found response a status code equal to that given
func (o *PostV1MandatesIDCancelNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the post v1 mandates Id cancel not found response
func (o *PostV1MandatesIDCancelNotFound) Code() int {
	return 404
}

func (o *PostV1MandatesIDCancelNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/mandates/{id}:cancel][%d] postV1MandatesIdCancelNotFound  %+v", 404, o.Payload)
}

func (o *PostV1MandatesIDCancelNotFound) String() string {
	return fmt.Sprintf("[POST /v1/mandates/{id}:cancel][%d] postV1MandatesIdCancelNotFound  %+v", 404, o.Payload)
}

func (o *PostV1MandatesIDCancelNotFound) GetPayload() string {
	return o.Payload
}

func (o *PostV1MandatesIDCancelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
