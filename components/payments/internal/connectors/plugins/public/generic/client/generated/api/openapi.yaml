openapi: 3.0.3
info:
  title: GENERIC connector API
  version: v0.1
servers:
- url: /
paths:
  /accounts:
    get:
      operationId: getAccounts
      parameters:
      - description: Number of items per page
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 100
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Sort order
        example: createdAt:asc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Filter by created at date
        explode: true
        in: query
        name: createdAtFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of accounts
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General error
      summary: Get all accounts
  /accounts/{accountId}/balances:
    get:
      operationId: getAccountBalances
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balances'
          description: Account balances
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General error
      summary: Get account balance
  /beneficiaries:
    get:
      operationId: getBeneficiaries
      parameters:
      - description: Number of items per page
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 100
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Sort order
        example: createdAt:asc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Filter by created at date
        explode: true
        in: query
        name: createdAtFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Beneficiary'
                type: array
          description: List of beneficiaries
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General error
      summary: Get all beneficiaries
  /transactions:
    get:
      operationId: getTransactions
      parameters:
      - description: Number of items per page
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 100
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Page number
        example: 1
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          minimum: 1
          type: integer
        style: form
      - description: Sort order
        example: createdAt:asc
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Filter by updated at date
        explode: true
        in: query
        name: updatedAtFrom
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Transaction'
                type: array
          description: List of transactions
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: General error
      summary: Get all transactions
components:
  parameters:
    AccountId:
      explode: false
      in: path
      name: accountId
      required: true
      schema:
        type: string
      style: simple
    PageSize:
      description: Number of items per page
      example: 100
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        default: 100
        format: int64
        minimum: 1
        type: integer
      style: form
    Page:
      description: Page number
      example: 1
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int64
        minimum: 1
        type: integer
      style: form
    Sort:
      description: Sort order
      example: createdAt:asc
      explode: true
      in: query
      name: sort
      required: false
      schema:
        type: string
      style: form
    CreatedAtFrom:
      description: Filter by created at date
      explode: true
      in: query
      name: createdAtFrom
      required: false
      schema:
        format: date-time
        type: string
      style: form
    UpdatedAtFrom:
      description: Filter by updated at date
      explode: true
      in: query
      name: updatedAtFrom
      required: false
      schema:
        format: date-time
        type: string
      style: form
  responses:
    NoContent:
      description: No content
    ErrorResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: General error
    Accounts:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Account'
            type: array
      description: List of accounts
    Balances:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Balances'
      description: Account balances
    Beneficiaries:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Beneficiary'
            type: array
      description: List of beneficiaries
    Transactions:
      content:
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Transaction'
            type: array
      description: List of transactions
  schemas:
    Error:
      properties:
        Title:
          type: string
        Detail:
          type: string
      required:
      - Detail
      - Title
      type: object
    Account:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: metadata
        accountName: accountName
        id: id
      properties:
        id:
          type: string
        accountName:
          type: string
        createdAt:
          format: date-time
          type: string
        metadata:
          additionalProperties:
            type: string
          nullable: true
          type: object
      required:
      - accountName
      - createdAt
      - id
      type: object
    Balances:
      example:
        accountID: accountID
        balances:
        - amount: amount
          currency: currency
        - amount: amount
          currency: currency
        at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        accountID:
          type: string
        at:
          format: date-time
          type: string
        balances:
          items:
            $ref: '#/components/schemas/Balance'
          type: array
      required:
      - accountID
      - at
      - balances
      - id
      type: object
    Balance:
      example:
        amount: amount
        currency: currency
      properties:
        amount:
          type: string
        currency:
          type: string
      required:
      - amount
      - currency
      type: object
    Beneficiary:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        metadata:
          key: metadata
        ownerName: ownerName
        id: id
      properties:
        id:
          type: string
        createdAt:
          format: date-time
          type: string
        ownerName:
          type: string
        metadata:
          additionalProperties:
            type: string
          nullable: true
          type: object
      required:
      - createdAt
      - id
      - ownerName
      type: object
    Transaction:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: amount
        sourceAccountID: sourceAccountID
        metadata:
          key: metadata
        scheme: scheme
        currency: currency
        id: id
        relatedTransactionID: relatedTransactionID
        type: null
        destinationAccountID: destinationAccountID
        updatedAt: 2000-01-23T04:56:07.000+00:00
        status: null
      properties:
        id:
          type: string
        relatedTransactionID:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        currency:
          type: string
        scheme:
          type: string
        type:
          $ref: '#/components/schemas/TransactionType'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        amount:
          type: string
        sourceAccountID:
          type: string
        destinationAccountID:
          type: string
        metadata:
          additionalProperties:
            type: string
          nullable: true
          type: object
      required:
      - amount
      - createdAt
      - currency
      - id
      - status
      - type
      - updatedAt
      type: object
    Metadata:
      additionalProperties:
        type: string
      nullable: true
      type: object
    TransactionType:
      enum:
      - PAYIN
      - PAYOUT
      - TRANSFER
      type: string
    TransactionStatus:
      enum:
      - PENDING
      - SUCCEEDED
      - FAILED
      type: string
