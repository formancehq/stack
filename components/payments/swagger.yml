openapi: 3.0.3
info:
  title: Payments API
  version: "PAYMENTS_VERSION"

paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      responses:
        200:
          description: Server information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
  /payments:
    get:
      summary: List payments
      operationId: listPayments
      tags:
        - Payments
      parameters:
        - name: pageSize
          in: query
          description: |
            The maximum number of results to return per page.
          example: 100
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 1000
            default: 15
        - name: cursor
          in: query
          description: |
            Parameter used in pagination requests. Maximum page size is set to 15.
            Set to the value of next for the next page of results.
            Set to the value of previous for the previous page of results.
            No other parameters can be set when this parameter is set.
          schema:
            type: string
            example: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
        - name: sort
          in: query
          schema:
            type: array
            items:
              type: string
          description: Fields used to sort payments (default is date:desc).
          example: date:asc,status:desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsResponse'

  /payments/{paymentId}:
    get:
      summary: Get a payment
      tags:
        - Payments
      operationId: getPayment
      parameters:
        - name: paymentId
          in: path
          schema:
            type: string
          description: The payment ID.
          example: XXX
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'

  /accounts:
      get:
        summary: List accounts
        operationId: listAccounts
        tags:
          - Payments
        parameters:
          - name: limit
            in: query
            schema:
              type: integer
              format: int64
              minimum: 0
              example: 10
            description: |
              Limit the number of accounts to return, pagination can be achieved in conjunction with 'skip' parameter.
          - name: skip
            in: query
            schema:
              type: integer
              format: int64
              minimum: 0
            description: |
              How many accounts to skip, pagination can be achieved in conjunction with 'limit' parameter.
            example: 100
          - name: sort
            in: query
            schema:
              type: array
              items:
                type: string
            description: Field used to sort payments (Default is by date).
            example: status
        responses:
          '200':
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AccountsResponse'

  /connectors:
    get:
      summary: List all installed connectors
      operationId: listAllConnectors
      tags:
        - Payments
      description: List all installed connectors.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsResponse'

  /connectors/configs:
    get:
      summary: List the configs of each available connector
      operationId: listConfigsAvailableConnectors
      tags:
        - Payments
      description: List the configs of each available connector.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorsConfigsResponse'

  /connectors/{connector}:
    post:
      summary: Install a connector
      tags:
        - Payments
      operationId: installConnector
      description: Install a connector by its name and config.
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectorConfig'
      responses:
        '204':
          description: OK

    delete:
      summary: Uninstall a connector
      operationId: uninstallConnector
      tags:
        - Payments
      description: Uninstall a connector by its name.
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
      responses:
        '204':
          description: OK

  /connectors/{connector}/config:
    get:
      summary: Read the config of a connector
      operationId: readConnectorConfig
      tags:
        - Payments
      description: Read connector config
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectorConfigResponse'

  /connectors/{connector}/reset:
    post:
      summary: Reset a connector
      operationId: resetConnector
      tags:
        - Payments
      description: |
        Reset a connector by its name. It will remove the connector and ALL PAYMENTS generated with it.
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
      responses:
        '204':
          description: OK

  /connectors/{connector}/tasks:
    get:
      summary: List tasks from a connector
      tags:
        - Payments
      operationId: listConnectorTasks
      description: List all tasks associated with this connector.
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
        - name: pageSize
          in: query
          description: |
            The maximum number of results to return per page.
          example: 100
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 1000
            default: 15
        - name: cursor
          in: query
          description: |
            Parameter used in pagination requests. Maximum page size is set to 15.
            Set to the value of next for the next page of results.
            Set to the value of previous for the previous page of results.
            No other parameters can be set when this parameter is set.
          schema:
            type: string
            example: aHR0cHM6Ly9nLnBhZ2UvTmVrby1SYW1lbj9zaGFyZQ==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksResponse'

  /connectors/{connector}/tasks/{taskId}:
    get:
      summary: Read a specific task of the connector
      tags:
        - Payments
      operationId: getConnectorTask
      description: Get a specific task associated to the connector.
      parameters:
        - name: connector
          description: The name of the connector.
          in: path
          schema:
            $ref: '#/components/schemas/Connector'
          required: true
        - name: taskId
          description: The task ID.
          example: task1
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'

  /connectors/stripe/transfer:
    post:
      summary: Transfer funds between Stripe accounts
      tags:
        - Payments
      operationId: connectorsStripeTransfer
      description: Execute a transfer between two Stripe accounts.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StripeTransferRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeTransferResponse'

components:
  schemas:
    ConnectorConfigResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ConnectorConfig'

    PaymentsResponse:
      type: object
      required:
        - cursor
      properties:
        cursor:
          type: object
          required:
            - pageSize
            - hasMore
            - data
          properties:
            pageSize:
              type: integer
              format: int64
              minimum: 1
              maximum: 1000
              example: 15
            hasMore:
              type: boolean
              example: false
            previous:
              type: string
              example: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
            next:
              type: string
              example: ""
            data:
              type: array
              items:
                $ref: '#/components/schemas/Payment'

    PaymentResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Payment'

    AccountsResponse:
      type: object
      required:
        - cursor
      properties:
        cursor:
          type: object
          required:
            - pageSize
            - hasMore
            - data
          properties:
            pageSize:
              type: integer
              format: int64
              minimum: 1
              maximum: 1000
              example: 15
            hasMore:
              type: boolean
              example: false
            previous:
              type: string
              example: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
            next:
              type: string
              example: ""
            data:
              type: array
              items:
                $ref: '#/components/schemas/Account'

    ConnectorsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              provider:
                $ref: '#/components/schemas/Connector'
              enabled:
                type: boolean
                example: true
              disabled:
                type: boolean
                example: false

    ConnectorsConfigsResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          properties:
            connector:
              type: object
              properties:
                key:
                  type: object
                  properties:
                    dataType:
                      type: string
                    required:
                      type: boolean

    TaskResponse:
      type: object
      properties:
        data:
          oneOf:
            - $ref: '#/components/schemas/TaskStripe'
            - $ref: '#/components/schemas/TaskWise'
            - $ref: '#/components/schemas/TaskCurrencyCloud'
            - $ref: '#/components/schemas/TaskDummyPay'
            - $ref: '#/components/schemas/TaskModulr'
            - $ref: '#/components/schemas/TaskBankingCircle'

    TasksResponse:
      type: object
      required:
        - cursor
      properties:
        cursor:
          type: object
          required:
            - pageSize
            - hasMore
            - data
          properties:
            pageSize:
              type: integer
              format: int64
              minimum: 1
              maximum: 1000
              example: 15
            hasMore:
              type: boolean
              example: false
            previous:
              type: string
              example: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
            next:
              type: string
              example: ""
            data:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/TaskStripe'
                  - $ref: '#/components/schemas/TaskWise'
                  - $ref: '#/components/schemas/TaskCurrencyCloud'
                  - $ref: '#/components/schemas/TaskDummyPay'
                  - $ref: '#/components/schemas/TaskModulr'
                  - $ref: '#/components/schemas/TaskBankingCircle'

    Connector:
      type: string
      enum:
        - STRIPE
        - DUMMY-PAY
        - WISE
        - MODULR
        - CURRENCY-CLOUD
        - BANKING-CIRCLE

    ConnectorConfig:
      oneOf:
        - $ref: '#/components/schemas/StripeConfig'
        - $ref: '#/components/schemas/DummyPayConfig'
        - $ref: '#/components/schemas/WiseConfig'
        - $ref: '#/components/schemas/ModulrConfig'
        - $ref: '#/components/schemas/CurrencyCloudConfig'
        - $ref: '#/components/schemas/BankingCircleConfig'

    StripeConfig:
      type: object
      required:
        - apiKey
      properties:
        pollingPeriod:
          type: string
          example: '60s'
          description: |
            The frequency at which the connector will try to fetch new BalanceTransaction objects from Stripe API.
          default: '120s'
        apiKey:
          type: string
          example: XXX
        pageSize:
          type: integer
          format: int64
          minimum: 0
          description: |
            Number of BalanceTransaction to fetch at each polling interval.
          default: 10
          example: 50

    DummyPayConfig:
      type: object
      required:
        - directory
      properties:
        filePollingPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will try to fetch new payment objects from the directory
          default: '10s'
        fileGenerationPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will create new payment objects in the directory
          default: '10s'
        directory:
          type: string
          example: '/tmp/dummypay'

    WiseConfig:
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          type: string
          example: 'XXX'

    ModulrConfig:
      type: object
      required:
      - apiKey
      - apiSecret
      properties:
        apiKey:
          type: string
          example: 'XXX'
        apiSecret:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'

    BankingCircleConfig:
      type: object
      required:
        - username
        - password
        - endpoint
        - authorizationEndpoint
      properties:
        username:
          type: string
          example: 'XXX'
        password:
          type: string
          example: 'XXX'
        endpoint:
          type: string
          example: 'XXX'
        authorizationEndpoint:
          type: string
          example: 'XXX'

    CurrencyCloudConfig:
      type: object
      required:
        - apiKey
        - loginID
      properties:
        apiKey:
          type: string
          example: 'XXX'
        loginID:
          type: string
          example: 'XXX'
          description: 'Username of the API Key holder'
        pollingPeriod:
          type: string
          example: '60s'
          description: The frequency at which the connector will fetch transactions
        endpoint:
          type: string
          example: 'XXX'
          description: 'The endpoint to use for the API. Defaults to https://devapi.currencycloud.com'

    Payment:
      type: object
      required:
        - id
        - reference
        - accountID
        - type
        - provider
        - status
        - initialAmount
        - scheme
        - asset
        - createdAt
        - raw
        - adjustments
        - metadata
      properties:
        id:
          type: string
          example: XXX
        reference:
          type: string
        accountID:
          type: string
        type:
          type: string
          enum:
            - PAY-IN
            - PAYOUT
            - TRANSFER
            - OTHER
        provider:
          $ref: '#/components/schemas/Connector'
        status:
          $ref: '#/components/schemas/PaymentStatus'
        initialAmount:
          type: integer
          format: int64
          minimum: 0
          example: 100
        scheme:
          type: string
          enum:
            - visa
            - mastercard
            - amex
            - diners
            - discover
            - jcb
            - unionpay
            - sepa debit
            - sepa credit
            - sepa
            - apple pay
            - google pay
            - a2a
            - ach debit
            - ach
            - rtp
            - unknown
            - other
        asset:
          type: string
          example: USD
        createdAt:
          type: string
          format: date-time
        raw:
          type: object
        adjustments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAdjustment'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMetadata'

    PaymentAdjustment:
        type: object
        properties:
          status:
            $ref: '#/components/schemas/PaymentStatus'
          amount:
            type: integer
            format: int64
            minimum: 0
            example: 100
          date:
            type: string
            format: date-time
          raw:
            type: object
          absolute:
            type: boolean

    PaymentMetadata:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
        changelog:
          $ref: '#/components/schemas/PaymentMetadataChangelog'

    PaymentMetadataChangelog:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: string

    Account:
      type: object
      required:
        - id
        - createdAt
        - provider
        - reference
        - type
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        provider:
          $ref: '#/components/schemas/Connector'
        reference:
          type: string
        type:
          type: string
          enum:
            - TARGET
            - SOURCE

    TaskStripe:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          required:
            - name
          properties:
            name:
              type: string
            main:
              type: boolean
            account:
              type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    TaskWise:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
            profileID:
              type: integer
              format: int64
              minimum: 0
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    TaskModulr:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
            accountID:
              type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    TaskDummyPay:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
            fileName:
              type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    TaskCurrencyCloud:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          properties:
            name:
              type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    TaskBankingCircle:
      type: object
      properties:
        id:
          type: string
          format: uuid
        connectorID:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        descriptor:
          type: object
          properties:
            name:
              type: string
            key:
              type: string
        status:
          $ref: '#/components/schemas/PaymentStatus'
        state:
          type: object
        error:
          type: string

    StripeTransferRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          minimum: 0
          example: 100
        asset:
          type: string
          example: USD
        destination:
          type: string
          example: acct_1Gqj58KZcSIg2N2q
        metadata:
          type: object
          description: |
            A set of key/value pairs that you can attach to a transfer object.
            It can be useful for storing additional information about the transfer in a structured format.
          example:
            order_id: '6735'

    StripeTransferResponse:
      type: object

    PaymentStatus:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - TERMINATED
        - FAILED

    StripeTimelineState:
      type: object
      properties:
        oldestId:
          type: string
          description: The id of the oldest BalanceTransaction fetched from stripe for this account
        oldestDate:
          type: string
          format: date-time
          description: The creation date of the oldest BalanceTransaction fetched from stripe for this account
        moreRecentId:
          type: string
          description: The id of the more recent BalanceTransaction fetched from stripe for this account
        moreRecentDate:
          type: string
          format: date-time
          description: The creation date of the more recent BalanceTransaction fetched from stripe for this account
        noMoreHistory:
          type: boolean
    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
