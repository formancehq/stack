/*
Payments API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// StripeTask struct for StripeTask
type StripeTask struct {
	// The id of the oldest BalanceTransaction fetched from stripe for this account
	OldestId interface{} `json:"oldestId,omitempty"`
	// The creation date of the oldest BalanceTransaction fetched from stripe for this account
	OldestDate interface{} `json:"oldestDate,omitempty"`
	// The id of the more recent BalanceTransaction fetched from stripe for this account
	MoreRecentId interface{} `json:"moreRecentId,omitempty"`
	// The creation date of the more recent BalanceTransaction fetched from stripe for this account
	MoreRecentDate interface{} `json:"moreRecentDate,omitempty"`
	NoMoreHistory  interface{} `json:"noMoreHistory,omitempty"`
}

// NewStripeTask instantiates a new StripeTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStripeTask() *StripeTask {
	this := StripeTask{}
	return &this
}

// NewStripeTaskWithDefaults instantiates a new StripeTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStripeTaskWithDefaults() *StripeTask {
	this := StripeTask{}
	return &this
}

// GetOldestId returns the OldestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTask) GetOldestId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OldestId
}

// GetOldestIdOk returns a tuple with the OldestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTask) GetOldestIdOk() (*interface{}, bool) {
	if o == nil || isNil(o.OldestId) {
		return nil, false
	}
	return &o.OldestId, true
}

// HasOldestId returns a boolean if a field has been set.
func (o *StripeTask) HasOldestId() bool {
	if o != nil && isNil(o.OldestId) {
		return true
	}

	return false
}

// SetOldestId gets a reference to the given interface{} and assigns it to the OldestId field.
func (o *StripeTask) SetOldestId(v interface{}) {
	o.OldestId = v
}

// GetOldestDate returns the OldestDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTask) GetOldestDate() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OldestDate
}

// GetOldestDateOk returns a tuple with the OldestDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTask) GetOldestDateOk() (*interface{}, bool) {
	if o == nil || isNil(o.OldestDate) {
		return nil, false
	}
	return &o.OldestDate, true
}

// HasOldestDate returns a boolean if a field has been set.
func (o *StripeTask) HasOldestDate() bool {
	if o != nil && isNil(o.OldestDate) {
		return true
	}

	return false
}

// SetOldestDate gets a reference to the given interface{} and assigns it to the OldestDate field.
func (o *StripeTask) SetOldestDate(v interface{}) {
	o.OldestDate = v
}

// GetMoreRecentId returns the MoreRecentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTask) GetMoreRecentId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MoreRecentId
}

// GetMoreRecentIdOk returns a tuple with the MoreRecentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTask) GetMoreRecentIdOk() (*interface{}, bool) {
	if o == nil || isNil(o.MoreRecentId) {
		return nil, false
	}
	return &o.MoreRecentId, true
}

// HasMoreRecentId returns a boolean if a field has been set.
func (o *StripeTask) HasMoreRecentId() bool {
	if o != nil && isNil(o.MoreRecentId) {
		return true
	}

	return false
}

// SetMoreRecentId gets a reference to the given interface{} and assigns it to the MoreRecentId field.
func (o *StripeTask) SetMoreRecentId(v interface{}) {
	o.MoreRecentId = v
}

// GetMoreRecentDate returns the MoreRecentDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTask) GetMoreRecentDate() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MoreRecentDate
}

// GetMoreRecentDateOk returns a tuple with the MoreRecentDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTask) GetMoreRecentDateOk() (*interface{}, bool) {
	if o == nil || isNil(o.MoreRecentDate) {
		return nil, false
	}
	return &o.MoreRecentDate, true
}

// HasMoreRecentDate returns a boolean if a field has been set.
func (o *StripeTask) HasMoreRecentDate() bool {
	if o != nil && isNil(o.MoreRecentDate) {
		return true
	}

	return false
}

// SetMoreRecentDate gets a reference to the given interface{} and assigns it to the MoreRecentDate field.
func (o *StripeTask) SetMoreRecentDate(v interface{}) {
	o.MoreRecentDate = v
}

// GetNoMoreHistory returns the NoMoreHistory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StripeTask) GetNoMoreHistory() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.NoMoreHistory
}

// GetNoMoreHistoryOk returns a tuple with the NoMoreHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StripeTask) GetNoMoreHistoryOk() (*interface{}, bool) {
	if o == nil || isNil(o.NoMoreHistory) {
		return nil, false
	}
	return &o.NoMoreHistory, true
}

// HasNoMoreHistory returns a boolean if a field has been set.
func (o *StripeTask) HasNoMoreHistory() bool {
	if o != nil && isNil(o.NoMoreHistory) {
		return true
	}

	return false
}

// SetNoMoreHistory gets a reference to the given interface{} and assigns it to the NoMoreHistory field.
func (o *StripeTask) SetNoMoreHistory(v interface{}) {
	o.NoMoreHistory = v
}

func (o StripeTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OldestId != nil {
		toSerialize["oldestId"] = o.OldestId
	}
	if o.OldestDate != nil {
		toSerialize["oldestDate"] = o.OldestDate
	}
	if o.MoreRecentId != nil {
		toSerialize["moreRecentId"] = o.MoreRecentId
	}
	if o.MoreRecentDate != nil {
		toSerialize["moreRecentDate"] = o.MoreRecentDate
	}
	if o.NoMoreHistory != nil {
		toSerialize["noMoreHistory"] = o.NoMoreHistory
	}
	return json.Marshal(toSerialize)
}

type NullableStripeTask struct {
	value *StripeTask
	isSet bool
}

func (v NullableStripeTask) Get() *StripeTask {
	return v.value
}

func (v *NullableStripeTask) Set(val *StripeTask) {
	v.value = val
	v.isSet = true
}

func (v NullableStripeTask) IsSet() bool {
	return v.isSet
}

func (v *NullableStripeTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStripeTask(val *StripeTask) *NullableStripeTask {
	return &NullableStripeTask{value: val, isSet: true}
}

func (v NullableStripeTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStripeTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
