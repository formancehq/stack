services:

  jaeger:
    image: jaegertracing/opentelemetry-all-in-one
    ports:
    - "16686:16686/tcp"

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    environment:
      discovery.type: single-node
    ports:
    - 9200:9200/tcp

  benthos:
    image: jeffail/benthos:4.11
    ports:
    - "4195:4195/tcp"
    volumes:
    - ./benthos:/config
    working_dir: /.local
    command:
    - -w
    - --log.level
    - trace
    - -c
    - config.yml
    - -r
    - /config/resources/*.yaml
    - -t
    - /config/templates/*.yaml
    - streams
    - /config/streams/*.yaml
    environment:
      OPENSEARCH_URL: https://opensearch:9200
      BASIC_AUTH_ENABLED: "true"
      BASIC_AUTH_USERNAME: "admin"
      BASIC_AUTH_PASSWORD: "admin"
      JAEGER_COLLECTOR: "collector:6831"
      OPENSEARCH_INDEX: "ledger"
      KAFKA_ADDRESS: "redpanda:29092"
      TOPIC_PREFIX: ""
    depends_on:
    - opensearch
    - redpanda
    - redpanda-config
    - jaeger

  search:
    command: go run main.go serve
    image: golang:1.21-alpine
    ports:
    - 8080:8080/tcp
    depends_on:
      - opensearch
      - jaeger
    environment:
      OPEN_SEARCH_SERVICE: "admin:admin@opensearch:9200"
      DEBUG: "true"
      OTEL_TRACES: "true"
      OTEL_TRACES_EXPORTER: jaeger
      OTEL_TRACES_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      OTEL_SERVICE_NAME: "search"
      OTEL_RESOURCE_ATTRIBUTES: "env=local engine=docker"
    volumes:
      - .:/app
    working_dir: /app

  redpanda:
    image: docker.vectorized.io/vectorized/redpanda:v22.3.24
    volumes:
    - .:/src
    command:
    - redpanda
    - start
    - --smp
    - '1'
    - --reserve-memory
    - 0M
    - --overprovisioned
    - --node-id
    - '0'
    - --kafka-addr
    - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
    - --advertise-kafka-addr
    - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
    healthcheck:
      test: curl -s -f -k http://127.0.0.1:9644/metrics > /dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 5

  redpanda-config:
    image: docker.vectorized.io/vectorized/redpanda:v22.3.24
    command:
    - cluster
    - config
    - import
    - --filename
    - /etc/redpanda/redpanda.yaml
    - --api-urls
    - redpanda:9644
    depends_on:
      redpanda:
        condition: service_healthy
    volumes:
    - ./config/redpanda/config.yaml:/etc/redpanda/redpanda.yaml:ro
