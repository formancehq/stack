openapi: 3.0.3

info:
  title: Formance Simple orchestration Service API
  version: 0.1.0

paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      tags:
      - Orchestration
      responses:
        200:
          description: Server information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /flows:
    get:
      summary: List registered flows
      operationId: listFlows
      description: List registered flows
      tags:
      - Orchestration
      responses:
        200:
          description: List of workflows
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Create workflow
      operationId: createWorkflow
      description: Create a workflow
      tags:
      - Orchestration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
      responses:
        201:
          description: Created workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /flows/{flowId}:
    parameters:
    - in: path
      description: The flow id
      name: flowId
      schema:
        type: string
      example: xxx
      required: true
    get:
      summary: Get a flow by id
      tags:
      - Orchestration
      description: Get a flow by id
      operationId: getFlow
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'

  /flows/{flowId}/runs:
    parameters:
    - in: path
      description: The flow id
      name: flowId
      schema:
        type: string
      example: xxx
      required: true
    get:
      description: List occurrences of a workflow
      summary: List occurrences of a workflow
      operationId: listRuns
      tags:
      - Orchestration
      responses:
        200:
          description: List of workflow occurrences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRunsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      description: Run workflow
      summary: Run workflow
      operationId: runWorkflow
      parameters:
      - in: query
        name: wait
        required: false
        description: Wait end of the workflow before return
        schema:
          type: boolean
      tags:
      - Orchestration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunWorkflowRequest'
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        201:
          description: The workflow occurrence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunWorkflowResponse'
  /flows/{flowId}/runs/{runId}:
    parameters:
    - in: path
      description: The flow id
      name: flowId
      schema:
        type: string
      example: xxx
      required: true
    - in: path
      description: The occurrence id
      name: runId
      schema:
        type: string
      example: xxx
      required: true
    get:
      summary: Get a workflow occurrence by id
      description: Get a workflow occurrence by id
      operationId: getWorkflowOccurrence
      tags:
      - Orchestration
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow occurrence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowOccurrenceResponse'

components:
  schemas:
    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
    Cursor:
      type: object
      required:
      - pageSize
      properties:
        pageSize:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
          example: 15
        hasMore:
          type: boolean
          example: false
        previous:
          type: string
          example: "YXVsdCBhbmQgYSBtYXhpbXVtIG1heF9yZXN1bHRzLol="
        next:
          type: string
          example: ""
    Error:
      type: object
      required:
      - errorCode
      - errorMessage
      properties:
        errorCode:
          type: string
          enum:
          - VALIDATION
        errorMessage:
          type: string
    WorkflowConfig:
      type: object
      required:
      - stages
      properties:
        stages:
          type: array
          items:
            type: object
            additionalProperties: { }
    Workflow:
      type: object
      required:
      - config
      - createdAt
      - updatedAt
      - id
      properties:
        config:
          $ref: '#/components/schemas/WorkflowConfig'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
    StageStatus:
      type: object
      required:
      - stage
      - occurrenceID
      - startedAt
      properties:
        stage:
          type: number
        occurrenceID:
          type: string
        startedAt:
          type: string
          format: date-time
        terminatedAt:
          type: string
          format: date-time
        error:
          type: string
    WorkflowOccurrence:
      type: object
      required:
      - workflowID
      - id
      - createdAt
      - updatedAt
      - statuses
      properties:
        workflowID:
          type: string
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/StageStatus'

    ListWorkflowsResponse:
      type: object
      properties:
        data:
          items:
            $ref: '#/components/schemas/Workflow'
          type: array
      required:
      - data
    ReadWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    CreateWorkflowRequest:
      $ref: '#/components/schemas/WorkflowConfig'
    CreateWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    RunWorkflowRequest:
      type: object
      additionalProperties:
        type: string
    RunWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowOccurrence'
    ListRunsResponse:
      required:
      - cursor
      properties:
        cursor:
          allOf:
          - $ref: '#/components/schemas/Cursor'
          - properties:
              data:
                items:
                  $ref: '#/components/schemas/WorkflowOccurrence'
                type: array
            type: object
            required:
            - data
    GetWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    GetWorkflowOccurrenceResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowOccurrence'
  responses:
    ErrorResponse:
      description: General error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
