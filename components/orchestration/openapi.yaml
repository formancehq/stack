openapi: 3.0.3

info:
  title: Formance Simple orchestration Service API
  version: 0.1.0

paths:
  /_info:
    get:
      summary: Get server info
      operationId: getServerInfo
      tags:
      - Orchestration
      responses:
        200:
          description: Server information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfo'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /workflows:
    get:
      summary: List registered workflows
      operationId: listWorkflows
      description: List registered workflows
      tags:
      - Orchestration
      responses:
        200:
          description: List of workflows
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkflowsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      summary: Create workflow
      operationId: createWorkflow
      description: Create a workflow
      tags:
      - Orchestration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkflowRequest'
      responses:
        201:
          description: Created workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateWorkflowResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /workflows/{flowId}:
    parameters:
    - in: path
      description: The flow id
      name: flowId
      schema:
        type: string
      example: xxx
      required: true
    get:
      summary: Get a flow by id
      tags:
      - Orchestration
      description: Get a flow by id
      operationId: getWorkflow
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowResponse'

  /workflows/{workflowID}/instances:
    parameters:
    - in: path
      description: The flow id
      name: workflowID
      schema:
        type: string
      example: xxx
      required: true
    post:
      description: Run workflow
      summary: Run workflow
      operationId: runWorkflow
      parameters:
      - in: query
        name: wait
        required: false
        description: Wait end of the workflow before return
        schema:
          type: boolean
      tags:
      - Orchestration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunWorkflowRequest'
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        201:
          description: The workflow instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunWorkflowResponse'

  /instances:
    get:
      description: List instances of a workflow
      summary: List instances of a workflow
      operationId: listInstances
      parameters:
      - in: query
        description: A workflow id
        name: workflowID
        schema:
          type: string
        example: xxx
        required: false
      - in: query
        description: Filter running instances
        name: running
        schema:
          type: boolean
        example: xxx
        required: false
      tags:
      - Orchestration
      responses:
        200:
          description: List of workflow instances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRunsResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'

  /instances/{instanceID}:
    parameters:
    - in: path
      description: The instance id
      name: instanceID
      schema:
        type: string
      example: xxx
      required: true
    get:
      summary: Get a workflow instance by id
      description: Get a workflow instance by id
      operationId: getInstance
      tags:
      - Orchestration
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow instance
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowInstanceResponse'

  /instances/{instanceID}/events:
    parameters:
    - in: path
      description: The instance id
      name: instanceID
      schema:
        type: string
      example: xxx
      required: true
    post:
      summary: Send an event to a running workflow
      description: Send an event to a running workflow
      operationId: sendEvent
      tags:
      - Orchestration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              properties:
                name:
                  type: string
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        204:
          description: No content

  /instances/{instanceID}/abort:
    parameters:
    - in: path
      description: The instance id
      name: instanceID
      schema:
        type: string
      example: xxx
      required: true
    put:
      summary: Cancel a running workflow
      description: Cancel a running workflow
      operationId: cancelEvent
      tags:
      - Orchestration
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        204:
          description: No content

  /instances/{instanceID}/history:
    parameters:
    - in: path
      description: The instance id
      name: instanceID
      schema:
        type: string
      example: xxx
      required: true
    get:
      summary: Get a workflow instance history by id
      description: Get a workflow instance history by id
      operationId: getInstanceHistory
      tags:
      - Orchestration
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow instance history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowInstanceHistoryResponse'

  /instances/{instanceID}/stages/{number}/history:
    parameters:
    - in: path
      description: The instance id
      name: instanceID
      schema:
        type: string
      example: xxx
      required: true
    - in: path
      description: The stage number
      name: number
      schema:
        type: integer
      example: 0
      required: true
    get:
      summary: Get a workflow instance stage history
      description: Get a workflow instance stage history
      operationId: getInstanceStageHistory
      tags:
      - Orchestration
      responses:
        default:
          $ref: '#/components/responses/ErrorResponse'
        200:
          description: The workflow instance stage history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkflowInstanceHistoryStageResponse'

components:
  schemas:
    ServerInfo:
      type: object
      required:
      - version
      properties:
        version:
          type: string
    Error:
      type: object
      required:
      - errorCode
      - errorMessage
      properties:
        errorCode:
          type: string
          enum:
          - VALIDATION
        errorMessage:
          type: string
    WorkflowConfig:
      type: object
      required:
      - stages
      properties:
        name:
          type: string
        stages:
          type: array
          items:
            type: object
            additionalProperties: { }
    Workflow:
      type: object
      required:
      - config
      - createdAt
      - updatedAt
      - id
      properties:
        config:
          $ref: '#/components/schemas/WorkflowConfig'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        id:
          type: string
    StageStatus:
      type: object
      required:
      - stage
      - instanceID
      - startedAt
      properties:
        stage:
          type: number
        instanceID:
          type: string
        startedAt:
          type: string
          format: date-time
        terminatedAt:
          type: string
          format: date-time
        error:
          type: string
    WorkflowInstance:
      type: object
      required:
      - workflowID
      - id
      - createdAt
      - updatedAt
      - statuses
      - terminated
      properties:
        workflowID:
          type: string
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        status:
          type: array
          items:
            $ref: '#/components/schemas/StageStatus'
        terminated:
          type: boolean
        terminatedAt:
          type: string
          format: date-time
        error:
          type: string
    WorkflowInstanceHistoryStage:
      type: object
      required:
      - name
      - input
      - startedAt
      - terminated
      - attempt
      properties:
        name:
          type: string
        input:
          $ref: '#/components/schemas/WorkflowInstanceHistoryStageInput'
        output:
          $ref: '#/components/schemas/WorkflowInstanceHistoryStageOutput'
        error:
          type: string
        terminated:
          type: bool
        startedAt:
          type: string
          format: date-time
        terminatedAt:
          type: string
          format: date-time
        lastFailure:
          type: string
        attempt:
          type: integer
        nextExecution:
          type: string
          format: date-time
    WorkflowInstanceHistory:
      type: object
      required:
      - name
      - input
      - terminated
      - startedAt
      properties:
        name:
          type: string
        input:
          $ref: '#/components/schemas/Stage'
        error:
          type: string
        terminated:
          type: bool
        startedAt:
          type: string
          format: date-time
        terminatedAt:
          type: string
          format: date-time
    WorkflowInstanceHistoryList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowInstanceHistory'
    WorkflowInstanceHistoryStageList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowInstanceHistoryStage'
    ListWorkflowsResponse:
      type: object
      properties:
        data:
          items:
            $ref: '#/components/schemas/Workflow'
          type: array
      required:
      - data
    ReadWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    CreateWorkflowRequest:
      $ref: '#/components/schemas/WorkflowConfig'
    CreateWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    RunWorkflowRequest:
      type: object
      additionalProperties:
        type: string
    RunWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowInstance'
    ListRunsResponse:
      required:
      - data
      properties:
        data:
          items:
            $ref: '#/components/schemas/WorkflowInstance'
          type: array
    GetWorkflowResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/Workflow'
    GetWorkflowInstanceResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowInstance'
    GetWorkflowInstanceHistoryResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowInstanceHistoryList'
    GetWorkflowInstanceHistoryStageResponse:
      type: object
      required:
      - data
      properties:
        data:
          $ref: '#/components/schemas/WorkflowInstanceHistoryStageList'
    StageSendSourceWallet:
      type: object
      required:
      - id
      properties:
        id:
          type: string
        balance:
          type: string
    StageSendDestinationWallet:
      $ref: '#/components/schemas/StageSendSourceWallet'
    StageSendSourceAccount:
      type: object
      required:
      - id
      properties:
        id:
          type: string
        ledger:
          type: string
    StageSendDestinationAccount:
      $ref: '#/components/schemas/StageSendSourceAccount'
    StageSendSourcePayment:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    StageSendDestinationPayment:
      type: object
      required:
      - psp
      properties:
        psp:
          type: string
    StageSendSource:
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/StageSendSourceWallet'
        account:
          $ref: '#/components/schemas/StageSendSourceAccount'
        payment:
          $ref: '#/components/schemas/StageSendSourcePayment'
    StageSendDestination:
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/StageSendDestinationWallet'
        account:
          $ref: '#/components/schemas/StageSendDestinationAccount'
        payment:
          $ref: '#/components/schemas/StageSendDestinationPayment'
    StageSend:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/Monetary'
        destination:
          $ref: '#/components/schemas/StageSendDestination'
        source:
          $ref: '#/components/schemas/StageSendSource'
    StageDelay:
      type: object
      properties:
        until:
          type: string
          format: date-time
        duration:
          type: string
    StageWaitEvent:
      type: object
      required:
      - event
      properties:
        event:
          type: string
    Stage:
      anyOf:
      - $ref: '#/components/schemas/StageSend'
      - $ref: '#/components/schemas/StageDelay'
      - $ref: '#/components/schemas/StageWaitEvent'
    ActivityStripeTransfer:
      $ref: '#/components/schemas/StripeTransferRequest'
    ActivityGetAccount:
      type: object
      required:
      - id
      - ledger
      properties:
        id:
          type: string
        ledger:
          type: string
    ActivityCreateTransaction:
      type: object
      properties:
        ledger:
          type: string
        data:
          $ref: '#/components/schemas/PostTransaction'
    ActivityRevertTransaction:
      type: object
      required:
      - id
      - ledger
      properties:
        ledger:
          type: string
        id:
          type: string
    ActivityGetPayment:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    ActivityConfirmHold:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    ActivityCreditWallet:
      type: object
      properties:
        id:
          type: string
        data:
          $ref: '#/components/schemas/CreditWalletRequest'
    ActivityDebitWallet:
      type: object
      properties:
        id:
          type: string
        data:
          $ref: '#/components/schemas/DebitWalletRequest'
    ActivityGetWallet:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    ActivityVoidHold:
      type: object
      required:
      - id
      properties:
        id:
          type: string
    ActivityGetAccountOutput:
      $ref: '#/components/schemas/AccountResponse'
    ActivityCreateTransactionOutput:
      $ref: '#/components/schemas/TransactionsResponse'
    ActivityRevertTransactionOutput:
      $ref: '#/components/schemas/TransactionResponse'
    ActivityGetPaymentOutput:
      $ref: '#/components/schemas/PaymentResponse'
    ActivityDebitWalletOutput:
      $ref: '#/components/schemas/DebitWalletResponse'
    ActivityGetWalletOutput:
      $ref: '#/components/schemas/GetWalletResponse'
    WorkflowInstanceHistoryStageInput:
      type: object
      properties:
        GetAccount:
          $ref: '#/components/schemas/ActivityGetAccount'
        CreateTransaction:
          $ref: '#/components/schemas/ActivityCreateTransaction'
        RevertTransaction:
          $ref: '#/components/schemas/ActivityRevertTransaction'
        StripeTransfer:
          $ref: '#/components/schemas/ActivityStripeTransfer'
        GetPayment:
          $ref: '#/components/schemas/ActivityGetPayment'
        ConfirmHold:
          $ref: '#/components/schemas/ActivityConfirmHold'
        CreditWallet:
          $ref: '#/components/schemas/ActivityCreditWallet'
        DebitWallet:
          $ref: '#/components/schemas/ActivityDebitWallet'
        GetWallet:
          $ref: '#/components/schemas/ActivityGetWallet'
        VoidHold:
          $ref: '#/components/schemas/ActivityVoidHold'
    WorkflowInstanceHistoryStageOutput:
      type: object
      properties:
        GetAccount:
          $ref: '#/components/schemas/ActivityGetAccountOutput'
        CreateTransaction:
          $ref: '#/components/schemas/ActivityCreateTransactionOutput'
        RevertTransaction:
          $ref: '#/components/schemas/ActivityRevertTransactionOutput'
        GetPayment:
          $ref: '#/components/schemas/ActivityGetPaymentOutput'
        DebitWallet:
          $ref: '#/components/schemas/ActivityDebitWalletOutput'
        GetWallet:
          $ref: '#/components/schemas/ActivityGetWalletOutput'
  responses:
    ErrorResponse:
      description: General error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
