version: '3'

vars:
  PKG: ./...
  COVERAGE_FILE: coverage.out
  FAILFAST: -failfast
  TIMEOUT: 1m
  RUN: "''"

tasks:
  default:
    cmds:
      - task: generate
      - task: lint
      - task: tests:local

  tests:
    cmds:
      - go test -v {{.FAILFAST}} -coverpkg {{.PKG}} -coverprofile {{.COVERAGE_FILE}} -covermode atomic -timeout {{.TIMEOUT}} {{.PKG}}

  tests:local:
    cmds:
      - >
        go test -v {{.FAILFAST}} -coverpkg {{.PKG}} -coverprofile coverage.out -covermode atomic
        -run {{.RUN}} -timeout {{.TIMEOUT}} {{.PKG}} |
        sed ''/PASS/s//$(printf "\033[32mPASS\033[0m")/'' |
        sed ''/FAIL/s//$(printf "\033[31mFAIL\033[0m")/'' |
        sed ''/RUN/s//$(printf "\033[34mRUN\033[0m")/''

  lint:
    cmds:
    - golangci-lint run -v --fix {{.PKG}}

  generate:
    cmds:
      - go generate {{.PKG}}

  bench:
    cmds:
      - go test -test.bench=. {{.PKG}}
