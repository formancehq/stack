// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransferInitiationStatus string

const (
	TransferInitiationStatusWaitingForValidation TransferInitiationStatus = "WAITING_FOR_VALIDATION"
	TransferInitiationStatusProcessing           TransferInitiationStatus = "PROCESSING"
	TransferInitiationStatusProcessed            TransferInitiationStatus = "PROCESSED"
	TransferInitiationStatusFailed               TransferInitiationStatus = "FAILED"
	TransferInitiationStatusRejected             TransferInitiationStatus = "REJECTED"
	TransferInitiationStatusValidated            TransferInitiationStatus = "VALIDATED"
)

func (e TransferInitiationStatus) ToPointer() *TransferInitiationStatus {
	return &e
}

func (e *TransferInitiationStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WAITING_FOR_VALIDATION":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "PROCESSED":
		fallthrough
	case "FAILED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "VALIDATED":
		*e = TransferInitiationStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferInitiationStatus: %v", v)
	}
}
