// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v2/pkg/utils"
	"time"
)

type BankAccountAdjustment struct {
	AccountID   string    `json:"accountID"`
	ConnectorID string    `json:"connectorID"`
	CreatedAt   time.Time `json:"createdAt"`
	ID          string    `json:"id"`
	Provider    string    `json:"provider"`
}

func (b BankAccountAdjustment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BankAccountAdjustment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BankAccountAdjustment) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *BankAccountAdjustment) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *BankAccountAdjustment) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BankAccountAdjustment) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BankAccountAdjustment) GetProvider() string {
	if o == nil {
		return ""
	}
	return o.Provider
}
