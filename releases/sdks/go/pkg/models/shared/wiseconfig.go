// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v2/pkg/utils"
)

type WiseConfig struct {
	APIKey string `json:"apiKey"`
	Name   string `json:"name"`
	// The frequency at which the connector will try to fetch new BalanceTransaction objects from Wise API.
	//
	PollingPeriod *string `default:"120s" json:"pollingPeriod"`
}

func (w WiseConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WiseConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *WiseConfig) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

func (o *WiseConfig) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *WiseConfig) GetPollingPeriod() *string {
	if o == nil {
		return nil
	}
	return o.PollingPeriod
}
