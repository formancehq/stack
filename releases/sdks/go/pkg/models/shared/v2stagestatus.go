// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/pkg/utils"
	"time"
)

type V2StageStatus struct {
	Error        *string    `json:"error,omitempty"`
	InstanceID   string     `json:"instanceID"`
	Stage        float64    `json:"stage"`
	StartedAt    time.Time  `json:"startedAt"`
	TerminatedAt *time.Time `json:"terminatedAt,omitempty"`
}

func (v V2StageStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *V2StageStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *V2StageStatus) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *V2StageStatus) GetInstanceID() string {
	if o == nil {
		return ""
	}
	return o.InstanceID
}

func (o *V2StageStatus) GetStage() float64 {
	if o == nil {
		return 0.0
	}
	return o.Stage
}

func (o *V2StageStatus) GetStartedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.StartedAt
}

func (o *V2StageStatus) GetTerminatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.TerminatedAt
}
