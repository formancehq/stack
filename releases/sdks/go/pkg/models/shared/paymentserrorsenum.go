// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PaymentsErrorsEnum string

const (
	PaymentsErrorsEnumInternal   PaymentsErrorsEnum = "INTERNAL"
	PaymentsErrorsEnumValidation PaymentsErrorsEnum = "VALIDATION"
	PaymentsErrorsEnumNotFound   PaymentsErrorsEnum = "NOT_FOUND"
)

func (e PaymentsErrorsEnum) ToPointer() *PaymentsErrorsEnum {
	return &e
}
func (e *PaymentsErrorsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INTERNAL":
		fallthrough
	case "VALIDATION":
		fallthrough
	case "NOT_FOUND":
		*e = PaymentsErrorsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentsErrorsEnum: %v", v)
	}
}
