// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/pkg/utils"
	"time"
)

type TaskMoneycorpDescriptor struct {
	AccountID *string `json:"accountID,omitempty"`
	Key       *string `json:"key,omitempty"`
	Name      *string `json:"name,omitempty"`
}

func (o *TaskMoneycorpDescriptor) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *TaskMoneycorpDescriptor) GetKey() *string {
	if o == nil {
		return nil
	}
	return o.Key
}

func (o *TaskMoneycorpDescriptor) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

type TaskMoneycorpState struct {
}

type TaskMoneycorp struct {
	ConnectorID string                  `json:"connectorID"`
	CreatedAt   time.Time               `json:"createdAt"`
	Descriptor  TaskMoneycorpDescriptor `json:"descriptor"`
	Error       *string                 `json:"error,omitempty"`
	ID          string                  `json:"id"`
	State       TaskMoneycorpState      `json:"state"`
	Status      PaymentStatus           `json:"status"`
	UpdatedAt   time.Time               `json:"updatedAt"`
}

func (t TaskMoneycorp) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TaskMoneycorp) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *TaskMoneycorp) GetConnectorID() string {
	if o == nil {
		return ""
	}
	return o.ConnectorID
}

func (o *TaskMoneycorp) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *TaskMoneycorp) GetDescriptor() TaskMoneycorpDescriptor {
	if o == nil {
		return TaskMoneycorpDescriptor{}
	}
	return o.Descriptor
}

func (o *TaskMoneycorp) GetError() *string {
	if o == nil {
		return nil
	}
	return o.Error
}

func (o *TaskMoneycorp) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *TaskMoneycorp) GetState() TaskMoneycorpState {
	if o == nil {
		return TaskMoneycorpState{}
	}
	return o.State
}

func (o *TaskMoneycorp) GetStatus() PaymentStatus {
	if o == nil {
		return PaymentStatus("")
	}
	return o.Status
}

func (o *TaskMoneycorp) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
