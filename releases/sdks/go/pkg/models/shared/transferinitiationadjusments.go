// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/v2/pkg/utils"
	"time"
)

type TransferInitiationAdjusments struct {
	AdjustmentID string                   `json:"adjustmentID"`
	CreatedAt    time.Time                `json:"createdAt"`
	Error        string                   `json:"error"`
	Metadata     map[string]string        `json:"metadata,omitempty"`
	Status       TransferInitiationStatus `json:"status"`
}

func (t TransferInitiationAdjusments) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TransferInitiationAdjusments) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TransferInitiationAdjusments) GetAdjustmentID() string {
	if o == nil {
		return ""
	}
	return o.AdjustmentID
}

func (o *TransferInitiationAdjusments) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *TransferInitiationAdjusments) GetError() string {
	if o == nil {
		return ""
	}
	return o.Error
}

func (o *TransferInitiationAdjusments) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *TransferInitiationAdjusments) GetStatus() TransferInitiationStatus {
	if o == nil {
		return TransferInitiationStatus("")
	}
	return o.Status
}
