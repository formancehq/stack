// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/pkg/utils"
	"math/big"
	"time"
)

type OrchestrationPaymentAdjustmentRaw struct {
}

type OrchestrationPaymentAdjustment struct {
	Absolute bool                              `json:"absolute"`
	Amount   *big.Int                          `json:"amount"`
	Date     time.Time                         `json:"date"`
	Raw      OrchestrationPaymentAdjustmentRaw `json:"raw"`
	Status   OrchestrationPaymentStatus        `json:"status"`
}

func (o OrchestrationPaymentAdjustment) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrchestrationPaymentAdjustment) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrchestrationPaymentAdjustment) GetAbsolute() bool {
	if o == nil {
		return false
	}
	return o.Absolute
}

func (o *OrchestrationPaymentAdjustment) GetAmount() *big.Int {
	if o == nil {
		return big.NewInt(0)
	}
	return o.Amount
}

func (o *OrchestrationPaymentAdjustment) GetDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Date
}

func (o *OrchestrationPaymentAdjustment) GetRaw() OrchestrationPaymentAdjustmentRaw {
	if o == nil {
		return OrchestrationPaymentAdjustmentRaw{}
	}
	return o.Raw
}

func (o *OrchestrationPaymentAdjustment) GetStatus() OrchestrationPaymentStatus {
	if o == nil {
		return OrchestrationPaymentStatus("")
	}
	return o.Status
}
