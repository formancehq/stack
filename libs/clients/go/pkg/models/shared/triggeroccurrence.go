// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/pkg/utils"
	"time"
)

type TriggerOccurrence struct {
	Date               time.Time `json:"date"`
	TriggerID          string    `json:"triggerID"`
	WorkflowInstanceID string    `json:"workflowInstanceID"`
}

func (t TriggerOccurrence) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TriggerOccurrence) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TriggerOccurrence) GetDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.Date
}

func (o *TriggerOccurrence) GetTriggerID() string {
	if o == nil {
		return ""
	}
	return o.TriggerID
}

func (o *TriggerOccurrence) GetWorkflowInstanceID() string {
	if o == nil {
		return ""
	}
	return o.WorkflowInstanceID
}
