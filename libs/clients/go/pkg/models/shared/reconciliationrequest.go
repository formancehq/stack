// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/formancehq/formance-sdk-go/pkg/utils"
	"time"
)

type ReconciliationRequest struct {
	ReconciledAtLedger  time.Time `json:"reconciledAtLedger"`
	ReconciledAtPayment time.Time `json:"reconciledAtPayment"`
}

func (r ReconciliationRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *ReconciliationRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ReconciliationRequest) GetReconciledAtLedger() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ReconciledAtLedger
}

func (o *ReconciliationRequest) GetReconciledAtPayment() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ReconciledAtPayment
}
