// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/formancehq/formance-sdk-go/pkg/utils"
)

type BulkElementResultBulkElementResultError struct {
	ErrorCode        string  `json:"errorCode"`
	ErrorDescription string  `json:"errorDescription"`
	ErrorDetails     *string `json:"errorDetails,omitempty"`
	ResponseType     string  `json:"responseType"`
}

func (o *BulkElementResultBulkElementResultError) GetErrorCode() string {
	if o == nil {
		return ""
	}
	return o.ErrorCode
}

func (o *BulkElementResultBulkElementResultError) GetErrorDescription() string {
	if o == nil {
		return ""
	}
	return o.ErrorDescription
}

func (o *BulkElementResultBulkElementResultError) GetErrorDetails() *string {
	if o == nil {
		return nil
	}
	return o.ErrorDetails
}

func (o *BulkElementResultBulkElementResultError) GetResponseType() string {
	if o == nil {
		return ""
	}
	return o.ResponseType
}

type BulkElementResultBulkElementResultDeleteMetadata struct {
	ResponseType string `json:"responseType"`
}

func (o *BulkElementResultBulkElementResultDeleteMetadata) GetResponseType() string {
	if o == nil {
		return ""
	}
	return o.ResponseType
}

type BulkElementResultBulkElementResultRevertTransaction struct {
	Data         Transaction `json:"data"`
	ResponseType string      `json:"responseType"`
}

func (o *BulkElementResultBulkElementResultRevertTransaction) GetData() Transaction {
	if o == nil {
		return Transaction{}
	}
	return o.Data
}

func (o *BulkElementResultBulkElementResultRevertTransaction) GetResponseType() string {
	if o == nil {
		return ""
	}
	return o.ResponseType
}

type BulkElementResultBulkElementResultAddMetadata struct {
	ResponseType string `json:"responseType"`
}

func (o *BulkElementResultBulkElementResultAddMetadata) GetResponseType() string {
	if o == nil {
		return ""
	}
	return o.ResponseType
}

type BulkElementResultBulkElementResultCreateTransaction struct {
	Data         Transaction `json:"data"`
	ResponseType string      `json:"responseType"`
}

func (o *BulkElementResultBulkElementResultCreateTransaction) GetData() Transaction {
	if o == nil {
		return Transaction{}
	}
	return o.Data
}

func (o *BulkElementResultBulkElementResultCreateTransaction) GetResponseType() string {
	if o == nil {
		return ""
	}
	return o.ResponseType
}

type BulkElementResultType string

const (
	BulkElementResultTypeAddMetadata       BulkElementResultType = "ADD_METADATA"
	BulkElementResultTypeCreateTransaction BulkElementResultType = "CREATE_TRANSACTION"
	BulkElementResultTypeDeleteMetadata    BulkElementResultType = "DELETE_METADATA"
	BulkElementResultTypeError             BulkElementResultType = "ERROR"
	BulkElementResultTypeRevertTransaction BulkElementResultType = "REVERT_TRANSACTION"
)

type BulkElementResult struct {
	BulkElementResultBulkElementResultCreateTransaction *BulkElementResultBulkElementResultCreateTransaction
	BulkElementResultBulkElementResultAddMetadata       *BulkElementResultBulkElementResultAddMetadata
	BulkElementResultBulkElementResultRevertTransaction *BulkElementResultBulkElementResultRevertTransaction
	BulkElementResultBulkElementResultDeleteMetadata    *BulkElementResultBulkElementResultDeleteMetadata
	BulkElementResultBulkElementResultError             *BulkElementResultBulkElementResultError

	Type BulkElementResultType
}

func CreateBulkElementResultAddMetadata(addMetadata BulkElementResultBulkElementResultAddMetadata) BulkElementResult {
	typ := BulkElementResultTypeAddMetadata
	typStr := string(typ)
	addMetadata.ResponseType = typStr

	return BulkElementResult{
		BulkElementResultBulkElementResultAddMetadata: &addMetadata,
		Type: typ,
	}
}

func CreateBulkElementResultCreateTransaction(createTransaction BulkElementResultBulkElementResultCreateTransaction) BulkElementResult {
	typ := BulkElementResultTypeCreateTransaction
	typStr := string(typ)
	createTransaction.ResponseType = typStr

	return BulkElementResult{
		BulkElementResultBulkElementResultCreateTransaction: &createTransaction,
		Type: typ,
	}
}

func CreateBulkElementResultDeleteMetadata(deleteMetadata BulkElementResultBulkElementResultDeleteMetadata) BulkElementResult {
	typ := BulkElementResultTypeDeleteMetadata
	typStr := string(typ)
	deleteMetadata.ResponseType = typStr

	return BulkElementResult{
		BulkElementResultBulkElementResultDeleteMetadata: &deleteMetadata,
		Type: typ,
	}
}

func CreateBulkElementResultError(error BulkElementResultBulkElementResultError) BulkElementResult {
	typ := BulkElementResultTypeError
	typStr := string(typ)
	error.ResponseType = typStr

	return BulkElementResult{
		BulkElementResultBulkElementResultError: &error,
		Type:                                    typ,
	}
}

func CreateBulkElementResultRevertTransaction(revertTransaction BulkElementResultBulkElementResultRevertTransaction) BulkElementResult {
	typ := BulkElementResultTypeRevertTransaction
	typStr := string(typ)
	revertTransaction.ResponseType = typStr

	return BulkElementResult{
		BulkElementResultBulkElementResultRevertTransaction: &revertTransaction,
		Type: typ,
	}
}

func (u *BulkElementResult) UnmarshalJSON(data []byte) error {

	type discriminator struct {
		ResponseType string
	}

	dis := new(discriminator)
	if err := json.Unmarshal(data, &dis); err != nil {
		return fmt.Errorf("could not unmarshal discriminator: %w", err)
	}

	switch dis.ResponseType {
	case "ADD_METADATA":
		bulkElementResultBulkElementResultAddMetadata := new(BulkElementResultBulkElementResultAddMetadata)
		if err := utils.UnmarshalJSON(data, &bulkElementResultBulkElementResultAddMetadata, "", true, true); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.BulkElementResultBulkElementResultAddMetadata = bulkElementResultBulkElementResultAddMetadata
		u.Type = BulkElementResultTypeAddMetadata
		return nil
	case "CREATE_TRANSACTION":
		bulkElementResultBulkElementResultCreateTransaction := new(BulkElementResultBulkElementResultCreateTransaction)
		if err := utils.UnmarshalJSON(data, &bulkElementResultBulkElementResultCreateTransaction, "", true, true); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.BulkElementResultBulkElementResultCreateTransaction = bulkElementResultBulkElementResultCreateTransaction
		u.Type = BulkElementResultTypeCreateTransaction
		return nil
	case "DELETE_METADATA":
		bulkElementResultBulkElementResultDeleteMetadata := new(BulkElementResultBulkElementResultDeleteMetadata)
		if err := utils.UnmarshalJSON(data, &bulkElementResultBulkElementResultDeleteMetadata, "", true, true); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.BulkElementResultBulkElementResultDeleteMetadata = bulkElementResultBulkElementResultDeleteMetadata
		u.Type = BulkElementResultTypeDeleteMetadata
		return nil
	case "ERROR":
		bulkElementResultBulkElementResultError := new(BulkElementResultBulkElementResultError)
		if err := utils.UnmarshalJSON(data, &bulkElementResultBulkElementResultError, "", true, true); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.BulkElementResultBulkElementResultError = bulkElementResultBulkElementResultError
		u.Type = BulkElementResultTypeError
		return nil
	case "REVERT_TRANSACTION":
		bulkElementResultBulkElementResultRevertTransaction := new(BulkElementResultBulkElementResultRevertTransaction)
		if err := utils.UnmarshalJSON(data, &bulkElementResultBulkElementResultRevertTransaction, "", true, true); err != nil {
			return fmt.Errorf("could not unmarshal expected type: %w", err)
		}

		u.BulkElementResultBulkElementResultRevertTransaction = bulkElementResultBulkElementResultRevertTransaction
		u.Type = BulkElementResultTypeRevertTransaction
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u BulkElementResult) MarshalJSON() ([]byte, error) {
	if u.BulkElementResultBulkElementResultCreateTransaction != nil {
		return utils.MarshalJSON(u.BulkElementResultBulkElementResultCreateTransaction, "", true)
	}

	if u.BulkElementResultBulkElementResultAddMetadata != nil {
		return utils.MarshalJSON(u.BulkElementResultBulkElementResultAddMetadata, "", true)
	}

	if u.BulkElementResultBulkElementResultRevertTransaction != nil {
		return utils.MarshalJSON(u.BulkElementResultBulkElementResultRevertTransaction, "", true)
	}

	if u.BulkElementResultBulkElementResultDeleteMetadata != nil {
		return utils.MarshalJSON(u.BulkElementResultBulkElementResultDeleteMetadata, "", true)
	}

	if u.BulkElementResultBulkElementResultError != nil {
		return utils.MarshalJSON(u.BulkElementResultBulkElementResultError, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}
